2025-04-18 16:30:09,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:30:09,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:30:09,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:30:09,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:31:00,561:INFO:Initializing load_model()
2025-04-18 16:31:00,561:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:31:47,956:INFO:Initializing load_model()
2025-04-18 16:31:47,956:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:31:48,121:INFO:Initializing predict_model()
2025-04-18 16:31:48,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025E9650D750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025EBBFEFBA0>)
2025-04-18 16:31:48,121:INFO:Checking exceptions
2025-04-18 16:31:48,121:INFO:Preloading libraries
2025-04-18 16:31:48,132:INFO:Set up data.
2025-04-18 16:31:48,142:INFO:Set up index.
2025-04-18 16:33:11,097:INFO:Initializing load_model()
2025-04-18 16:33:11,097:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:33:11,239:INFO:Initializing predict_model()
2025-04-18 16:33:11,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025EBC08B910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025EF43559E0>)
2025-04-18 16:33:11,239:INFO:Checking exceptions
2025-04-18 16:33:11,239:INFO:Preloading libraries
2025-04-18 16:33:11,239:INFO:Set up data.
2025-04-18 16:33:11,242:INFO:Set up index.
2025-04-18 16:34:07,140:INFO:Initializing load_model()
2025-04-18 16:34:07,140:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:34:07,244:INFO:Initializing predict_model()
2025-04-18 16:34:07,249:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025EF1497DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025EBC2B4400>)
2025-04-18 16:34:07,249:INFO:Checking exceptions
2025-04-18 16:34:07,249:INFO:Preloading libraries
2025-04-18 16:34:07,249:INFO:Set up data.
2025-04-18 16:34:07,253:INFO:Set up index.
2025-04-18 16:36:04,452:INFO:Initializing load_model()
2025-04-18 16:36:04,452:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:36:04,526:INFO:Initializing predict_model()
2025-04-18 16:36:04,526:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025EBC32E6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025EBC45B600>)
2025-04-18 16:36:04,526:INFO:Checking exceptions
2025-04-18 16:36:04,526:INFO:Preloading libraries
2025-04-18 16:36:04,526:INFO:Set up data.
2025-04-18 16:36:04,526:INFO:Set up index.
2025-04-18 16:37:18,629:INFO:Initializing load_model()
2025-04-18 16:37:18,629:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:37:18,699:INFO:Initializing predict_model()
2025-04-18 16:37:18,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025EBC088210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025EC078B380>)
2025-04-18 16:37:18,699:INFO:Checking exceptions
2025-04-18 16:37:18,699:INFO:Preloading libraries
2025-04-18 16:37:18,699:INFO:Set up data.
2025-04-18 16:37:18,699:INFO:Set up index.
2025-04-18 16:41:59,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:41:59,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:41:59,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:41:59,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-18 16:43:12,269:INFO:Initializing load_model()
2025-04-18 16:43:12,269:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:43:12,422:INFO:Initializing predict_model()
2025-04-18 16:43:12,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E253C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75AA8D60>)
2025-04-18 16:43:12,424:INFO:Checking exceptions
2025-04-18 16:43:12,424:INFO:Preloading libraries
2025-04-18 16:43:12,424:INFO:Set up data.
2025-04-18 16:43:12,424:INFO:Set up index.
2025-04-18 16:44:19,084:INFO:Initializing load_model()
2025-04-18 16:44:19,084:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:44:19,154:INFO:Initializing predict_model()
2025-04-18 16:44:19,154:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788B8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789468E0>)
2025-04-18 16:44:19,154:INFO:Checking exceptions
2025-04-18 16:44:19,154:INFO:Preloading libraries
2025-04-18 16:44:19,160:INFO:Set up data.
2025-04-18 16:44:19,160:INFO:Set up index.
2025-04-18 16:45:12,412:INFO:Initializing load_model()
2025-04-18 16:45:12,412:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:45:12,482:INFO:Initializing predict_model()
2025-04-18 16:45:12,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EDA3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B7893DDA0>)
2025-04-18 16:45:12,482:INFO:Checking exceptions
2025-04-18 16:45:12,482:INFO:Preloading libraries
2025-04-18 16:45:12,482:INFO:Set up data.
2025-04-18 16:45:12,488:INFO:Set up index.
2025-04-18 16:46:46,951:INFO:Initializing load_model()
2025-04-18 16:46:46,952:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:46:47,029:INFO:Initializing predict_model()
2025-04-18 16:46:47,029:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F51990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75DA3EC0>)
2025-04-18 16:46:47,029:INFO:Checking exceptions
2025-04-18 16:46:47,029:INFO:Preloading libraries
2025-04-18 16:46:47,034:INFO:Set up data.
2025-04-18 16:46:47,036:INFO:Set up index.
2025-04-18 16:47:06,457:INFO:Initializing load_model()
2025-04-18 16:47:06,457:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:47:06,542:INFO:Initializing predict_model()
2025-04-18 16:47:06,542:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78929D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B2B9B77E0>)
2025-04-18 16:47:06,542:INFO:Checking exceptions
2025-04-18 16:47:06,542:INFO:Preloading libraries
2025-04-18 16:47:06,542:INFO:Set up data.
2025-04-18 16:47:06,546:INFO:Set up index.
2025-04-18 16:48:57,314:INFO:Initializing load_model()
2025-04-18 16:48:57,314:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:48:57,376:INFO:Initializing predict_model()
2025-04-18 16:48:57,376:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788FF810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B7893CE00>)
2025-04-18 16:48:57,376:INFO:Checking exceptions
2025-04-18 16:48:57,376:INFO:Preloading libraries
2025-04-18 16:48:57,376:INFO:Set up data.
2025-04-18 16:48:57,376:INFO:Set up index.
2025-04-18 16:49:08,767:INFO:Initializing load_model()
2025-04-18 16:49:08,767:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 16:49:08,847:INFO:Initializing predict_model()
2025-04-18 16:49:08,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7602CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F834C0>)
2025-04-18 16:49:08,847:INFO:Checking exceptions
2025-04-18 16:49:08,847:INFO:Preloading libraries
2025-04-18 16:49:08,847:INFO:Set up data.
2025-04-18 16:49:08,847:INFO:Set up index.
2025-04-18 17:07:33,889:INFO:Initializing load_model()
2025-04-18 17:07:33,889:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:07:33,960:INFO:Initializing predict_model()
2025-04-18 17:07:33,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788E3050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FD0540>)
2025-04-18 17:07:33,960:INFO:Checking exceptions
2025-04-18 17:07:33,960:INFO:Preloading libraries
2025-04-18 17:07:33,960:INFO:Set up data.
2025-04-18 17:07:33,960:INFO:Set up index.
2025-04-18 17:08:16,729:INFO:Initializing load_model()
2025-04-18 17:08:16,729:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:08:16,792:INFO:Initializing predict_model()
2025-04-18 17:08:16,796:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E09A390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75DA14E0>)
2025-04-18 17:08:16,796:INFO:Checking exceptions
2025-04-18 17:08:16,796:INFO:Preloading libraries
2025-04-18 17:08:16,796:INFO:Set up data.
2025-04-18 17:08:16,796:INFO:Set up index.
2025-04-18 17:08:57,570:INFO:Initializing load_model()
2025-04-18 17:08:57,570:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:08:57,645:INFO:Initializing predict_model()
2025-04-18 17:08:57,645:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E0C9C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B526E7BA0>)
2025-04-18 17:08:57,660:INFO:Checking exceptions
2025-04-18 17:08:57,660:INFO:Preloading libraries
2025-04-18 17:08:57,660:INFO:Set up data.
2025-04-18 17:08:57,660:INFO:Set up index.
2025-04-18 17:10:15,194:INFO:Initializing load_model()
2025-04-18 17:10:15,194:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:10:15,258:INFO:Initializing predict_model()
2025-04-18 17:10:15,258:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78928790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75DA1580>)
2025-04-18 17:10:15,258:INFO:Checking exceptions
2025-04-18 17:10:15,258:INFO:Preloading libraries
2025-04-18 17:10:15,258:INFO:Set up data.
2025-04-18 17:10:15,258:INFO:Set up index.
2025-04-18 17:10:45,456:INFO:Initializing load_model()
2025-04-18 17:10:45,464:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:10:45,525:INFO:Initializing predict_model()
2025-04-18 17:10:45,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788E18D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78927740>)
2025-04-18 17:10:45,525:INFO:Checking exceptions
2025-04-18 17:10:45,525:INFO:Preloading libraries
2025-04-18 17:10:45,525:INFO:Set up data.
2025-04-18 17:10:45,525:INFO:Set up index.
2025-04-18 17:11:05,622:INFO:Initializing load_model()
2025-04-18 17:11:05,622:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:11:05,680:INFO:Initializing predict_model()
2025-04-18 17:11:05,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788D6D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78970720>)
2025-04-18 17:11:05,680:INFO:Checking exceptions
2025-04-18 17:11:05,680:INFO:Preloading libraries
2025-04-18 17:11:05,680:INFO:Set up data.
2025-04-18 17:11:05,687:INFO:Set up index.
2025-04-18 17:12:02,673:INFO:Initializing load_model()
2025-04-18 17:12:02,673:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:12:02,756:INFO:Initializing predict_model()
2025-04-18 17:12:02,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75ECFC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F2FF60>)
2025-04-18 17:12:02,756:INFO:Checking exceptions
2025-04-18 17:12:02,756:INFO:Preloading libraries
2025-04-18 17:12:02,756:INFO:Set up data.
2025-04-18 17:12:02,764:INFO:Set up index.
2025-04-18 17:12:45,080:INFO:Initializing load_model()
2025-04-18 17:12:45,085:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:12:45,161:INFO:Initializing predict_model()
2025-04-18 17:12:45,161:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75E7B210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75DA14E0>)
2025-04-18 17:12:45,161:INFO:Checking exceptions
2025-04-18 17:12:45,161:INFO:Preloading libraries
2025-04-18 17:12:45,161:INFO:Set up data.
2025-04-18 17:12:45,161:INFO:Set up index.
2025-04-18 17:13:20,189:INFO:Initializing load_model()
2025-04-18 17:13:20,189:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:13:20,260:INFO:Initializing predict_model()
2025-04-18 17:13:20,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FD8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789277E0>)
2025-04-18 17:13:20,260:INFO:Checking exceptions
2025-04-18 17:13:20,260:INFO:Preloading libraries
2025-04-18 17:13:20,260:INFO:Set up data.
2025-04-18 17:13:20,260:INFO:Set up index.
2025-04-18 17:13:34,831:INFO:Initializing load_model()
2025-04-18 17:13:34,831:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:13:34,905:INFO:Initializing predict_model()
2025-04-18 17:13:34,905:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75E56910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F80720>)
2025-04-18 17:13:34,905:INFO:Checking exceptions
2025-04-18 17:13:34,905:INFO:Preloading libraries
2025-04-18 17:13:34,905:INFO:Set up data.
2025-04-18 17:13:34,908:INFO:Set up index.
2025-04-18 17:14:08,697:INFO:Initializing load_model()
2025-04-18 17:14:08,697:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:14:08,778:INFO:Initializing predict_model()
2025-04-18 17:14:08,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F84DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE0F40>)
2025-04-18 17:14:08,778:INFO:Checking exceptions
2025-04-18 17:14:08,778:INFO:Preloading libraries
2025-04-18 17:14:08,778:INFO:Set up data.
2025-04-18 17:14:08,778:INFO:Set up index.
2025-04-18 17:14:20,893:INFO:Initializing load_model()
2025-04-18 17:14:20,893:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:14:20,960:INFO:Initializing predict_model()
2025-04-18 17:14:20,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F875D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE8E00>)
2025-04-18 17:14:20,960:INFO:Checking exceptions
2025-04-18 17:14:20,960:INFO:Preloading libraries
2025-04-18 17:14:20,960:INFO:Set up data.
2025-04-18 17:14:20,967:INFO:Set up index.
2025-04-18 17:15:20,101:INFO:Initializing load_model()
2025-04-18 17:15:20,101:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:15:20,184:INFO:Initializing predict_model()
2025-04-18 17:15:20,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EBCF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75CEEB60>)
2025-04-18 17:15:20,184:INFO:Checking exceptions
2025-04-18 17:15:20,192:INFO:Preloading libraries
2025-04-18 17:15:20,192:INFO:Set up data.
2025-04-18 17:15:20,198:INFO:Set up index.
2025-04-18 17:16:43,849:INFO:Initializing load_model()
2025-04-18 17:16:43,849:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:16:43,925:INFO:Initializing predict_model()
2025-04-18 17:16:43,925:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E0CBC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B754972E0>)
2025-04-18 17:16:43,925:INFO:Checking exceptions
2025-04-18 17:16:43,925:INFO:Preloading libraries
2025-04-18 17:16:43,925:INFO:Set up data.
2025-04-18 17:16:43,932:INFO:Set up index.
2025-04-18 17:21:25,113:INFO:Initializing load_model()
2025-04-18 17:21:25,113:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:21:25,197:INFO:Initializing predict_model()
2025-04-18 17:21:25,197:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B50410090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEB7E0>)
2025-04-18 17:21:25,198:INFO:Checking exceptions
2025-04-18 17:21:25,198:INFO:Preloading libraries
2025-04-18 17:21:25,198:INFO:Set up data.
2025-04-18 17:21:25,201:INFO:Set up index.
2025-04-18 17:22:25,724:INFO:Initializing load_model()
2025-04-18 17:22:25,724:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:22:25,807:INFO:Initializing predict_model()
2025-04-18 17:22:25,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7892A990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F5B7E0>)
2025-04-18 17:22:25,807:INFO:Checking exceptions
2025-04-18 17:22:25,807:INFO:Preloading libraries
2025-04-18 17:22:25,807:INFO:Set up data.
2025-04-18 17:22:25,839:INFO:Set up index.
2025-04-18 17:23:36,283:INFO:Initializing load_model()
2025-04-18 17:23:36,283:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:23:36,354:INFO:Initializing predict_model()
2025-04-18 17:23:36,354:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7893AF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEB100>)
2025-04-18 17:23:36,354:INFO:Checking exceptions
2025-04-18 17:23:36,354:INFO:Preloading libraries
2025-04-18 17:23:36,355:INFO:Set up data.
2025-04-18 17:23:36,359:INFO:Set up index.
2025-04-18 17:25:52,878:INFO:Initializing load_model()
2025-04-18 17:25:52,878:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:25:52,942:INFO:Initializing predict_model()
2025-04-18 17:25:52,942:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7893B550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A591C0>)
2025-04-18 17:25:52,942:INFO:Checking exceptions
2025-04-18 17:25:52,942:INFO:Preloading libraries
2025-04-18 17:25:52,942:INFO:Set up data.
2025-04-18 17:25:52,942:INFO:Set up index.
2025-04-18 17:26:49,054:INFO:Initializing load_model()
2025-04-18 17:26:49,054:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:26:49,143:INFO:Initializing predict_model()
2025-04-18 17:26:49,145:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788B8F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A59440>)
2025-04-18 17:26:49,145:INFO:Checking exceptions
2025-04-18 17:26:49,145:INFO:Preloading libraries
2025-04-18 17:26:49,145:INFO:Set up data.
2025-04-18 17:26:49,148:INFO:Set up index.
2025-04-18 17:27:11,390:INFO:Initializing load_model()
2025-04-18 17:27:11,390:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:27:11,462:INFO:Initializing predict_model()
2025-04-18 17:27:11,465:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F69FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75E84400>)
2025-04-18 17:27:11,465:INFO:Checking exceptions
2025-04-18 17:27:11,465:INFO:Preloading libraries
2025-04-18 17:27:11,465:INFO:Set up data.
2025-04-18 17:27:11,465:INFO:Set up index.
2025-04-18 17:28:47,804:INFO:Initializing load_model()
2025-04-18 17:28:47,804:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:28:47,867:INFO:Initializing predict_model()
2025-04-18 17:28:47,867:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F63590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE05E0>)
2025-04-18 17:28:47,867:INFO:Checking exceptions
2025-04-18 17:28:47,867:INFO:Preloading libraries
2025-04-18 17:28:47,867:INFO:Set up data.
2025-04-18 17:28:47,867:INFO:Set up index.
2025-04-18 17:28:59,663:INFO:Initializing load_model()
2025-04-18 17:28:59,663:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:28:59,743:INFO:Initializing predict_model()
2025-04-18 17:28:59,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F63C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A58B80>)
2025-04-18 17:28:59,743:INFO:Checking exceptions
2025-04-18 17:28:59,743:INFO:Preloading libraries
2025-04-18 17:28:59,744:INFO:Set up data.
2025-04-18 17:28:59,747:INFO:Set up index.
2025-04-18 17:30:57,548:INFO:Initializing load_model()
2025-04-18 17:30:57,548:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:30:57,621:INFO:Initializing predict_model()
2025-04-18 17:30:57,621:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75E68350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A59A80>)
2025-04-18 17:30:57,621:INFO:Checking exceptions
2025-04-18 17:30:57,621:INFO:Preloading libraries
2025-04-18 17:30:57,621:INFO:Set up data.
2025-04-18 17:30:57,626:INFO:Set up index.
2025-04-18 17:31:05,338:INFO:Initializing load_model()
2025-04-18 17:31:05,338:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:31:05,415:INFO:Initializing predict_model()
2025-04-18 17:31:05,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FD54D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE9580>)
2025-04-18 17:31:05,417:INFO:Checking exceptions
2025-04-18 17:31:05,417:INFO:Preloading libraries
2025-04-18 17:31:05,417:INFO:Set up data.
2025-04-18 17:31:05,417:INFO:Set up index.
2025-04-18 17:32:05,248:INFO:Initializing load_model()
2025-04-18 17:32:05,248:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:32:05,350:INFO:Initializing predict_model()
2025-04-18 17:32:05,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FD70D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A5BA60>)
2025-04-18 17:32:05,350:INFO:Checking exceptions
2025-04-18 17:32:05,350:INFO:Preloading libraries
2025-04-18 17:32:05,350:INFO:Set up data.
2025-04-18 17:32:05,350:INFO:Set up index.
2025-04-18 17:32:27,391:INFO:Initializing load_model()
2025-04-18 17:32:27,391:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:32:27,476:INFO:Initializing predict_model()
2025-04-18 17:32:27,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75D1ED10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A5B420>)
2025-04-18 17:32:27,477:INFO:Checking exceptions
2025-04-18 17:32:27,477:INFO:Preloading libraries
2025-04-18 17:32:27,477:INFO:Set up data.
2025-04-18 17:32:27,480:INFO:Set up index.
2025-04-18 17:32:58,902:INFO:Initializing load_model()
2025-04-18 17:32:58,914:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:32:58,987:INFO:Initializing predict_model()
2025-04-18 17:32:58,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76059490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A58D60>)
2025-04-18 17:32:58,987:INFO:Checking exceptions
2025-04-18 17:32:58,987:INFO:Preloading libraries
2025-04-18 17:32:58,987:INFO:Set up data.
2025-04-18 17:32:58,987:INFO:Set up index.
2025-04-18 17:35:12,611:INFO:Initializing load_model()
2025-04-18 17:35:12,611:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:35:12,693:INFO:Initializing predict_model()
2025-04-18 17:35:12,693:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E0CBBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE00E0>)
2025-04-18 17:35:12,693:INFO:Checking exceptions
2025-04-18 17:35:12,693:INFO:Preloading libraries
2025-04-18 17:35:12,693:INFO:Set up data.
2025-04-18 17:35:12,697:INFO:Set up index.
2025-04-18 17:37:01,570:INFO:Initializing load_model()
2025-04-18 17:37:01,570:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:37:01,632:INFO:Initializing predict_model()
2025-04-18 17:37:01,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75AB2250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A59080>)
2025-04-18 17:37:01,648:INFO:Checking exceptions
2025-04-18 17:37:01,648:INFO:Preloading libraries
2025-04-18 17:37:01,648:INFO:Set up data.
2025-04-18 17:37:01,648:INFO:Set up index.
2025-04-18 17:37:16,697:INFO:Initializing load_model()
2025-04-18 17:37:16,697:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:37:16,776:INFO:Initializing predict_model()
2025-04-18 17:37:16,776:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FDFB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A5AAC0>)
2025-04-18 17:37:16,776:INFO:Checking exceptions
2025-04-18 17:37:16,776:INFO:Preloading libraries
2025-04-18 17:37:16,776:INFO:Set up data.
2025-04-18 17:37:16,776:INFO:Set up index.
2025-04-18 17:38:18,049:INFO:Initializing load_model()
2025-04-18 17:38:18,049:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:38:18,129:INFO:Initializing predict_model()
2025-04-18 17:38:18,129:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E09B0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A5B1A0>)
2025-04-18 17:38:18,129:INFO:Checking exceptions
2025-04-18 17:38:18,129:INFO:Preloading libraries
2025-04-18 17:38:18,129:INFO:Set up data.
2025-04-18 17:38:18,142:INFO:Set up index.
2025-04-18 17:40:34,465:INFO:Initializing load_model()
2025-04-18 17:40:34,467:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:40:34,547:INFO:Initializing predict_model()
2025-04-18 17:40:34,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F1A650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789E37E0>)
2025-04-18 17:40:34,547:INFO:Checking exceptions
2025-04-18 17:40:34,547:INFO:Preloading libraries
2025-04-18 17:40:34,547:INFO:Set up data.
2025-04-18 17:40:34,547:INFO:Set up index.
2025-04-18 17:45:45,331:INFO:Initializing load_model()
2025-04-18 17:45:45,331:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:45:45,388:INFO:Initializing predict_model()
2025-04-18 17:45:45,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7600CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A7C400>)
2025-04-18 17:45:45,388:INFO:Checking exceptions
2025-04-18 17:45:45,388:INFO:Preloading libraries
2025-04-18 17:45:45,388:INFO:Set up data.
2025-04-18 17:45:45,400:INFO:Set up index.
2025-04-18 17:46:17,872:INFO:Initializing load_model()
2025-04-18 17:46:17,872:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:46:17,941:INFO:Initializing predict_model()
2025-04-18 17:46:17,941:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B760DF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B50C03060>)
2025-04-18 17:46:17,941:INFO:Checking exceptions
2025-04-18 17:46:17,941:INFO:Preloading libraries
2025-04-18 17:46:17,941:INFO:Set up data.
2025-04-18 17:46:17,941:INFO:Set up index.
2025-04-18 17:47:04,406:INFO:Initializing load_model()
2025-04-18 17:47:04,406:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:47:04,473:INFO:Initializing predict_model()
2025-04-18 17:47:04,473:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78A634D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789DF6A0>)
2025-04-18 17:47:04,473:INFO:Checking exceptions
2025-04-18 17:47:04,473:INFO:Preloading libraries
2025-04-18 17:47:04,473:INFO:Set up data.
2025-04-18 17:47:04,479:INFO:Set up index.
2025-04-18 17:48:32,220:INFO:Initializing load_model()
2025-04-18 17:48:32,220:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:48:32,282:INFO:Initializing predict_model()
2025-04-18 17:48:32,282:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7600BE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A36660>)
2025-04-18 17:48:32,282:INFO:Checking exceptions
2025-04-18 17:48:32,282:INFO:Preloading libraries
2025-04-18 17:48:32,282:INFO:Set up data.
2025-04-18 17:48:32,292:INFO:Set up index.
2025-04-18 17:55:19,205:INFO:Initializing load_model()
2025-04-18 17:55:19,205:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:55:19,282:INFO:Initializing predict_model()
2025-04-18 17:55:19,282:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789B4910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0D8A0>)
2025-04-18 17:55:19,284:INFO:Checking exceptions
2025-04-18 17:55:19,284:INFO:Preloading libraries
2025-04-18 17:55:19,284:INFO:Set up data.
2025-04-18 17:55:19,286:INFO:Set up index.
2025-04-18 17:56:07,556:INFO:Initializing load_model()
2025-04-18 17:56:07,556:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:56:07,637:INFO:Initializing predict_model()
2025-04-18 17:56:07,644:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EE06D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE9EE0>)
2025-04-18 17:56:07,644:INFO:Checking exceptions
2025-04-18 17:56:07,644:INFO:Preloading libraries
2025-04-18 17:56:07,645:INFO:Set up data.
2025-04-18 17:56:07,646:INFO:Set up index.
2025-04-18 17:57:26,106:INFO:Initializing load_model()
2025-04-18 17:57:26,106:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 17:57:26,232:INFO:Initializing predict_model()
2025-04-18 17:57:26,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78901D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B50214A40>)
2025-04-18 17:57:26,232:INFO:Checking exceptions
2025-04-18 17:57:26,232:INFO:Preloading libraries
2025-04-18 17:57:26,232:INFO:Set up data.
2025-04-18 17:57:26,244:INFO:Set up index.
2025-04-18 18:00:49,824:INFO:Initializing load_model()
2025-04-18 18:00:49,824:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 18:00:49,908:INFO:Initializing predict_model()
2025-04-18 18:00:49,908:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F78C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE9580>)
2025-04-18 18:00:49,908:INFO:Checking exceptions
2025-04-18 18:00:49,908:INFO:Preloading libraries
2025-04-18 18:00:49,908:INFO:Set up data.
2025-04-18 18:00:49,917:INFO:Set up index.
2025-04-18 18:01:27,151:INFO:Initializing load_model()
2025-04-18 18:01:27,154:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 18:01:27,232:INFO:Initializing predict_model()
2025-04-18 18:01:27,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F9E290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B2B2FF060>)
2025-04-18 18:01:27,232:INFO:Checking exceptions
2025-04-18 18:01:27,232:INFO:Preloading libraries
2025-04-18 18:01:27,234:INFO:Set up data.
2025-04-18 18:01:27,236:INFO:Set up index.
2025-04-18 18:16:33,240:INFO:Initializing load_model()
2025-04-18 18:16:33,240:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 18:16:33,314:INFO:Initializing predict_model()
2025-04-18 18:16:33,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788DF950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A4EF20>)
2025-04-18 18:16:33,314:INFO:Checking exceptions
2025-04-18 18:16:33,314:INFO:Preloading libraries
2025-04-18 18:16:33,314:INFO:Set up data.
2025-04-18 18:16:33,314:INFO:Set up index.
2025-04-18 18:17:27,543:INFO:Initializing load_model()
2025-04-18 18:17:27,543:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 18:17:27,620:INFO:Initializing predict_model()
2025-04-18 18:17:27,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788D62D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B50C03060>)
2025-04-18 18:17:27,620:INFO:Checking exceptions
2025-04-18 18:17:27,620:INFO:Preloading libraries
2025-04-18 18:17:27,622:INFO:Set up data.
2025-04-18 18:17:27,625:INFO:Set up index.
2025-04-18 18:18:04,167:INFO:Initializing load_model()
2025-04-18 18:18:04,167:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 18:18:04,259:INFO:Initializing predict_model()
2025-04-18 18:18:04,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788DEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A4C540>)
2025-04-18 18:18:04,262:INFO:Checking exceptions
2025-04-18 18:18:04,262:INFO:Preloading libraries
2025-04-18 18:18:04,262:INFO:Set up data.
2025-04-18 18:18:04,267:INFO:Set up index.
2025-04-18 19:31:49,147:INFO:Initializing load_model()
2025-04-18 19:31:49,147:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:31:49,233:INFO:Initializing predict_model()
2025-04-18 19:31:49,233:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EE0C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEADE0>)
2025-04-18 19:31:49,233:INFO:Checking exceptions
2025-04-18 19:31:49,233:INFO:Preloading libraries
2025-04-18 19:31:49,233:INFO:Set up data.
2025-04-18 19:31:49,235:INFO:Set up index.
2025-04-18 19:33:49,196:INFO:Initializing load_model()
2025-04-18 19:33:49,196:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:33:49,260:INFO:Initializing predict_model()
2025-04-18 19:33:49,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F9F950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F5A5C0>)
2025-04-18 19:33:49,260:INFO:Checking exceptions
2025-04-18 19:33:49,260:INFO:Preloading libraries
2025-04-18 19:33:49,260:INFO:Set up data.
2025-04-18 19:33:49,269:INFO:Set up index.
2025-04-18 19:34:58,022:INFO:Initializing load_model()
2025-04-18 19:34:58,022:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:34:58,096:INFO:Initializing predict_model()
2025-04-18 19:34:58,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F1BD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A37D80>)
2025-04-18 19:34:58,098:INFO:Checking exceptions
2025-04-18 19:34:58,098:INFO:Preloading libraries
2025-04-18 19:34:58,098:INFO:Set up data.
2025-04-18 19:34:58,100:INFO:Set up index.
2025-04-18 19:35:41,374:INFO:Initializing load_model()
2025-04-18 19:35:41,374:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:35:41,455:INFO:Initializing predict_model()
2025-04-18 19:35:41,455:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789DA450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789D09A0>)
2025-04-18 19:35:41,455:INFO:Checking exceptions
2025-04-18 19:35:41,455:INFO:Preloading libraries
2025-04-18 19:35:41,455:INFO:Set up data.
2025-04-18 19:35:41,455:INFO:Set up index.
2025-04-18 19:36:05,230:INFO:Initializing load_model()
2025-04-18 19:36:05,230:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:36:05,312:INFO:Initializing predict_model()
2025-04-18 19:36:05,312:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76026DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A75260>)
2025-04-18 19:36:05,312:INFO:Checking exceptions
2025-04-18 19:36:05,312:INFO:Preloading libraries
2025-04-18 19:36:05,316:INFO:Set up data.
2025-04-18 19:36:05,319:INFO:Set up index.
2025-04-18 19:36:30,576:INFO:Initializing load_model()
2025-04-18 19:36:30,576:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:36:30,698:INFO:Initializing predict_model()
2025-04-18 19:36:30,698:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7891A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789BA8E0>)
2025-04-18 19:36:30,698:INFO:Checking exceptions
2025-04-18 19:36:30,698:INFO:Preloading libraries
2025-04-18 19:36:30,698:INFO:Set up data.
2025-04-18 19:36:30,706:INFO:Set up index.
2025-04-18 19:36:47,031:INFO:Initializing load_model()
2025-04-18 19:36:47,031:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:36:47,100:INFO:Initializing predict_model()
2025-04-18 19:36:47,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7610CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A4C540>)
2025-04-18 19:36:47,100:INFO:Checking exceptions
2025-04-18 19:36:47,100:INFO:Preloading libraries
2025-04-18 19:36:47,100:INFO:Set up data.
2025-04-18 19:36:47,100:INFO:Set up index.
2025-04-18 19:37:22,948:INFO:Initializing load_model()
2025-04-18 19:37:22,948:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:37:23,016:INFO:Initializing predict_model()
2025-04-18 19:37:23,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788DF510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0ED40>)
2025-04-18 19:37:23,016:INFO:Checking exceptions
2025-04-18 19:37:23,016:INFO:Preloading libraries
2025-04-18 19:37:23,016:INFO:Set up data.
2025-04-18 19:37:23,029:INFO:Set up index.
2025-04-18 19:38:05,056:INFO:Initializing load_model()
2025-04-18 19:38:05,056:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:38:05,116:INFO:Initializing predict_model()
2025-04-18 19:38:05,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B760F4E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789BB380>)
2025-04-18 19:38:05,116:INFO:Checking exceptions
2025-04-18 19:38:05,116:INFO:Preloading libraries
2025-04-18 19:38:05,122:INFO:Set up data.
2025-04-18 19:38:05,124:INFO:Set up index.
2025-04-18 19:38:29,349:INFO:Initializing load_model()
2025-04-18 19:38:29,349:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:38:29,418:INFO:Initializing predict_model()
2025-04-18 19:38:29,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76010410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789D3D80>)
2025-04-18 19:38:29,418:INFO:Checking exceptions
2025-04-18 19:38:29,418:INFO:Preloading libraries
2025-04-18 19:38:29,419:INFO:Set up data.
2025-04-18 19:38:29,419:INFO:Set up index.
2025-04-18 19:40:47,964:INFO:Initializing load_model()
2025-04-18 19:40:47,964:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:40:48,028:INFO:Initializing predict_model()
2025-04-18 19:40:48,035:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78918410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE96C0>)
2025-04-18 19:40:48,035:INFO:Checking exceptions
2025-04-18 19:40:48,035:INFO:Preloading libraries
2025-04-18 19:40:48,035:INFO:Set up data.
2025-04-18 19:40:48,038:INFO:Set up index.
2025-04-18 19:42:44,289:INFO:Initializing load_model()
2025-04-18 19:42:44,289:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:42:44,357:INFO:Initializing predict_model()
2025-04-18 19:42:44,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7610B950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A380E0>)
2025-04-18 19:42:44,357:INFO:Checking exceptions
2025-04-18 19:42:44,357:INFO:Preloading libraries
2025-04-18 19:42:44,357:INFO:Set up data.
2025-04-18 19:42:44,361:INFO:Set up index.
2025-04-18 19:43:22,916:INFO:Initializing load_model()
2025-04-18 19:43:22,916:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:43:22,987:INFO:Initializing predict_model()
2025-04-18 19:43:22,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76009D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789F31A0>)
2025-04-18 19:43:22,987:INFO:Checking exceptions
2025-04-18 19:43:22,987:INFO:Preloading libraries
2025-04-18 19:43:22,987:INFO:Set up data.
2025-04-18 19:43:22,987:INFO:Set up index.
2025-04-18 19:46:43,669:INFO:Initializing load_model()
2025-04-18 19:46:43,669:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:46:43,743:INFO:Initializing predict_model()
2025-04-18 19:46:43,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788DF510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0CB80>)
2025-04-18 19:46:43,743:INFO:Checking exceptions
2025-04-18 19:46:43,743:INFO:Preloading libraries
2025-04-18 19:46:43,745:INFO:Set up data.
2025-04-18 19:46:43,747:INFO:Set up index.
2025-04-18 19:47:28,811:INFO:Initializing load_model()
2025-04-18 19:47:28,811:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:47:28,881:INFO:Initializing predict_model()
2025-04-18 19:47:28,884:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78A63050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789DE520>)
2025-04-18 19:47:28,884:INFO:Checking exceptions
2025-04-18 19:47:28,884:INFO:Preloading libraries
2025-04-18 19:47:28,884:INFO:Set up data.
2025-04-18 19:47:28,886:INFO:Set up index.
2025-04-18 19:47:48,574:INFO:Initializing load_model()
2025-04-18 19:47:48,574:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:47:48,651:INFO:Initializing predict_model()
2025-04-18 19:47:48,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F1B890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A39B20>)
2025-04-18 19:47:48,651:INFO:Checking exceptions
2025-04-18 19:47:48,651:INFO:Preloading libraries
2025-04-18 19:47:48,651:INFO:Set up data.
2025-04-18 19:47:48,653:INFO:Set up index.
2025-04-18 19:48:28,579:INFO:Initializing load_model()
2025-04-18 19:48:28,579:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:48:28,640:INFO:Initializing predict_model()
2025-04-18 19:48:28,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EBDC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789F3D80>)
2025-04-18 19:48:28,640:INFO:Checking exceptions
2025-04-18 19:48:28,640:INFO:Preloading libraries
2025-04-18 19:48:28,640:INFO:Set up data.
2025-04-18 19:48:28,640:INFO:Set up index.
2025-04-18 19:49:20,283:INFO:Initializing load_model()
2025-04-18 19:49:20,290:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:49:20,390:INFO:Initializing predict_model()
2025-04-18 19:49:20,390:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B761D91D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0D760>)
2025-04-18 19:49:20,390:INFO:Checking exceptions
2025-04-18 19:49:20,390:INFO:Preloading libraries
2025-04-18 19:49:20,390:INFO:Set up data.
2025-04-18 19:49:20,393:INFO:Set up index.
2025-04-18 19:49:41,033:INFO:Initializing load_model()
2025-04-18 19:49:41,033:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:49:41,118:INFO:Initializing predict_model()
2025-04-18 19:49:41,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B762409D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0E7A0>)
2025-04-18 19:49:41,118:INFO:Checking exceptions
2025-04-18 19:49:41,118:INFO:Preloading libraries
2025-04-18 19:49:41,118:INFO:Set up data.
2025-04-18 19:49:41,122:INFO:Set up index.
2025-04-18 19:50:00,947:INFO:Initializing load_model()
2025-04-18 19:50:00,948:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:50:01,011:INFO:Initializing predict_model()
2025-04-18 19:50:01,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789D95D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0CEA0>)
2025-04-18 19:50:01,017:INFO:Checking exceptions
2025-04-18 19:50:01,017:INFO:Preloading libraries
2025-04-18 19:50:01,017:INFO:Set up data.
2025-04-18 19:50:01,023:INFO:Set up index.
2025-04-18 19:50:33,807:INFO:Initializing load_model()
2025-04-18 19:50:33,807:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:50:33,885:INFO:Initializing predict_model()
2025-04-18 19:50:33,885:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76258310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789DF4C0>)
2025-04-18 19:50:33,885:INFO:Checking exceptions
2025-04-18 19:50:33,885:INFO:Preloading libraries
2025-04-18 19:50:33,885:INFO:Set up data.
2025-04-18 19:50:33,885:INFO:Set up index.
2025-04-18 19:50:56,492:INFO:Initializing load_model()
2025-04-18 19:50:56,492:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:50:56,553:INFO:Initializing predict_model()
2025-04-18 19:50:56,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B788E2BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789BA8E0>)
2025-04-18 19:50:56,553:INFO:Checking exceptions
2025-04-18 19:50:56,553:INFO:Preloading libraries
2025-04-18 19:50:56,553:INFO:Set up data.
2025-04-18 19:50:56,553:INFO:Set up index.
2025-04-18 19:51:29,753:INFO:Initializing load_model()
2025-04-18 19:51:29,757:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:51:29,836:INFO:Initializing predict_model()
2025-04-18 19:51:29,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7890EBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0ECA0>)
2025-04-18 19:51:29,836:INFO:Checking exceptions
2025-04-18 19:51:29,836:INFO:Preloading libraries
2025-04-18 19:51:29,836:INFO:Set up data.
2025-04-18 19:51:29,840:INFO:Set up index.
2025-04-18 19:51:54,118:INFO:Initializing load_model()
2025-04-18 19:51:54,118:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:51:54,196:INFO:Initializing predict_model()
2025-04-18 19:51:54,196:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EB5810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0D1C0>)
2025-04-18 19:51:54,196:INFO:Checking exceptions
2025-04-18 19:51:54,196:INFO:Preloading libraries
2025-04-18 19:51:54,196:INFO:Set up data.
2025-04-18 19:51:54,203:INFO:Set up index.
2025-04-18 19:52:23,597:INFO:Initializing load_model()
2025-04-18 19:52:23,597:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:52:23,677:INFO:Initializing predict_model()
2025-04-18 19:52:23,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789B3750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A0C900>)
2025-04-18 19:52:23,677:INFO:Checking exceptions
2025-04-18 19:52:23,677:INFO:Preloading libraries
2025-04-18 19:52:23,677:INFO:Set up data.
2025-04-18 19:52:23,683:INFO:Set up index.
2025-04-18 19:53:21,523:INFO:Initializing load_model()
2025-04-18 19:53:21,523:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:53:21,602:INFO:Initializing predict_model()
2025-04-18 19:53:21,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7602EED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B7898DF80>)
2025-04-18 19:53:21,602:INFO:Checking exceptions
2025-04-18 19:53:21,602:INFO:Preloading libraries
2025-04-18 19:53:21,604:INFO:Set up data.
2025-04-18 19:53:21,607:INFO:Set up index.
2025-04-18 19:54:14,107:INFO:Initializing load_model()
2025-04-18 19:54:14,107:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:54:14,172:INFO:Initializing predict_model()
2025-04-18 19:54:14,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789C1C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75F5ACA0>)
2025-04-18 19:54:14,172:INFO:Checking exceptions
2025-04-18 19:54:14,172:INFO:Preloading libraries
2025-04-18 19:54:14,172:INFO:Set up data.
2025-04-18 19:54:14,181:INFO:Set up index.
2025-04-18 19:55:00,920:INFO:Initializing load_model()
2025-04-18 19:55:00,920:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:55:00,994:INFO:Initializing predict_model()
2025-04-18 19:55:00,994:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76103C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEADE0>)
2025-04-18 19:55:00,994:INFO:Checking exceptions
2025-04-18 19:55:00,994:INFO:Preloading libraries
2025-04-18 19:55:00,994:INFO:Set up data.
2025-04-18 19:55:01,000:INFO:Set up index.
2025-04-18 19:55:29,749:INFO:Initializing load_model()
2025-04-18 19:55:29,749:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:55:29,836:INFO:Initializing predict_model()
2025-04-18 19:55:29,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789C0D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEAD40>)
2025-04-18 19:55:29,836:INFO:Checking exceptions
2025-04-18 19:55:29,836:INFO:Preloading libraries
2025-04-18 19:55:29,839:INFO:Set up data.
2025-04-18 19:55:29,843:INFO:Set up index.
2025-04-18 19:58:26,893:INFO:Initializing load_model()
2025-04-18 19:58:26,893:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 19:58:26,972:INFO:Initializing predict_model()
2025-04-18 19:58:26,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75ACA8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75DA3B00>)
2025-04-18 19:58:26,973:INFO:Checking exceptions
2025-04-18 19:58:26,974:INFO:Preloading libraries
2025-04-18 19:58:26,974:INFO:Set up data.
2025-04-18 19:58:26,978:INFO:Set up index.
2025-04-18 20:05:23,360:INFO:Initializing load_model()
2025-04-18 20:05:23,360:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:05:23,423:INFO:Initializing predict_model()
2025-04-18 20:05:23,423:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E09B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEB7E0>)
2025-04-18 20:05:23,423:INFO:Checking exceptions
2025-04-18 20:05:23,423:INFO:Preloading libraries
2025-04-18 20:05:23,425:INFO:Set up data.
2025-04-18 20:05:23,427:INFO:Set up index.
2025-04-18 20:06:18,659:INFO:Initializing load_model()
2025-04-18 20:06:18,659:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:06:18,734:INFO:Initializing predict_model()
2025-04-18 20:06:18,736:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76102510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE8860>)
2025-04-18 20:06:18,736:INFO:Checking exceptions
2025-04-18 20:06:18,736:INFO:Preloading libraries
2025-04-18 20:06:18,736:INFO:Set up data.
2025-04-18 20:06:18,739:INFO:Set up index.
2025-04-18 20:14:03,550:INFO:Initializing load_model()
2025-04-18 20:14:03,550:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:14:03,626:INFO:Initializing predict_model()
2025-04-18 20:14:03,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76155350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789B89A0>)
2025-04-18 20:14:03,627:INFO:Checking exceptions
2025-04-18 20:14:03,627:INFO:Preloading libraries
2025-04-18 20:14:03,627:INFO:Set up data.
2025-04-18 20:14:03,630:INFO:Set up index.
2025-04-18 20:16:39,954:INFO:Initializing load_model()
2025-04-18 20:16:39,954:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:16:40,041:INFO:Initializing predict_model()
2025-04-18 20:16:40,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789BF7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FE02C0>)
2025-04-18 20:16:40,043:INFO:Checking exceptions
2025-04-18 20:16:40,043:INFO:Preloading libraries
2025-04-18 20:16:40,043:INFO:Set up data.
2025-04-18 20:16:40,046:INFO:Set up index.
2025-04-18 20:16:56,486:INFO:Initializing load_model()
2025-04-18 20:16:56,486:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:16:56,558:INFO:Initializing predict_model()
2025-04-18 20:16:56,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75E8F950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789B9260>)
2025-04-18 20:16:56,558:INFO:Checking exceptions
2025-04-18 20:16:56,558:INFO:Preloading libraries
2025-04-18 20:16:56,561:INFO:Set up data.
2025-04-18 20:16:56,564:INFO:Set up index.
2025-04-18 20:17:58,998:INFO:Initializing load_model()
2025-04-18 20:17:58,998:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:17:59,066:INFO:Initializing predict_model()
2025-04-18 20:17:59,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75E8CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789B84A0>)
2025-04-18 20:17:59,069:INFO:Checking exceptions
2025-04-18 20:17:59,069:INFO:Preloading libraries
2025-04-18 20:17:59,069:INFO:Set up data.
2025-04-18 20:17:59,072:INFO:Set up index.
2025-04-18 20:18:36,465:INFO:Initializing load_model()
2025-04-18 20:18:36,465:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:18:36,539:INFO:Initializing predict_model()
2025-04-18 20:18:36,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76076450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789BA5C0>)
2025-04-18 20:18:36,539:INFO:Checking exceptions
2025-04-18 20:18:36,539:INFO:Preloading libraries
2025-04-18 20:18:36,539:INFO:Set up data.
2025-04-18 20:18:36,539:INFO:Set up index.
2025-04-18 20:18:56,409:INFO:Initializing load_model()
2025-04-18 20:18:56,409:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:18:56,477:INFO:Initializing predict_model()
2025-04-18 20:18:56,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E252350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789B9EE0>)
2025-04-18 20:18:56,478:INFO:Checking exceptions
2025-04-18 20:18:56,478:INFO:Preloading libraries
2025-04-18 20:18:56,478:INFO:Set up data.
2025-04-18 20:18:56,478:INFO:Set up index.
2025-04-18 20:20:17,473:INFO:Initializing load_model()
2025-04-18 20:20:17,473:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:20:17,547:INFO:Initializing predict_model()
2025-04-18 20:20:17,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75F6F5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789BA660>)
2025-04-18 20:20:17,547:INFO:Checking exceptions
2025-04-18 20:20:17,547:INFO:Preloading libraries
2025-04-18 20:20:17,547:INFO:Set up data.
2025-04-18 20:20:17,551:INFO:Set up index.
2025-04-18 20:21:22,275:INFO:Initializing load_model()
2025-04-18 20:21:22,284:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 20:21:22,348:INFO:Initializing predict_model()
2025-04-18 20:21:22,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76203050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789F3240>)
2025-04-18 20:21:22,348:INFO:Checking exceptions
2025-04-18 20:21:22,348:INFO:Preloading libraries
2025-04-18 20:21:22,348:INFO:Set up data.
2025-04-18 20:21:22,348:INFO:Set up index.
2025-04-18 21:34:22,465:INFO:Initializing load_model()
2025-04-18 21:34:22,465:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:34:22,539:INFO:Initializing predict_model()
2025-04-18 21:34:22,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789195D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A76FC0>)
2025-04-18 21:34:22,540:INFO:Checking exceptions
2025-04-18 21:34:22,540:INFO:Preloading libraries
2025-04-18 21:34:22,541:INFO:Set up data.
2025-04-18 21:34:22,544:INFO:Set up index.
2025-04-18 21:35:35,051:INFO:Initializing load_model()
2025-04-18 21:35:35,051:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:35:35,116:INFO:Initializing predict_model()
2025-04-18 21:35:35,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B761EC4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789CFCE0>)
2025-04-18 21:35:35,117:INFO:Checking exceptions
2025-04-18 21:35:35,117:INFO:Preloading libraries
2025-04-18 21:35:35,117:INFO:Set up data.
2025-04-18 21:35:35,117:INFO:Set up index.
2025-04-18 21:36:03,984:INFO:Initializing load_model()
2025-04-18 21:36:03,984:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:36:04,057:INFO:Initializing predict_model()
2025-04-18 21:36:04,057:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789A4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B76054040>)
2025-04-18 21:36:04,058:INFO:Checking exceptions
2025-04-18 21:36:04,058:INFO:Preloading libraries
2025-04-18 21:36:04,058:INFO:Set up data.
2025-04-18 21:36:04,061:INFO:Set up index.
2025-04-18 21:38:02,869:INFO:Initializing load_model()
2025-04-18 21:38:02,869:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:38:02,942:INFO:Initializing predict_model()
2025-04-18 21:38:02,943:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B78A45C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789D3380>)
2025-04-18 21:38:02,943:INFO:Checking exceptions
2025-04-18 21:38:02,943:INFO:Preloading libraries
2025-04-18 21:38:02,943:INFO:Set up data.
2025-04-18 21:38:02,946:INFO:Set up index.
2025-04-18 21:40:39,478:INFO:Initializing load_model()
2025-04-18 21:40:39,478:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:40:39,551:INFO:Initializing predict_model()
2025-04-18 21:40:39,551:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FF8710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78994E00>)
2025-04-18 21:40:39,551:INFO:Checking exceptions
2025-04-18 21:40:39,551:INFO:Preloading libraries
2025-04-18 21:40:39,551:INFO:Set up data.
2025-04-18 21:40:39,551:INFO:Set up index.
2025-04-18 21:41:39,462:INFO:Initializing load_model()
2025-04-18 21:41:39,462:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:41:39,531:INFO:Initializing predict_model()
2025-04-18 21:41:39,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7889F350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789DC4A0>)
2025-04-18 21:41:39,531:INFO:Checking exceptions
2025-04-18 21:41:39,531:INFO:Preloading libraries
2025-04-18 21:41:39,531:INFO:Set up data.
2025-04-18 21:41:39,537:INFO:Set up index.
2025-04-18 21:42:07,199:INFO:Initializing load_model()
2025-04-18 21:42:07,199:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-18 21:42:07,261:INFO:Initializing predict_model()
2025-04-18 21:42:07,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B761586D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789E9080>)
2025-04-18 21:42:07,261:INFO:Checking exceptions
2025-04-18 21:42:07,261:INFO:Preloading libraries
2025-04-18 21:42:07,261:INFO:Set up data.
2025-04-18 21:42:07,270:INFO:Set up index.
2025-04-19 00:36:50,558:INFO:Initializing load_model()
2025-04-19 00:36:50,558:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:36:50,666:INFO:Initializing predict_model()
2025-04-19 00:36:50,666:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75ECE650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B50C03060>)
2025-04-19 00:36:50,666:INFO:Checking exceptions
2025-04-19 00:36:50,666:INFO:Preloading libraries
2025-04-19 00:36:50,666:INFO:Set up data.
2025-04-19 00:36:50,666:INFO:Set up index.
2025-04-19 00:38:20,027:INFO:Initializing load_model()
2025-04-19 00:38:20,027:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:38:20,095:INFO:Initializing predict_model()
2025-04-19 00:38:20,095:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2C53AD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEF7E0>)
2025-04-19 00:38:20,095:INFO:Checking exceptions
2025-04-19 00:38:20,095:INFO:Preloading libraries
2025-04-19 00:38:20,101:INFO:Set up data.
2025-04-19 00:38:20,103:INFO:Set up index.
2025-04-19 00:39:42,112:INFO:Initializing load_model()
2025-04-19 00:39:42,112:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:39:42,188:INFO:Initializing predict_model()
2025-04-19 00:39:42,188:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B2E099090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEDB20>)
2025-04-19 00:39:42,188:INFO:Checking exceptions
2025-04-19 00:39:42,188:INFO:Preloading libraries
2025-04-19 00:39:42,188:INFO:Set up data.
2025-04-19 00:39:42,191:INFO:Set up index.
2025-04-19 00:40:58,471:INFO:Initializing load_model()
2025-04-19 00:40:58,471:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:40:58,532:INFO:Initializing predict_model()
2025-04-19 00:40:58,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7609FF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789DDDA0>)
2025-04-19 00:40:58,532:INFO:Checking exceptions
2025-04-19 00:40:58,532:INFO:Preloading libraries
2025-04-19 00:40:58,532:INFO:Set up data.
2025-04-19 00:40:58,538:INFO:Set up index.
2025-04-19 00:46:30,965:INFO:Initializing load_model()
2025-04-19 00:46:30,965:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:46:31,036:INFO:Initializing predict_model()
2025-04-19 00:46:31,036:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B756F6ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B7898F380>)
2025-04-19 00:46:31,038:INFO:Checking exceptions
2025-04-19 00:46:31,038:INFO:Preloading libraries
2025-04-19 00:46:31,038:INFO:Set up data.
2025-04-19 00:46:31,040:INFO:Set up index.
2025-04-19 00:47:08,396:INFO:Initializing load_model()
2025-04-19 00:47:08,396:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:47:08,479:INFO:Initializing predict_model()
2025-04-19 00:47:08,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B7605A790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B502147C0>)
2025-04-19 00:47:08,479:INFO:Checking exceptions
2025-04-19 00:47:08,479:INFO:Preloading libraries
2025-04-19 00:47:08,486:INFO:Set up data.
2025-04-19 00:47:08,489:INFO:Set up index.
2025-04-19 00:50:57,254:INFO:Initializing load_model()
2025-04-19 00:50:57,254:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 00:50:57,333:INFO:Initializing predict_model()
2025-04-19 00:50:57,334:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75FD6ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789F2160>)
2025-04-19 00:50:57,334:INFO:Checking exceptions
2025-04-19 00:50:57,334:INFO:Preloading libraries
2025-04-19 00:50:57,334:INFO:Set up data.
2025-04-19 00:50:57,337:INFO:Set up index.
2025-04-19 01:01:13,851:INFO:Initializing load_model()
2025-04-19 01:01:13,851:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 01:01:13,923:INFO:Initializing predict_model()
2025-04-19 01:01:13,923:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B75EE95D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B789F3920>)
2025-04-19 01:01:13,923:INFO:Checking exceptions
2025-04-19 01:01:13,923:INFO:Preloading libraries
2025-04-19 01:01:13,923:INFO:Set up data.
2025-04-19 01:01:13,925:INFO:Set up index.
2025-04-19 01:01:58,347:INFO:Initializing load_model()
2025-04-19 01:01:58,347:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 01:01:58,424:INFO:Initializing predict_model()
2025-04-19 01:01:58,426:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B76094DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEC220>)
2025-04-19 01:01:58,426:INFO:Checking exceptions
2025-04-19 01:01:58,426:INFO:Preloading libraries
2025-04-19 01:01:58,426:INFO:Set up data.
2025-04-19 01:01:58,430:INFO:Set up index.
2025-04-19 01:08:09,584:INFO:Initializing load_model()
2025-04-19 01:08:09,584:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 01:08:09,677:INFO:Initializing predict_model()
2025-04-19 01:08:09,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B760EF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B75FEED40>)
2025-04-19 01:08:09,677:INFO:Checking exceptions
2025-04-19 01:08:09,677:INFO:Preloading libraries
2025-04-19 01:08:09,677:INFO:Set up data.
2025-04-19 01:08:09,677:INFO:Set up index.
2025-04-19 01:09:28,228:INFO:Initializing load_model()
2025-04-19 01:09:28,228:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-19 01:09:28,293:INFO:Initializing predict_model()
2025-04-19 01:09:28,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015B789B6850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015B78A5A480>)
2025-04-19 01:09:28,293:INFO:Checking exceptions
2025-04-19 01:09:28,293:INFO:Preloading libraries
2025-04-19 01:09:28,294:INFO:Set up data.
2025-04-19 01:09:28,295:INFO:Set up index.
2025-04-21 21:56:59,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-21 21:56:59,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-21 21:56:59,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-21 21:56:59,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-21 21:58:41,472:INFO:Initializing load_model()
2025-04-21 21:58:41,472:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-21 21:58:41,700:INFO:Initializing predict_model()
2025-04-21 21:58:41,700:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232CB593BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232CBC71120>)
2025-04-21 21:58:41,702:INFO:Checking exceptions
2025-04-21 21:58:41,702:INFO:Preloading libraries
2025-04-21 21:58:41,702:INFO:Set up data.
2025-04-21 21:58:41,707:INFO:Set up index.
2025-04-21 22:01:10,670:INFO:Initializing load_model()
2025-04-21 22:01:10,670:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-21 22:01:10,735:INFO:Initializing predict_model()
2025-04-21 22:01:10,749:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232A67FDAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232CBC24B80>)
2025-04-21 22:01:10,749:INFO:Checking exceptions
2025-04-21 22:01:10,751:INFO:Preloading libraries
2025-04-21 22:01:10,753:INFO:Set up data.
2025-04-21 22:01:10,753:INFO:Set up index.
2025-04-21 22:02:49,416:INFO:Initializing load_model()
2025-04-21 22:02:49,416:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-21 22:02:49,501:INFO:Initializing predict_model()
2025-04-21 22:02:49,501:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023282CC32D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232A6116CA0>)
2025-04-21 22:02:49,501:INFO:Checking exceptions
2025-04-21 22:02:49,501:INFO:Preloading libraries
2025-04-21 22:02:49,501:INFO:Set up data.
2025-04-21 22:02:49,506:INFO:Set up index.
2025-04-21 22:03:32,661:INFO:Initializing load_model()
2025-04-21 22:03:32,661:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-21 22:03:32,739:INFO:Initializing predict_model()
2025-04-21 22:03:32,739:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232CBD4CE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232CBDB7EC0>)
2025-04-21 22:03:32,739:INFO:Checking exceptions
2025-04-21 22:03:32,739:INFO:Preloading libraries
2025-04-21 22:03:32,739:INFO:Set up data.
2025-04-21 22:03:32,752:INFO:Set up index.
2025-04-22 09:41:24,178:INFO:Initializing load_model()
2025-04-22 09:41:24,178:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 09:41:24,241:INFO:Initializing predict_model()
2025-04-22 09:41:24,242:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232CBCFEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232CAFFEC00>)
2025-04-22 09:41:24,242:INFO:Checking exceptions
2025-04-22 09:41:24,242:INFO:Preloading libraries
2025-04-22 09:41:24,244:INFO:Set up data.
2025-04-22 09:41:24,247:INFO:Set up index.
2025-04-22 09:48:02,772:INFO:Initializing load_model()
2025-04-22 09:48:02,772:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 09:48:02,832:INFO:Initializing predict_model()
2025-04-22 09:48:02,839:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232CBE37D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232CBD55080>)
2025-04-22 09:48:02,839:INFO:Checking exceptions
2025-04-22 09:48:02,839:INFO:Preloading libraries
2025-04-22 09:48:02,840:INFO:Set up data.
2025-04-22 09:48:02,840:INFO:Set up index.
2025-04-22 10:17:54,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 10:17:54,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 10:17:54,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 10:17:54,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 11:45:54,018:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3759072673.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  filtred_not_null_df["Czas"]=filtred_not_null_df["Czas"].apply(time_to_minutes)

2025-04-22 11:46:46,653:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\2045275123.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.rename(columns={

2025-04-22 11:46:46,758:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1956440826.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(8022, inplace=True)

2025-04-22 11:46:46,775:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3001551626.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(4293, inplace=True)

2025-04-22 11:46:55,326:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\805044233.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["sex"]=df_final["sex"].apply(sex_to_cat)

2025-04-22 11:46:55,372:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3118231542.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["tempo"]=df_final["tempo"].round(2)

2025-04-22 11:46:55,495:INFO:PyCaret RegressionExperiment
2025-04-22 11:46:55,495:INFO:Logging name: reg-default-name
2025-04-22 11:46:55,500:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-22 11:46:55,500:INFO:version 3.3.2
2025-04-22 11:46:55,500:INFO:Initializing setup()
2025-04-22 11:46:55,500:INFO:self.USI: 7f36
2025-04-22 11:46:55,500:INFO:self._variable_keys: {'y', 'gpu_n_jobs_param', 'memory', 'y_test', 'X_train', 'fold_generator', 'exp_id', '_available_plots', 'seed', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'html_param', 'logging_param', 'transform_target_param', 'target_param', 'fold_groups_param', 'pipeline', 'idx', 'log_plots_param', 'exp_name_log', 'X', 'USI', 'data', '_ml_usecase'}
2025-04-22 11:46:55,500:INFO:Checking environment
2025-04-22 11:46:55,500:INFO:python_version: 3.11.11
2025-04-22 11:46:55,502:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-04-22 11:46:55,502:INFO:machine: AMD64
2025-04-22 11:46:55,502:INFO:platform: Windows-10-10.0.22631-SP0
2025-04-22 11:46:55,510:INFO:Memory: svmem(total=16537391104, available=4409929728, percent=73.3, used=12127461376, free=4409929728)
2025-04-22 11:46:55,510:INFO:Physical Core: 8
2025-04-22 11:46:55,510:INFO:Logical Core: 16
2025-04-22 11:46:55,510:INFO:Checking libraries
2025-04-22 11:46:55,510:INFO:System:
2025-04-22 11:46:55,510:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-04-22 11:46:55,510:INFO:executable: c:\Users\sxwem\miniconda3\envs\app_marathon\python.exe
2025-04-22 11:46:55,513:INFO:   machine: Windows-10-10.0.22631-SP0
2025-04-22 11:46:55,513:INFO:PyCaret required dependencies:
2025-04-22 11:46:55,602:INFO:                 pip: 25.0
2025-04-22 11:46:55,602:INFO:          setuptools: 72.1.0
2025-04-22 11:46:55,602:INFO:             pycaret: 3.3.2
2025-04-22 11:46:55,602:INFO:             IPython: 9.1.0
2025-04-22 11:46:55,602:INFO:          ipywidgets: 8.1.5
2025-04-22 11:46:55,602:INFO:                tqdm: 4.67.1
2025-04-22 11:46:55,602:INFO:               numpy: 1.26.4
2025-04-22 11:46:55,602:INFO:              pandas: 2.1.4
2025-04-22 11:46:55,602:INFO:              jinja2: 3.1.6
2025-04-22 11:46:55,602:INFO:               scipy: 1.11.4
2025-04-22 11:46:55,602:INFO:              joblib: 1.3.2
2025-04-22 11:46:55,602:INFO:             sklearn: 1.4.2
2025-04-22 11:46:55,602:INFO:                pyod: 2.0.4
2025-04-22 11:46:55,602:INFO:            imblearn: 0.13.0
2025-04-22 11:46:55,602:INFO:   category_encoders: 2.7.0
2025-04-22 11:46:55,602:INFO:            lightgbm: 4.6.0
2025-04-22 11:46:55,602:INFO:               numba: 0.61.2
2025-04-22 11:46:55,602:INFO:            requests: 2.32.3
2025-04-22 11:46:55,602:INFO:          matplotlib: 3.7.5
2025-04-22 11:46:55,602:INFO:          scikitplot: 0.3.7
2025-04-22 11:46:55,602:INFO:         yellowbrick: 1.5
2025-04-22 11:46:55,602:INFO:              plotly: 5.24.1
2025-04-22 11:46:55,602:INFO:    plotly-resampler: Not installed
2025-04-22 11:46:55,602:INFO:             kaleido: 0.2.1
2025-04-22 11:46:55,602:INFO:           schemdraw: 0.15
2025-04-22 11:46:55,602:INFO:         statsmodels: 0.14.4
2025-04-22 11:46:55,602:INFO:              sktime: 0.26.0
2025-04-22 11:46:55,602:INFO:               tbats: 1.1.3
2025-04-22 11:46:55,602:INFO:            pmdarima: 2.0.4
2025-04-22 11:46:55,602:INFO:              psutil: 7.0.0
2025-04-22 11:46:55,602:INFO:          markupsafe: 3.0.2
2025-04-22 11:46:55,602:INFO:             pickle5: Not installed
2025-04-22 11:46:55,602:INFO:         cloudpickle: 3.1.1
2025-04-22 11:46:55,602:INFO:         deprecation: 2.1.0
2025-04-22 11:46:55,602:INFO:              xxhash: 3.5.0
2025-04-22 11:46:55,602:INFO:           wurlitzer: Not installed
2025-04-22 11:46:55,602:INFO:PyCaret optional dependencies:
2025-04-22 11:46:55,639:INFO:                shap: Not installed
2025-04-22 11:46:55,639:INFO:           interpret: Not installed
2025-04-22 11:46:55,639:INFO:                umap: Not installed
2025-04-22 11:46:55,639:INFO:     ydata_profiling: Not installed
2025-04-22 11:46:55,639:INFO:  explainerdashboard: Not installed
2025-04-22 11:46:55,639:INFO:             autoviz: Not installed
2025-04-22 11:46:55,639:INFO:           fairlearn: Not installed
2025-04-22 11:46:55,639:INFO:          deepchecks: Not installed
2025-04-22 11:46:55,639:INFO:             xgboost: Not installed
2025-04-22 11:46:55,639:INFO:            catboost: Not installed
2025-04-22 11:46:55,639:INFO:              kmodes: Not installed
2025-04-22 11:46:55,639:INFO:             mlxtend: Not installed
2025-04-22 11:46:55,639:INFO:       statsforecast: Not installed
2025-04-22 11:46:55,639:INFO:        tune_sklearn: Not installed
2025-04-22 11:46:55,639:INFO:                 ray: Not installed
2025-04-22 11:46:55,639:INFO:            hyperopt: Not installed
2025-04-22 11:46:55,639:INFO:              optuna: Not installed
2025-04-22 11:46:55,639:INFO:               skopt: Not installed
2025-04-22 11:46:55,639:INFO:              mlflow: Not installed
2025-04-22 11:46:55,639:INFO:              gradio: Not installed
2025-04-22 11:46:55,639:INFO:             fastapi: Not installed
2025-04-22 11:46:55,639:INFO:             uvicorn: Not installed
2025-04-22 11:46:55,639:INFO:              m2cgen: Not installed
2025-04-22 11:46:55,639:INFO:           evidently: Not installed
2025-04-22 11:46:55,639:INFO:               fugue: Not installed
2025-04-22 11:46:55,639:INFO:           streamlit: 1.44.1
2025-04-22 11:46:55,639:INFO:             prophet: Not installed
2025-04-22 11:46:55,639:INFO:None
2025-04-22 11:46:55,639:INFO:Set up data.
2025-04-22 11:47:20,922:INFO:PyCaret RegressionExperiment
2025-04-22 11:47:20,922:INFO:Logging name: reg-default-name
2025-04-22 11:47:20,922:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-22 11:47:20,922:INFO:version 3.3.2
2025-04-22 11:47:20,922:INFO:Initializing setup()
2025-04-22 11:47:20,922:INFO:self.USI: 187b
2025-04-22 11:47:20,923:INFO:self._variable_keys: {'y', 'gpu_n_jobs_param', 'memory', 'y_test', 'X_train', 'fold_generator', 'exp_id', '_available_plots', 'seed', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'html_param', 'logging_param', 'transform_target_param', 'target_param', 'fold_groups_param', 'pipeline', 'idx', 'log_plots_param', 'exp_name_log', 'X', 'USI', 'data', '_ml_usecase'}
2025-04-22 11:47:20,923:INFO:Checking environment
2025-04-22 11:47:20,923:INFO:python_version: 3.11.11
2025-04-22 11:47:20,923:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-04-22 11:47:20,923:INFO:machine: AMD64
2025-04-22 11:47:20,923:INFO:platform: Windows-10-10.0.22631-SP0
2025-04-22 11:47:20,931:INFO:Memory: svmem(total=16537391104, available=4447461376, percent=73.1, used=12089929728, free=4447461376)
2025-04-22 11:47:20,931:INFO:Physical Core: 8
2025-04-22 11:47:20,931:INFO:Logical Core: 16
2025-04-22 11:47:20,931:INFO:Checking libraries
2025-04-22 11:47:20,931:INFO:System:
2025-04-22 11:47:20,931:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-04-22 11:47:20,931:INFO:executable: c:\Users\sxwem\miniconda3\envs\app_marathon\python.exe
2025-04-22 11:47:20,931:INFO:   machine: Windows-10-10.0.22631-SP0
2025-04-22 11:47:20,931:INFO:PyCaret required dependencies:
2025-04-22 11:47:20,931:INFO:                 pip: 25.0
2025-04-22 11:47:20,931:INFO:          setuptools: 72.1.0
2025-04-22 11:47:20,931:INFO:             pycaret: 3.3.2
2025-04-22 11:47:20,931:INFO:             IPython: 9.1.0
2025-04-22 11:47:20,931:INFO:          ipywidgets: 8.1.5
2025-04-22 11:47:20,931:INFO:                tqdm: 4.67.1
2025-04-22 11:47:20,931:INFO:               numpy: 1.26.4
2025-04-22 11:47:20,934:INFO:              pandas: 2.1.4
2025-04-22 11:47:20,934:INFO:              jinja2: 3.1.6
2025-04-22 11:47:20,934:INFO:               scipy: 1.11.4
2025-04-22 11:47:20,934:INFO:              joblib: 1.3.2
2025-04-22 11:47:20,934:INFO:             sklearn: 1.4.2
2025-04-22 11:47:20,934:INFO:                pyod: 2.0.4
2025-04-22 11:47:20,934:INFO:            imblearn: 0.13.0
2025-04-22 11:47:20,934:INFO:   category_encoders: 2.7.0
2025-04-22 11:47:20,934:INFO:            lightgbm: 4.6.0
2025-04-22 11:47:20,934:INFO:               numba: 0.61.2
2025-04-22 11:47:20,934:INFO:            requests: 2.32.3
2025-04-22 11:47:20,934:INFO:          matplotlib: 3.7.5
2025-04-22 11:47:20,934:INFO:          scikitplot: 0.3.7
2025-04-22 11:47:20,934:INFO:         yellowbrick: 1.5
2025-04-22 11:47:20,934:INFO:              plotly: 5.24.1
2025-04-22 11:47:20,936:INFO:    plotly-resampler: Not installed
2025-04-22 11:47:20,936:INFO:             kaleido: 0.2.1
2025-04-22 11:47:20,936:INFO:           schemdraw: 0.15
2025-04-22 11:47:20,936:INFO:         statsmodels: 0.14.4
2025-04-22 11:47:20,936:INFO:              sktime: 0.26.0
2025-04-22 11:47:20,936:INFO:               tbats: 1.1.3
2025-04-22 11:47:20,936:INFO:            pmdarima: 2.0.4
2025-04-22 11:47:20,936:INFO:              psutil: 7.0.0
2025-04-22 11:47:20,936:INFO:          markupsafe: 3.0.2
2025-04-22 11:47:20,936:INFO:             pickle5: Not installed
2025-04-22 11:47:20,936:INFO:         cloudpickle: 3.1.1
2025-04-22 11:47:20,936:INFO:         deprecation: 2.1.0
2025-04-22 11:47:20,936:INFO:              xxhash: 3.5.0
2025-04-22 11:47:20,936:INFO:           wurlitzer: Not installed
2025-04-22 11:47:20,936:INFO:PyCaret optional dependencies:
2025-04-22 11:47:20,936:INFO:                shap: Not installed
2025-04-22 11:47:20,936:INFO:           interpret: Not installed
2025-04-22 11:47:20,936:INFO:                umap: Not installed
2025-04-22 11:47:20,936:INFO:     ydata_profiling: Not installed
2025-04-22 11:47:20,936:INFO:  explainerdashboard: Not installed
2025-04-22 11:47:20,936:INFO:             autoviz: Not installed
2025-04-22 11:47:20,939:INFO:           fairlearn: Not installed
2025-04-22 11:47:20,939:INFO:          deepchecks: Not installed
2025-04-22 11:47:20,939:INFO:             xgboost: Not installed
2025-04-22 11:47:20,939:INFO:            catboost: Not installed
2025-04-22 11:47:20,939:INFO:              kmodes: Not installed
2025-04-22 11:47:20,939:INFO:             mlxtend: Not installed
2025-04-22 11:47:20,939:INFO:       statsforecast: Not installed
2025-04-22 11:47:20,939:INFO:        tune_sklearn: Not installed
2025-04-22 11:47:20,939:INFO:                 ray: Not installed
2025-04-22 11:47:20,939:INFO:            hyperopt: Not installed
2025-04-22 11:47:20,939:INFO:              optuna: Not installed
2025-04-22 11:47:20,939:INFO:               skopt: Not installed
2025-04-22 11:47:20,939:INFO:              mlflow: Not installed
2025-04-22 11:47:20,939:INFO:              gradio: Not installed
2025-04-22 11:47:20,939:INFO:             fastapi: Not installed
2025-04-22 11:47:20,939:INFO:             uvicorn: Not installed
2025-04-22 11:47:20,939:INFO:              m2cgen: Not installed
2025-04-22 11:47:20,939:INFO:           evidently: Not installed
2025-04-22 11:47:20,939:INFO:               fugue: Not installed
2025-04-22 11:47:20,939:INFO:           streamlit: 1.44.1
2025-04-22 11:47:20,939:INFO:             prophet: Not installed
2025-04-22 11:47:20,941:INFO:None
2025-04-22 11:47:20,941:INFO:Set up data.
2025-04-22 13:53:48,806:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3297734821.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.rename(columns={

2025-04-22 13:54:00,053:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1956440826.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(8022, inplace=True)

2025-04-22 13:54:03,269:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3001551626.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(4293, inplace=True)

2025-04-22 13:57:05,144:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\805044233.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["sex"]=df_final["sex"].apply(sex_to_cat)

2025-04-22 14:03:11,230:INFO:PyCaret RegressionExperiment
2025-04-22 14:03:11,230:INFO:Logging name: reg-default-name
2025-04-22 14:03:11,233:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-22 14:03:11,233:INFO:version 3.3.2
2025-04-22 14:03:11,233:INFO:Initializing setup()
2025-04-22 14:03:11,233:INFO:self.USI: ce8b
2025-04-22 14:03:11,233:INFO:self._variable_keys: {'y', 'gpu_n_jobs_param', 'memory', 'y_test', 'X_train', 'fold_generator', 'exp_id', '_available_plots', 'seed', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'html_param', 'logging_param', 'transform_target_param', 'target_param', 'fold_groups_param', 'pipeline', 'idx', 'log_plots_param', 'exp_name_log', 'X', 'USI', 'data', '_ml_usecase'}
2025-04-22 14:03:11,233:INFO:Checking environment
2025-04-22 14:03:11,233:INFO:python_version: 3.11.11
2025-04-22 14:03:11,233:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-04-22 14:03:11,233:INFO:machine: AMD64
2025-04-22 14:03:11,235:INFO:platform: Windows-10-10.0.22631-SP0
2025-04-22 14:03:11,243:INFO:Memory: svmem(total=16537391104, available=4846452736, percent=70.7, used=11690938368, free=4846452736)
2025-04-22 14:03:11,243:INFO:Physical Core: 8
2025-04-22 14:03:11,243:INFO:Logical Core: 16
2025-04-22 14:03:11,243:INFO:Checking libraries
2025-04-22 14:03:11,243:INFO:System:
2025-04-22 14:03:11,243:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-04-22 14:03:11,243:INFO:executable: c:\Users\sxwem\miniconda3\envs\app_marathon\python.exe
2025-04-22 14:03:11,243:INFO:   machine: Windows-10-10.0.22631-SP0
2025-04-22 14:03:11,243:INFO:PyCaret required dependencies:
2025-04-22 14:03:11,243:INFO:                 pip: 25.0
2025-04-22 14:03:11,243:INFO:          setuptools: 72.1.0
2025-04-22 14:03:11,243:INFO:             pycaret: 3.3.2
2025-04-22 14:03:11,243:INFO:             IPython: 9.1.0
2025-04-22 14:03:11,243:INFO:          ipywidgets: 8.1.5
2025-04-22 14:03:11,243:INFO:                tqdm: 4.67.1
2025-04-22 14:03:11,243:INFO:               numpy: 1.26.4
2025-04-22 14:03:11,243:INFO:              pandas: 2.1.4
2025-04-22 14:03:11,243:INFO:              jinja2: 3.1.6
2025-04-22 14:03:11,243:INFO:               scipy: 1.11.4
2025-04-22 14:03:11,243:INFO:              joblib: 1.3.2
2025-04-22 14:03:11,243:INFO:             sklearn: 1.4.2
2025-04-22 14:03:11,243:INFO:                pyod: 2.0.4
2025-04-22 14:03:11,243:INFO:            imblearn: 0.13.0
2025-04-22 14:03:11,243:INFO:   category_encoders: 2.7.0
2025-04-22 14:03:11,243:INFO:            lightgbm: 4.6.0
2025-04-22 14:03:11,243:INFO:               numba: 0.61.2
2025-04-22 14:03:11,243:INFO:            requests: 2.32.3
2025-04-22 14:03:11,243:INFO:          matplotlib: 3.7.5
2025-04-22 14:03:11,243:INFO:          scikitplot: 0.3.7
2025-04-22 14:03:11,243:INFO:         yellowbrick: 1.5
2025-04-22 14:03:11,243:INFO:              plotly: 5.24.1
2025-04-22 14:03:11,243:INFO:    plotly-resampler: Not installed
2025-04-22 14:03:11,243:INFO:             kaleido: 0.2.1
2025-04-22 14:03:11,243:INFO:           schemdraw: 0.15
2025-04-22 14:03:11,243:INFO:         statsmodels: 0.14.4
2025-04-22 14:03:11,243:INFO:              sktime: 0.26.0
2025-04-22 14:03:11,243:INFO:               tbats: 1.1.3
2025-04-22 14:03:11,243:INFO:            pmdarima: 2.0.4
2025-04-22 14:03:11,243:INFO:              psutil: 7.0.0
2025-04-22 14:03:11,243:INFO:          markupsafe: 3.0.2
2025-04-22 14:03:11,243:INFO:             pickle5: Not installed
2025-04-22 14:03:11,243:INFO:         cloudpickle: 3.1.1
2025-04-22 14:03:11,243:INFO:         deprecation: 2.1.0
2025-04-22 14:03:11,243:INFO:              xxhash: 3.5.0
2025-04-22 14:03:11,243:INFO:           wurlitzer: Not installed
2025-04-22 14:03:11,243:INFO:PyCaret optional dependencies:
2025-04-22 14:03:11,251:INFO:                shap: Not installed
2025-04-22 14:03:11,251:INFO:           interpret: Not installed
2025-04-22 14:03:11,251:INFO:                umap: Not installed
2025-04-22 14:03:11,251:INFO:     ydata_profiling: Not installed
2025-04-22 14:03:11,251:INFO:  explainerdashboard: Not installed
2025-04-22 14:03:11,252:INFO:             autoviz: Not installed
2025-04-22 14:03:11,252:INFO:           fairlearn: Not installed
2025-04-22 14:03:11,252:INFO:          deepchecks: Not installed
2025-04-22 14:03:11,252:INFO:             xgboost: Not installed
2025-04-22 14:03:11,252:INFO:            catboost: Not installed
2025-04-22 14:03:11,252:INFO:              kmodes: Not installed
2025-04-22 14:03:11,252:INFO:             mlxtend: Not installed
2025-04-22 14:03:11,252:INFO:       statsforecast: Not installed
2025-04-22 14:03:11,252:INFO:        tune_sklearn: Not installed
2025-04-22 14:03:11,252:INFO:                 ray: Not installed
2025-04-22 14:03:11,252:INFO:            hyperopt: Not installed
2025-04-22 14:03:11,252:INFO:              optuna: Not installed
2025-04-22 14:03:11,253:INFO:               skopt: Not installed
2025-04-22 14:03:11,253:INFO:              mlflow: Not installed
2025-04-22 14:03:11,253:INFO:              gradio: Not installed
2025-04-22 14:03:11,253:INFO:             fastapi: Not installed
2025-04-22 14:03:11,253:INFO:             uvicorn: Not installed
2025-04-22 14:03:11,253:INFO:              m2cgen: Not installed
2025-04-22 14:03:11,253:INFO:           evidently: Not installed
2025-04-22 14:03:11,253:INFO:               fugue: Not installed
2025-04-22 14:03:11,253:INFO:           streamlit: 1.44.1
2025-04-22 14:03:11,253:INFO:             prophet: Not installed
2025-04-22 14:03:11,253:INFO:None
2025-04-22 14:03:11,253:INFO:Set up data.
2025-04-22 14:03:11,260:INFO:Set up folding strategy.
2025-04-22 14:03:11,260:INFO:Set up train/test split.
2025-04-22 14:03:11,279:INFO:Set up index.
2025-04-22 14:03:11,281:INFO:Assigning column types.
2025-04-22 14:03:11,286:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-22 14:03:11,286:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,288:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,302:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:11,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:11,534:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,540:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,547:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:11,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:11,763:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-22 14:03:11,769:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,769:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:11,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:11,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,003:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,014:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,137:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,232:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,236:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-22 14:03:12,253:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,375:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,469:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,489:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,689:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-22 14:03:12,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:12,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:12,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:13,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:03:13,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,170:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-22 14:03:13,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:13,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:03:13,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,674:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-22 14:03:13,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:13,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:14,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:14,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:14,155:INFO:Preparing preprocessing pipeline...
2025-04-22 14:03:14,155:INFO:Set up simple imputation.
2025-04-22 14:03:14,165:INFO:Set up encoding of ordinal features.
2025-04-22 14:03:14,169:INFO:Set up encoding of categorical features.
2025-04-22 14:03:14,303:INFO:Finished creating preprocessing pipeline.
2025-04-22 14:03:14,366:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\sxwem\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-04-22 14:03:14,366:INFO:Creating final display dataframe.
2025-04-22 14:03:14,706:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              time
2                   Target type        Regression
3           Original data shape         (9967, 5)
4        Transformed data shape        (9967, 16)
5   Transformed train set shape        (6976, 16)
6    Transformed test set shape        (2991, 16)
7              Numeric features                 2
8          Categorical features                 2
9      Rows with missing values              0.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              ce8b
2025-04-22 14:03:14,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:14,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:15,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:15,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:03:15,223:INFO:setup() successfully completed in 4.01s...............
2025-04-22 14:03:45,307:INFO:Initializing plot_model()
2025-04-22 14:03:45,308:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-04-22 14:03:45,308:INFO:Checking exceptions
2025-04-22 14:03:57,143:INFO:Initializing compare_models()
2025-04-22 14:03:57,143:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-04-22 14:03:57,144:INFO:Checking exceptions
2025-04-22 14:03:57,148:INFO:Preparing display monitor
2025-04-22 14:03:57,204:INFO:Initializing Linear Regression
2025-04-22 14:03:57,204:INFO:Total runtime is 0.0 minutes
2025-04-22 14:03:57,211:INFO:SubProcess create_model() called ==================================
2025-04-22 14:03:57,215:INFO:Initializing create_model()
2025-04-22 14:03:57,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:03:57,216:INFO:Checking exceptions
2025-04-22 14:03:57,216:INFO:Importing libraries
2025-04-22 14:03:57,216:INFO:Copying training dataset
2025-04-22 14:03:57,232:INFO:Defining folds
2025-04-22 14:03:57,232:INFO:Declaring metric variables
2025-04-22 14:03:57,236:INFO:Importing untrained model
2025-04-22 14:03:57,251:INFO:Linear Regression Imported successfully
2025-04-22 14:03:57,267:INFO:Starting cross validation
2025-04-22 14:03:57,285:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:05,781:INFO:Calculating mean and std
2025-04-22 14:04:05,781:INFO:Creating metrics dataframe
2025-04-22 14:04:05,790:INFO:Uploading results into container
2025-04-22 14:04:05,790:INFO:Uploading model into container now
2025-04-22 14:04:05,790:INFO:_master_model_container: 1
2025-04-22 14:04:05,790:INFO:_display_container: 2
2025-04-22 14:04:05,794:INFO:LinearRegression(n_jobs=-1)
2025-04-22 14:04:05,794:INFO:create_model() successfully completed......................................
2025-04-22 14:04:06,456:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:06,456:INFO:Creating metrics dataframe
2025-04-22 14:04:06,471:INFO:Initializing Lasso Regression
2025-04-22 14:04:06,471:INFO:Total runtime is 0.15444570382436115 minutes
2025-04-22 14:04:06,478:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:06,480:INFO:Initializing create_model()
2025-04-22 14:04:06,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:06,480:INFO:Checking exceptions
2025-04-22 14:04:06,480:INFO:Importing libraries
2025-04-22 14:04:06,480:INFO:Copying training dataset
2025-04-22 14:04:06,494:INFO:Defining folds
2025-04-22 14:04:06,494:INFO:Declaring metric variables
2025-04-22 14:04:06,505:INFO:Importing untrained model
2025-04-22 14:04:06,513:INFO:Lasso Regression Imported successfully
2025-04-22 14:04:06,531:INFO:Starting cross validation
2025-04-22 14:04:06,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:12,753:INFO:Calculating mean and std
2025-04-22 14:04:12,753:INFO:Creating metrics dataframe
2025-04-22 14:04:12,753:INFO:Uploading results into container
2025-04-22 14:04:12,753:INFO:Uploading model into container now
2025-04-22 14:04:12,753:INFO:_master_model_container: 2
2025-04-22 14:04:12,766:INFO:_display_container: 2
2025-04-22 14:04:12,766:INFO:Lasso(random_state=123)
2025-04-22 14:04:12,766:INFO:create_model() successfully completed......................................
2025-04-22 14:04:13,369:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:13,369:INFO:Creating metrics dataframe
2025-04-22 14:04:13,372:INFO:Initializing Ridge Regression
2025-04-22 14:04:13,372:INFO:Total runtime is 0.2694759448369344 minutes
2025-04-22 14:04:13,389:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:13,389:INFO:Initializing create_model()
2025-04-22 14:04:13,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:13,389:INFO:Checking exceptions
2025-04-22 14:04:13,389:INFO:Importing libraries
2025-04-22 14:04:13,391:INFO:Copying training dataset
2025-04-22 14:04:13,391:INFO:Defining folds
2025-04-22 14:04:13,391:INFO:Declaring metric variables
2025-04-22 14:04:13,412:INFO:Importing untrained model
2025-04-22 14:04:13,420:INFO:Ridge Regression Imported successfully
2025-04-22 14:04:13,436:INFO:Starting cross validation
2025-04-22 14:04:13,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:13,772:INFO:Calculating mean and std
2025-04-22 14:04:13,772:INFO:Creating metrics dataframe
2025-04-22 14:04:13,776:INFO:Uploading results into container
2025-04-22 14:04:13,776:INFO:Uploading model into container now
2025-04-22 14:04:13,776:INFO:_master_model_container: 3
2025-04-22 14:04:13,776:INFO:_display_container: 2
2025-04-22 14:04:13,776:INFO:Ridge(random_state=123)
2025-04-22 14:04:13,776:INFO:create_model() successfully completed......................................
2025-04-22 14:04:14,380:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:14,381:INFO:Creating metrics dataframe
2025-04-22 14:04:14,387:INFO:Initializing Elastic Net
2025-04-22 14:04:14,387:INFO:Total runtime is 0.2863934755325317 minutes
2025-04-22 14:04:14,397:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:14,399:INFO:Initializing create_model()
2025-04-22 14:04:14,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:14,399:INFO:Checking exceptions
2025-04-22 14:04:14,399:INFO:Importing libraries
2025-04-22 14:04:14,399:INFO:Copying training dataset
2025-04-22 14:04:14,409:INFO:Defining folds
2025-04-22 14:04:14,409:INFO:Declaring metric variables
2025-04-22 14:04:14,420:INFO:Importing untrained model
2025-04-22 14:04:14,422:INFO:Elastic Net Imported successfully
2025-04-22 14:04:14,442:INFO:Starting cross validation
2025-04-22 14:04:14,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:14,845:INFO:Calculating mean and std
2025-04-22 14:04:14,845:INFO:Creating metrics dataframe
2025-04-22 14:04:14,849:INFO:Uploading results into container
2025-04-22 14:04:14,851:INFO:Uploading model into container now
2025-04-22 14:04:14,851:INFO:_master_model_container: 4
2025-04-22 14:04:14,851:INFO:_display_container: 2
2025-04-22 14:04:14,854:INFO:ElasticNet(random_state=123)
2025-04-22 14:04:14,854:INFO:create_model() successfully completed......................................
2025-04-22 14:04:15,456:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:15,456:INFO:Creating metrics dataframe
2025-04-22 14:04:15,456:INFO:Initializing Least Angle Regression
2025-04-22 14:04:15,471:INFO:Total runtime is 0.3044467488924662 minutes
2025-04-22 14:04:15,472:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:15,472:INFO:Initializing create_model()
2025-04-22 14:04:15,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:15,472:INFO:Checking exceptions
2025-04-22 14:04:15,472:INFO:Importing libraries
2025-04-22 14:04:15,472:INFO:Copying training dataset
2025-04-22 14:04:15,488:INFO:Defining folds
2025-04-22 14:04:15,488:INFO:Declaring metric variables
2025-04-22 14:04:15,494:INFO:Importing untrained model
2025-04-22 14:04:15,514:INFO:Least Angle Regression Imported successfully
2025-04-22 14:04:15,530:INFO:Starting cross validation
2025-04-22 14:04:15,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:15,931:INFO:Calculating mean and std
2025-04-22 14:04:15,931:INFO:Creating metrics dataframe
2025-04-22 14:04:15,935:INFO:Uploading results into container
2025-04-22 14:04:15,938:INFO:Uploading model into container now
2025-04-22 14:04:15,938:INFO:_master_model_container: 5
2025-04-22 14:04:15,938:INFO:_display_container: 2
2025-04-22 14:04:15,938:INFO:Lars(random_state=123)
2025-04-22 14:04:15,938:INFO:create_model() successfully completed......................................
2025-04-22 14:04:16,527:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:16,527:INFO:Creating metrics dataframe
2025-04-22 14:04:16,541:INFO:Initializing Lasso Least Angle Regression
2025-04-22 14:04:16,541:INFO:Total runtime is 0.32228043874104817 minutes
2025-04-22 14:04:16,549:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:16,555:INFO:Initializing create_model()
2025-04-22 14:04:16,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:16,555:INFO:Checking exceptions
2025-04-22 14:04:16,555:INFO:Importing libraries
2025-04-22 14:04:16,555:INFO:Copying training dataset
2025-04-22 14:04:16,562:INFO:Defining folds
2025-04-22 14:04:16,570:INFO:Declaring metric variables
2025-04-22 14:04:16,574:INFO:Importing untrained model
2025-04-22 14:04:16,586:INFO:Lasso Least Angle Regression Imported successfully
2025-04-22 14:04:16,600:INFO:Starting cross validation
2025-04-22 14:04:16,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:16,923:INFO:Calculating mean and std
2025-04-22 14:04:16,923:INFO:Creating metrics dataframe
2025-04-22 14:04:16,926:INFO:Uploading results into container
2025-04-22 14:04:16,926:INFO:Uploading model into container now
2025-04-22 14:04:16,926:INFO:_master_model_container: 6
2025-04-22 14:04:16,926:INFO:_display_container: 2
2025-04-22 14:04:16,926:INFO:LassoLars(random_state=123)
2025-04-22 14:04:16,930:INFO:create_model() successfully completed......................................
2025-04-22 14:04:17,539:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:17,539:INFO:Creating metrics dataframe
2025-04-22 14:04:17,557:INFO:Initializing Orthogonal Matching Pursuit
2025-04-22 14:04:17,557:INFO:Total runtime is 0.3392176826794942 minutes
2025-04-22 14:04:17,557:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:17,557:INFO:Initializing create_model()
2025-04-22 14:04:17,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:17,568:INFO:Checking exceptions
2025-04-22 14:04:17,568:INFO:Importing libraries
2025-04-22 14:04:17,568:INFO:Copying training dataset
2025-04-22 14:04:17,578:INFO:Defining folds
2025-04-22 14:04:17,578:INFO:Declaring metric variables
2025-04-22 14:04:17,586:INFO:Importing untrained model
2025-04-22 14:04:17,594:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-22 14:04:17,609:INFO:Starting cross validation
2025-04-22 14:04:17,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:17,945:INFO:Calculating mean and std
2025-04-22 14:04:17,945:INFO:Creating metrics dataframe
2025-04-22 14:04:17,948:INFO:Uploading results into container
2025-04-22 14:04:17,948:INFO:Uploading model into container now
2025-04-22 14:04:17,951:INFO:_master_model_container: 7
2025-04-22 14:04:17,951:INFO:_display_container: 2
2025-04-22 14:04:17,953:INFO:OrthogonalMatchingPursuit()
2025-04-22 14:04:17,953:INFO:create_model() successfully completed......................................
2025-04-22 14:04:18,545:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:18,545:INFO:Creating metrics dataframe
2025-04-22 14:04:18,560:INFO:Initializing Bayesian Ridge
2025-04-22 14:04:18,560:INFO:Total runtime is 0.35593034029006954 minutes
2025-04-22 14:04:18,565:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:18,565:INFO:Initializing create_model()
2025-04-22 14:04:18,565:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:18,565:INFO:Checking exceptions
2025-04-22 14:04:18,565:INFO:Importing libraries
2025-04-22 14:04:18,565:INFO:Copying training dataset
2025-04-22 14:04:18,578:INFO:Defining folds
2025-04-22 14:04:18,578:INFO:Declaring metric variables
2025-04-22 14:04:18,589:INFO:Importing untrained model
2025-04-22 14:04:18,597:INFO:Bayesian Ridge Imported successfully
2025-04-22 14:04:18,610:INFO:Starting cross validation
2025-04-22 14:04:18,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:18,937:INFO:Calculating mean and std
2025-04-22 14:04:18,939:INFO:Creating metrics dataframe
2025-04-22 14:04:18,939:INFO:Uploading results into container
2025-04-22 14:04:18,939:INFO:Uploading model into container now
2025-04-22 14:04:18,939:INFO:_master_model_container: 8
2025-04-22 14:04:18,939:INFO:_display_container: 2
2025-04-22 14:04:18,945:INFO:BayesianRidge()
2025-04-22 14:04:18,945:INFO:create_model() successfully completed......................................
2025-04-22 14:04:19,540:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:19,540:INFO:Creating metrics dataframe
2025-04-22 14:04:19,556:INFO:Initializing Passive Aggressive Regressor
2025-04-22 14:04:19,556:INFO:Total runtime is 0.37253868579864496 minutes
2025-04-22 14:04:19,571:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:19,571:INFO:Initializing create_model()
2025-04-22 14:04:19,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:19,573:INFO:Checking exceptions
2025-04-22 14:04:19,573:INFO:Importing libraries
2025-04-22 14:04:19,573:INFO:Copying training dataset
2025-04-22 14:04:19,580:INFO:Defining folds
2025-04-22 14:04:19,580:INFO:Declaring metric variables
2025-04-22 14:04:19,588:INFO:Importing untrained model
2025-04-22 14:04:19,593:INFO:Passive Aggressive Regressor Imported successfully
2025-04-22 14:04:19,612:INFO:Starting cross validation
2025-04-22 14:04:19,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:19,967:INFO:Calculating mean and std
2025-04-22 14:04:19,967:INFO:Creating metrics dataframe
2025-04-22 14:04:19,973:INFO:Uploading results into container
2025-04-22 14:04:19,973:INFO:Uploading model into container now
2025-04-22 14:04:19,973:INFO:_master_model_container: 9
2025-04-22 14:04:19,973:INFO:_display_container: 2
2025-04-22 14:04:19,976:INFO:PassiveAggressiveRegressor(random_state=123)
2025-04-22 14:04:19,976:INFO:create_model() successfully completed......................................
2025-04-22 14:04:20,565:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:20,565:INFO:Creating metrics dataframe
2025-04-22 14:04:20,579:INFO:Initializing Huber Regressor
2025-04-22 14:04:20,579:INFO:Total runtime is 0.3895935257275899 minutes
2025-04-22 14:04:20,587:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:20,587:INFO:Initializing create_model()
2025-04-22 14:04:20,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:20,587:INFO:Checking exceptions
2025-04-22 14:04:20,587:INFO:Importing libraries
2025-04-22 14:04:20,587:INFO:Copying training dataset
2025-04-22 14:04:20,597:INFO:Defining folds
2025-04-22 14:04:20,597:INFO:Declaring metric variables
2025-04-22 14:04:20,610:INFO:Importing untrained model
2025-04-22 14:04:20,614:INFO:Huber Regressor Imported successfully
2025-04-22 14:04:20,628:INFO:Starting cross validation
2025-04-22 14:04:20,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:21,037:INFO:Calculating mean and std
2025-04-22 14:04:21,040:INFO:Creating metrics dataframe
2025-04-22 14:04:21,042:INFO:Uploading results into container
2025-04-22 14:04:21,042:INFO:Uploading model into container now
2025-04-22 14:04:21,042:INFO:_master_model_container: 10
2025-04-22 14:04:21,042:INFO:_display_container: 2
2025-04-22 14:04:21,046:INFO:HuberRegressor()
2025-04-22 14:04:21,046:INFO:create_model() successfully completed......................................
2025-04-22 14:04:21,639:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:21,639:INFO:Creating metrics dataframe
2025-04-22 14:04:21,656:INFO:Initializing K Neighbors Regressor
2025-04-22 14:04:21,659:INFO:Total runtime is 0.40758918523788445 minutes
2025-04-22 14:04:21,667:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:21,667:INFO:Initializing create_model()
2025-04-22 14:04:21,667:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:21,667:INFO:Checking exceptions
2025-04-22 14:04:21,667:INFO:Importing libraries
2025-04-22 14:04:21,667:INFO:Copying training dataset
2025-04-22 14:04:21,779:INFO:Defining folds
2025-04-22 14:04:21,787:INFO:Declaring metric variables
2025-04-22 14:04:21,795:INFO:Importing untrained model
2025-04-22 14:04:21,801:INFO:K Neighbors Regressor Imported successfully
2025-04-22 14:04:21,816:INFO:Starting cross validation
2025-04-22 14:04:21,824:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:22,191:INFO:Calculating mean and std
2025-04-22 14:04:22,191:INFO:Creating metrics dataframe
2025-04-22 14:04:22,191:INFO:Uploading results into container
2025-04-22 14:04:22,191:INFO:Uploading model into container now
2025-04-22 14:04:22,198:INFO:_master_model_container: 11
2025-04-22 14:04:22,198:INFO:_display_container: 2
2025-04-22 14:04:22,199:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-22 14:04:22,199:INFO:create_model() successfully completed......................................
2025-04-22 14:04:22,789:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:22,789:INFO:Creating metrics dataframe
2025-04-22 14:04:22,805:INFO:Initializing Decision Tree Regressor
2025-04-22 14:04:22,805:INFO:Total runtime is 0.4266917983690897 minutes
2025-04-22 14:04:22,823:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:22,823:INFO:Initializing create_model()
2025-04-22 14:04:22,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:22,823:INFO:Checking exceptions
2025-04-22 14:04:22,823:INFO:Importing libraries
2025-04-22 14:04:22,823:INFO:Copying training dataset
2025-04-22 14:04:22,834:INFO:Defining folds
2025-04-22 14:04:22,834:INFO:Declaring metric variables
2025-04-22 14:04:22,836:INFO:Importing untrained model
2025-04-22 14:04:22,848:INFO:Decision Tree Regressor Imported successfully
2025-04-22 14:04:22,866:INFO:Starting cross validation
2025-04-22 14:04:22,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:23,224:INFO:Calculating mean and std
2025-04-22 14:04:23,224:INFO:Creating metrics dataframe
2025-04-22 14:04:23,228:INFO:Uploading results into container
2025-04-22 14:04:23,228:INFO:Uploading model into container now
2025-04-22 14:04:23,231:INFO:_master_model_container: 12
2025-04-22 14:04:23,231:INFO:_display_container: 2
2025-04-22 14:04:23,232:INFO:DecisionTreeRegressor(random_state=123)
2025-04-22 14:04:23,232:INFO:create_model() successfully completed......................................
2025-04-22 14:04:23,841:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:23,841:INFO:Creating metrics dataframe
2025-04-22 14:04:23,856:INFO:Initializing Random Forest Regressor
2025-04-22 14:04:23,858:INFO:Total runtime is 0.444232165813446 minutes
2025-04-22 14:04:23,859:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:23,863:INFO:Initializing create_model()
2025-04-22 14:04:23,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:23,864:INFO:Checking exceptions
2025-04-22 14:04:23,864:INFO:Importing libraries
2025-04-22 14:04:23,864:INFO:Copying training dataset
2025-04-22 14:04:23,875:INFO:Defining folds
2025-04-22 14:04:23,875:INFO:Declaring metric variables
2025-04-22 14:04:23,889:INFO:Importing untrained model
2025-04-22 14:04:23,898:INFO:Random Forest Regressor Imported successfully
2025-04-22 14:04:23,931:INFO:Starting cross validation
2025-04-22 14:04:23,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:27,370:INFO:Calculating mean and std
2025-04-22 14:04:27,370:INFO:Creating metrics dataframe
2025-04-22 14:04:27,374:INFO:Uploading results into container
2025-04-22 14:04:27,374:INFO:Uploading model into container now
2025-04-22 14:04:27,374:INFO:_master_model_container: 13
2025-04-22 14:04:27,374:INFO:_display_container: 2
2025-04-22 14:04:27,374:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:04:27,374:INFO:create_model() successfully completed......................................
2025-04-22 14:04:28,073:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:28,073:INFO:Creating metrics dataframe
2025-04-22 14:04:28,095:INFO:Initializing Extra Trees Regressor
2025-04-22 14:04:28,095:INFO:Total runtime is 0.5148531754811604 minutes
2025-04-22 14:04:28,100:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:28,103:INFO:Initializing create_model()
2025-04-22 14:04:28,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:28,104:INFO:Checking exceptions
2025-04-22 14:04:28,104:INFO:Importing libraries
2025-04-22 14:04:28,104:INFO:Copying training dataset
2025-04-22 14:04:28,104:INFO:Defining folds
2025-04-22 14:04:28,104:INFO:Declaring metric variables
2025-04-22 14:04:28,122:INFO:Importing untrained model
2025-04-22 14:04:28,128:INFO:Extra Trees Regressor Imported successfully
2025-04-22 14:04:28,141:INFO:Starting cross validation
2025-04-22 14:04:28,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:31,143:INFO:Calculating mean and std
2025-04-22 14:04:31,143:INFO:Creating metrics dataframe
2025-04-22 14:04:31,147:INFO:Uploading results into container
2025-04-22 14:04:31,147:INFO:Uploading model into container now
2025-04-22 14:04:31,150:INFO:_master_model_container: 14
2025-04-22 14:04:31,150:INFO:_display_container: 2
2025-04-22 14:04:31,150:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:04:31,150:INFO:create_model() successfully completed......................................
2025-04-22 14:04:31,754:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:31,754:INFO:Creating metrics dataframe
2025-04-22 14:04:31,772:INFO:Initializing AdaBoost Regressor
2025-04-22 14:04:31,772:INFO:Total runtime is 0.5761424779891967 minutes
2025-04-22 14:04:31,779:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:31,779:INFO:Initializing create_model()
2025-04-22 14:04:31,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:31,779:INFO:Checking exceptions
2025-04-22 14:04:31,782:INFO:Importing libraries
2025-04-22 14:04:31,782:INFO:Copying training dataset
2025-04-22 14:04:31,788:INFO:Defining folds
2025-04-22 14:04:31,788:INFO:Declaring metric variables
2025-04-22 14:04:31,799:INFO:Importing untrained model
2025-04-22 14:04:31,808:INFO:AdaBoost Regressor Imported successfully
2025-04-22 14:04:31,821:INFO:Starting cross validation
2025-04-22 14:04:31,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:32,714:INFO:Calculating mean and std
2025-04-22 14:04:32,714:INFO:Creating metrics dataframe
2025-04-22 14:04:32,718:INFO:Uploading results into container
2025-04-22 14:04:32,718:INFO:Uploading model into container now
2025-04-22 14:04:32,718:INFO:_master_model_container: 15
2025-04-22 14:04:32,718:INFO:_display_container: 2
2025-04-22 14:04:32,718:INFO:AdaBoostRegressor(random_state=123)
2025-04-22 14:04:32,718:INFO:create_model() successfully completed......................................
2025-04-22 14:04:33,400:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:33,400:INFO:Creating metrics dataframe
2025-04-22 14:04:33,421:INFO:Initializing Gradient Boosting Regressor
2025-04-22 14:04:33,421:INFO:Total runtime is 0.6036132891972859 minutes
2025-04-22 14:04:33,427:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:33,427:INFO:Initializing create_model()
2025-04-22 14:04:33,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:33,427:INFO:Checking exceptions
2025-04-22 14:04:33,429:INFO:Importing libraries
2025-04-22 14:04:33,429:INFO:Copying training dataset
2025-04-22 14:04:33,440:INFO:Defining folds
2025-04-22 14:04:33,440:INFO:Declaring metric variables
2025-04-22 14:04:33,446:INFO:Importing untrained model
2025-04-22 14:04:33,455:INFO:Gradient Boosting Regressor Imported successfully
2025-04-22 14:04:33,470:INFO:Starting cross validation
2025-04-22 14:04:33,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:34,848:INFO:Calculating mean and std
2025-04-22 14:04:34,848:INFO:Creating metrics dataframe
2025-04-22 14:04:34,850:INFO:Uploading results into container
2025-04-22 14:04:34,850:INFO:Uploading model into container now
2025-04-22 14:04:34,850:INFO:_master_model_container: 16
2025-04-22 14:04:34,850:INFO:_display_container: 2
2025-04-22 14:04:34,855:INFO:GradientBoostingRegressor(random_state=123)
2025-04-22 14:04:34,855:INFO:create_model() successfully completed......................................
2025-04-22 14:04:35,450:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:35,450:INFO:Creating metrics dataframe
2025-04-22 14:04:35,471:INFO:Initializing Light Gradient Boosting Machine
2025-04-22 14:04:35,471:INFO:Total runtime is 0.6377777496973672 minutes
2025-04-22 14:04:35,478:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:35,478:INFO:Initializing create_model()
2025-04-22 14:04:35,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:35,478:INFO:Checking exceptions
2025-04-22 14:04:35,478:INFO:Importing libraries
2025-04-22 14:04:35,478:INFO:Copying training dataset
2025-04-22 14:04:35,491:INFO:Defining folds
2025-04-22 14:04:35,492:INFO:Declaring metric variables
2025-04-22 14:04:35,501:INFO:Importing untrained model
2025-04-22 14:04:35,506:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-22 14:04:35,527:INFO:Starting cross validation
2025-04-22 14:04:35,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:37,346:INFO:Calculating mean and std
2025-04-22 14:04:37,346:INFO:Creating metrics dataframe
2025-04-22 14:04:37,354:INFO:Uploading results into container
2025-04-22 14:04:37,354:INFO:Uploading model into container now
2025-04-22 14:04:37,354:INFO:_master_model_container: 17
2025-04-22 14:04:37,354:INFO:_display_container: 2
2025-04-22 14:04:37,354:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:04:37,354:INFO:create_model() successfully completed......................................
2025-04-22 14:04:37,965:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:37,965:INFO:Creating metrics dataframe
2025-04-22 14:04:37,991:INFO:Initializing Dummy Regressor
2025-04-22 14:04:37,997:INFO:Total runtime is 0.6798848390579222 minutes
2025-04-22 14:04:37,997:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:38,003:INFO:Initializing create_model()
2025-04-22 14:04:38,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136496D6150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:38,003:INFO:Checking exceptions
2025-04-22 14:04:38,004:INFO:Importing libraries
2025-04-22 14:04:38,004:INFO:Copying training dataset
2025-04-22 14:04:38,012:INFO:Defining folds
2025-04-22 14:04:38,014:INFO:Declaring metric variables
2025-04-22 14:04:38,020:INFO:Importing untrained model
2025-04-22 14:04:38,027:INFO:Dummy Regressor Imported successfully
2025-04-22 14:04:38,041:INFO:Starting cross validation
2025-04-22 14:04:38,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:38,364:INFO:Calculating mean and std
2025-04-22 14:04:38,365:INFO:Creating metrics dataframe
2025-04-22 14:04:38,368:INFO:Uploading results into container
2025-04-22 14:04:38,368:INFO:Uploading model into container now
2025-04-22 14:04:38,370:INFO:_master_model_container: 18
2025-04-22 14:04:38,370:INFO:_display_container: 2
2025-04-22 14:04:38,370:INFO:DummyRegressor()
2025-04-22 14:04:38,370:INFO:create_model() successfully completed......................................
2025-04-22 14:04:39,005:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:39,005:INFO:Creating metrics dataframe
2025-04-22 14:04:39,029:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-04-22 14:04:39,044:INFO:Initializing create_model()
2025-04-22 14:04:39,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:39,044:INFO:Checking exceptions
2025-04-22 14:04:39,044:INFO:Importing libraries
2025-04-22 14:04:39,051:INFO:Copying training dataset
2025-04-22 14:04:39,058:INFO:Defining folds
2025-04-22 14:04:39,058:INFO:Declaring metric variables
2025-04-22 14:04:39,059:INFO:Importing untrained model
2025-04-22 14:04:39,059:INFO:Declaring custom model
2025-04-22 14:04:39,059:INFO:Lasso Regression Imported successfully
2025-04-22 14:04:39,062:INFO:Cross validation set to False
2025-04-22 14:04:39,062:INFO:Fitting Model
2025-04-22 14:04:39,354:INFO:Lasso(random_state=123)
2025-04-22 14:04:39,362:INFO:create_model() successfully completed......................................
2025-04-22 14:04:40,099:INFO:_master_model_container: 18
2025-04-22 14:04:40,099:INFO:_display_container: 2
2025-04-22 14:04:40,099:INFO:Lasso(random_state=123)
2025-04-22 14:04:40,099:INFO:compare_models() successfully completed......................................
2025-04-22 14:04:47,523:INFO:Initializing compare_models()
2025-04-22 14:04:47,525:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-04-22 14:04:47,525:INFO:Checking exceptions
2025-04-22 14:04:47,530:INFO:Preparing display monitor
2025-04-22 14:04:47,574:INFO:Initializing Linear Regression
2025-04-22 14:04:47,574:INFO:Total runtime is 0.0 minutes
2025-04-22 14:04:47,590:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:47,590:INFO:Initializing create_model()
2025-04-22 14:04:47,590:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:47,590:INFO:Checking exceptions
2025-04-22 14:04:47,590:INFO:Importing libraries
2025-04-22 14:04:47,590:INFO:Copying training dataset
2025-04-22 14:04:47,606:INFO:Defining folds
2025-04-22 14:04:47,606:INFO:Declaring metric variables
2025-04-22 14:04:47,615:INFO:Importing untrained model
2025-04-22 14:04:47,624:INFO:Linear Regression Imported successfully
2025-04-22 14:04:47,633:INFO:Starting cross validation
2025-04-22 14:04:47,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:47,930:INFO:Calculating mean and std
2025-04-22 14:04:47,930:INFO:Creating metrics dataframe
2025-04-22 14:04:47,935:INFO:Uploading results into container
2025-04-22 14:04:47,936:INFO:Uploading model into container now
2025-04-22 14:04:47,936:INFO:_master_model_container: 19
2025-04-22 14:04:47,937:INFO:_display_container: 3
2025-04-22 14:04:47,938:INFO:LinearRegression(n_jobs=-1)
2025-04-22 14:04:47,938:INFO:create_model() successfully completed......................................
2025-04-22 14:04:48,540:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:48,540:INFO:Creating metrics dataframe
2025-04-22 14:04:48,557:INFO:Initializing Lasso Regression
2025-04-22 14:04:48,563:INFO:Total runtime is 0.01649064620335897 minutes
2025-04-22 14:04:48,568:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:48,570:INFO:Initializing create_model()
2025-04-22 14:04:48,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:48,570:INFO:Checking exceptions
2025-04-22 14:04:48,571:INFO:Importing libraries
2025-04-22 14:04:48,571:INFO:Copying training dataset
2025-04-22 14:04:48,578:INFO:Defining folds
2025-04-22 14:04:48,578:INFO:Declaring metric variables
2025-04-22 14:04:48,587:INFO:Importing untrained model
2025-04-22 14:04:48,594:INFO:Lasso Regression Imported successfully
2025-04-22 14:04:48,604:INFO:Starting cross validation
2025-04-22 14:04:48,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:49,030:INFO:Calculating mean and std
2025-04-22 14:04:49,030:INFO:Creating metrics dataframe
2025-04-22 14:04:49,030:INFO:Uploading results into container
2025-04-22 14:04:49,030:INFO:Uploading model into container now
2025-04-22 14:04:49,030:INFO:_master_model_container: 20
2025-04-22 14:04:49,030:INFO:_display_container: 3
2025-04-22 14:04:49,038:INFO:Lasso(random_state=123)
2025-04-22 14:04:49,038:INFO:create_model() successfully completed......................................
2025-04-22 14:04:49,659:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:49,659:INFO:Creating metrics dataframe
2025-04-22 14:04:49,678:INFO:Initializing Ridge Regression
2025-04-22 14:04:49,678:INFO:Total runtime is 0.03506966829299927 minutes
2025-04-22 14:04:49,687:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:49,688:INFO:Initializing create_model()
2025-04-22 14:04:49,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:49,688:INFO:Checking exceptions
2025-04-22 14:04:49,688:INFO:Importing libraries
2025-04-22 14:04:49,688:INFO:Copying training dataset
2025-04-22 14:04:49,692:INFO:Defining folds
2025-04-22 14:04:49,692:INFO:Declaring metric variables
2025-04-22 14:04:49,711:INFO:Importing untrained model
2025-04-22 14:04:49,719:INFO:Ridge Regression Imported successfully
2025-04-22 14:04:49,736:INFO:Starting cross validation
2025-04-22 14:04:49,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:50,090:INFO:Calculating mean and std
2025-04-22 14:04:50,090:INFO:Creating metrics dataframe
2025-04-22 14:04:50,090:INFO:Uploading results into container
2025-04-22 14:04:50,090:INFO:Uploading model into container now
2025-04-22 14:04:50,090:INFO:_master_model_container: 21
2025-04-22 14:04:50,090:INFO:_display_container: 3
2025-04-22 14:04:50,090:INFO:Ridge(random_state=123)
2025-04-22 14:04:50,090:INFO:create_model() successfully completed......................................
2025-04-22 14:04:50,692:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:50,692:INFO:Creating metrics dataframe
2025-04-22 14:04:50,705:INFO:Initializing Elastic Net
2025-04-22 14:04:50,705:INFO:Total runtime is 0.05218431552251181 minutes
2025-04-22 14:04:50,713:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:50,713:INFO:Initializing create_model()
2025-04-22 14:04:50,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:50,713:INFO:Checking exceptions
2025-04-22 14:04:50,713:INFO:Importing libraries
2025-04-22 14:04:50,713:INFO:Copying training dataset
2025-04-22 14:04:50,729:INFO:Defining folds
2025-04-22 14:04:50,729:INFO:Declaring metric variables
2025-04-22 14:04:50,738:INFO:Importing untrained model
2025-04-22 14:04:50,751:INFO:Elastic Net Imported successfully
2025-04-22 14:04:50,777:INFO:Starting cross validation
2025-04-22 14:04:50,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:51,169:INFO:Calculating mean and std
2025-04-22 14:04:51,171:INFO:Creating metrics dataframe
2025-04-22 14:04:51,173:INFO:Uploading results into container
2025-04-22 14:04:51,173:INFO:Uploading model into container now
2025-04-22 14:04:51,173:INFO:_master_model_container: 22
2025-04-22 14:04:51,173:INFO:_display_container: 3
2025-04-22 14:04:51,177:INFO:ElasticNet(random_state=123)
2025-04-22 14:04:51,177:INFO:create_model() successfully completed......................................
2025-04-22 14:04:51,783:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:51,783:INFO:Creating metrics dataframe
2025-04-22 14:04:51,803:INFO:Initializing Least Angle Regression
2025-04-22 14:04:51,803:INFO:Total runtime is 0.07048071622848512 minutes
2025-04-22 14:04:51,806:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:51,806:INFO:Initializing create_model()
2025-04-22 14:04:51,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:51,806:INFO:Checking exceptions
2025-04-22 14:04:51,806:INFO:Importing libraries
2025-04-22 14:04:51,806:INFO:Copying training dataset
2025-04-22 14:04:51,822:INFO:Defining folds
2025-04-22 14:04:51,822:INFO:Declaring metric variables
2025-04-22 14:04:51,838:INFO:Importing untrained model
2025-04-22 14:04:51,854:INFO:Least Angle Regression Imported successfully
2025-04-22 14:04:51,877:INFO:Starting cross validation
2025-04-22 14:04:51,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:52,277:INFO:Calculating mean and std
2025-04-22 14:04:52,277:INFO:Creating metrics dataframe
2025-04-22 14:04:52,277:INFO:Uploading results into container
2025-04-22 14:04:52,277:INFO:Uploading model into container now
2025-04-22 14:04:52,284:INFO:_master_model_container: 23
2025-04-22 14:04:52,284:INFO:_display_container: 3
2025-04-22 14:04:52,284:INFO:Lars(random_state=123)
2025-04-22 14:04:52,284:INFO:create_model() successfully completed......................................
2025-04-22 14:04:52,886:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:52,886:INFO:Creating metrics dataframe
2025-04-22 14:04:52,905:INFO:Initializing Lasso Least Angle Regression
2025-04-22 14:04:52,905:INFO:Total runtime is 0.08885480960210165 minutes
2025-04-22 14:04:52,913:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:52,913:INFO:Initializing create_model()
2025-04-22 14:04:52,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:52,915:INFO:Checking exceptions
2025-04-22 14:04:52,915:INFO:Importing libraries
2025-04-22 14:04:52,915:INFO:Copying training dataset
2025-04-22 14:04:52,925:INFO:Defining folds
2025-04-22 14:04:52,925:INFO:Declaring metric variables
2025-04-22 14:04:52,936:INFO:Importing untrained model
2025-04-22 14:04:52,937:INFO:Lasso Least Angle Regression Imported successfully
2025-04-22 14:04:52,955:INFO:Starting cross validation
2025-04-22 14:04:52,965:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:53,286:INFO:Calculating mean and std
2025-04-22 14:04:53,288:INFO:Creating metrics dataframe
2025-04-22 14:04:53,291:INFO:Uploading results into container
2025-04-22 14:04:53,292:INFO:Uploading model into container now
2025-04-22 14:04:53,292:INFO:_master_model_container: 24
2025-04-22 14:04:53,292:INFO:_display_container: 3
2025-04-22 14:04:53,292:INFO:LassoLars(random_state=123)
2025-04-22 14:04:53,292:INFO:create_model() successfully completed......................................
2025-04-22 14:04:53,907:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:53,907:INFO:Creating metrics dataframe
2025-04-22 14:04:53,926:INFO:Initializing Orthogonal Matching Pursuit
2025-04-22 14:04:53,927:INFO:Total runtime is 0.10588916142781576 minutes
2025-04-22 14:04:53,932:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:53,932:INFO:Initializing create_model()
2025-04-22 14:04:53,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:53,932:INFO:Checking exceptions
2025-04-22 14:04:53,932:INFO:Importing libraries
2025-04-22 14:04:53,932:INFO:Copying training dataset
2025-04-22 14:04:53,942:INFO:Defining folds
2025-04-22 14:04:53,942:INFO:Declaring metric variables
2025-04-22 14:04:53,954:INFO:Importing untrained model
2025-04-22 14:04:53,962:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-22 14:04:53,978:INFO:Starting cross validation
2025-04-22 14:04:53,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:54,327:INFO:Calculating mean and std
2025-04-22 14:04:54,327:INFO:Creating metrics dataframe
2025-04-22 14:04:54,332:INFO:Uploading results into container
2025-04-22 14:04:54,357:INFO:Uploading model into container now
2025-04-22 14:04:54,357:INFO:_master_model_container: 25
2025-04-22 14:04:54,357:INFO:_display_container: 3
2025-04-22 14:04:54,357:INFO:OrthogonalMatchingPursuit()
2025-04-22 14:04:54,357:INFO:create_model() successfully completed......................................
2025-04-22 14:04:54,967:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:54,967:INFO:Creating metrics dataframe
2025-04-22 14:04:54,986:INFO:Initializing Bayesian Ridge
2025-04-22 14:04:54,986:INFO:Total runtime is 0.1235435446103414 minutes
2025-04-22 14:04:54,993:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:54,993:INFO:Initializing create_model()
2025-04-22 14:04:54,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:54,994:INFO:Checking exceptions
2025-04-22 14:04:54,994:INFO:Importing libraries
2025-04-22 14:04:54,994:INFO:Copying training dataset
2025-04-22 14:04:55,004:INFO:Defining folds
2025-04-22 14:04:55,005:INFO:Declaring metric variables
2025-04-22 14:04:55,013:INFO:Importing untrained model
2025-04-22 14:04:55,020:INFO:Bayesian Ridge Imported successfully
2025-04-22 14:04:55,041:INFO:Starting cross validation
2025-04-22 14:04:55,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:55,421:INFO:Calculating mean and std
2025-04-22 14:04:55,423:INFO:Creating metrics dataframe
2025-04-22 14:04:55,424:INFO:Uploading results into container
2025-04-22 14:04:55,424:INFO:Uploading model into container now
2025-04-22 14:04:55,424:INFO:_master_model_container: 26
2025-04-22 14:04:55,424:INFO:_display_container: 3
2025-04-22 14:04:55,424:INFO:BayesianRidge()
2025-04-22 14:04:55,429:INFO:create_model() successfully completed......................................
2025-04-22 14:04:56,042:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:56,042:INFO:Creating metrics dataframe
2025-04-22 14:04:56,059:INFO:Initializing Passive Aggressive Regressor
2025-04-22 14:04:56,059:INFO:Total runtime is 0.1414269010225932 minutes
2025-04-22 14:04:56,064:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:56,065:INFO:Initializing create_model()
2025-04-22 14:04:56,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:56,065:INFO:Checking exceptions
2025-04-22 14:04:56,066:INFO:Importing libraries
2025-04-22 14:04:56,066:INFO:Copying training dataset
2025-04-22 14:04:56,074:INFO:Defining folds
2025-04-22 14:04:56,074:INFO:Declaring metric variables
2025-04-22 14:04:56,084:INFO:Importing untrained model
2025-04-22 14:04:56,092:INFO:Passive Aggressive Regressor Imported successfully
2025-04-22 14:04:56,108:INFO:Starting cross validation
2025-04-22 14:04:56,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:56,436:INFO:Calculating mean and std
2025-04-22 14:04:56,439:INFO:Creating metrics dataframe
2025-04-22 14:04:56,440:INFO:Uploading results into container
2025-04-22 14:04:56,440:INFO:Uploading model into container now
2025-04-22 14:04:56,440:INFO:_master_model_container: 27
2025-04-22 14:04:56,440:INFO:_display_container: 3
2025-04-22 14:04:56,444:INFO:PassiveAggressiveRegressor(random_state=123)
2025-04-22 14:04:56,444:INFO:create_model() successfully completed......................................
2025-04-22 14:04:57,056:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:57,057:INFO:Creating metrics dataframe
2025-04-22 14:04:57,072:INFO:Initializing Huber Regressor
2025-04-22 14:04:57,072:INFO:Total runtime is 0.15829815069834394 minutes
2025-04-22 14:04:57,079:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:57,081:INFO:Initializing create_model()
2025-04-22 14:04:57,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:57,081:INFO:Checking exceptions
2025-04-22 14:04:57,081:INFO:Importing libraries
2025-04-22 14:04:57,081:INFO:Copying training dataset
2025-04-22 14:04:57,098:INFO:Defining folds
2025-04-22 14:04:57,098:INFO:Declaring metric variables
2025-04-22 14:04:57,106:INFO:Importing untrained model
2025-04-22 14:04:57,114:INFO:Huber Regressor Imported successfully
2025-04-22 14:04:57,127:INFO:Starting cross validation
2025-04-22 14:04:57,132:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:57,557:INFO:Calculating mean and std
2025-04-22 14:04:57,557:INFO:Creating metrics dataframe
2025-04-22 14:04:57,562:INFO:Uploading results into container
2025-04-22 14:04:57,563:INFO:Uploading model into container now
2025-04-22 14:04:57,563:INFO:_master_model_container: 28
2025-04-22 14:04:57,563:INFO:_display_container: 3
2025-04-22 14:04:57,565:INFO:HuberRegressor()
2025-04-22 14:04:57,565:INFO:create_model() successfully completed......................................
2025-04-22 14:04:58,174:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:58,174:INFO:Creating metrics dataframe
2025-04-22 14:04:58,191:INFO:Initializing K Neighbors Regressor
2025-04-22 14:04:58,191:INFO:Total runtime is 0.17694971561431888 minutes
2025-04-22 14:04:58,196:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:58,196:INFO:Initializing create_model()
2025-04-22 14:04:58,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:58,196:INFO:Checking exceptions
2025-04-22 14:04:58,196:INFO:Importing libraries
2025-04-22 14:04:58,196:INFO:Copying training dataset
2025-04-22 14:04:58,213:INFO:Defining folds
2025-04-22 14:04:58,213:INFO:Declaring metric variables
2025-04-22 14:04:58,229:INFO:Importing untrained model
2025-04-22 14:04:58,237:INFO:K Neighbors Regressor Imported successfully
2025-04-22 14:04:58,254:INFO:Starting cross validation
2025-04-22 14:04:58,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:58,658:INFO:Calculating mean and std
2025-04-22 14:04:58,658:INFO:Creating metrics dataframe
2025-04-22 14:04:58,658:INFO:Uploading results into container
2025-04-22 14:04:58,658:INFO:Uploading model into container now
2025-04-22 14:04:58,658:INFO:_master_model_container: 29
2025-04-22 14:04:58,658:INFO:_display_container: 3
2025-04-22 14:04:58,658:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-22 14:04:58,658:INFO:create_model() successfully completed......................................
2025-04-22 14:04:59,311:INFO:SubProcess create_model() end ==================================
2025-04-22 14:04:59,311:INFO:Creating metrics dataframe
2025-04-22 14:04:59,327:INFO:Initializing Decision Tree Regressor
2025-04-22 14:04:59,327:INFO:Total runtime is 0.19589115778605146 minutes
2025-04-22 14:04:59,343:INFO:SubProcess create_model() called ==================================
2025-04-22 14:04:59,344:INFO:Initializing create_model()
2025-04-22 14:04:59,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:04:59,344:INFO:Checking exceptions
2025-04-22 14:04:59,344:INFO:Importing libraries
2025-04-22 14:04:59,344:INFO:Copying training dataset
2025-04-22 14:04:59,354:INFO:Defining folds
2025-04-22 14:04:59,354:INFO:Declaring metric variables
2025-04-22 14:04:59,362:INFO:Importing untrained model
2025-04-22 14:04:59,370:INFO:Decision Tree Regressor Imported successfully
2025-04-22 14:04:59,385:INFO:Starting cross validation
2025-04-22 14:04:59,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:04:59,812:INFO:Calculating mean and std
2025-04-22 14:04:59,812:INFO:Creating metrics dataframe
2025-04-22 14:04:59,815:INFO:Uploading results into container
2025-04-22 14:04:59,815:INFO:Uploading model into container now
2025-04-22 14:04:59,815:INFO:_master_model_container: 30
2025-04-22 14:04:59,815:INFO:_display_container: 3
2025-04-22 14:04:59,815:INFO:DecisionTreeRegressor(random_state=123)
2025-04-22 14:04:59,815:INFO:create_model() successfully completed......................................
2025-04-22 14:05:00,418:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:00,418:INFO:Creating metrics dataframe
2025-04-22 14:05:00,450:INFO:Initializing Random Forest Regressor
2025-04-22 14:05:00,450:INFO:Total runtime is 0.21459962526957196 minutes
2025-04-22 14:05:00,450:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:00,450:INFO:Initializing create_model()
2025-04-22 14:05:00,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:00,450:INFO:Checking exceptions
2025-04-22 14:05:00,450:INFO:Importing libraries
2025-04-22 14:05:00,450:INFO:Copying training dataset
2025-04-22 14:05:00,471:INFO:Defining folds
2025-04-22 14:05:00,471:INFO:Declaring metric variables
2025-04-22 14:05:00,476:INFO:Importing untrained model
2025-04-22 14:05:00,488:INFO:Random Forest Regressor Imported successfully
2025-04-22 14:05:00,504:INFO:Starting cross validation
2025-04-22 14:05:00,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:03,980:INFO:Calculating mean and std
2025-04-22 14:05:03,980:INFO:Creating metrics dataframe
2025-04-22 14:05:03,980:INFO:Uploading results into container
2025-04-22 14:05:03,980:INFO:Uploading model into container now
2025-04-22 14:05:03,980:INFO:_master_model_container: 31
2025-04-22 14:05:03,988:INFO:_display_container: 3
2025-04-22 14:05:03,988:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:05:03,988:INFO:create_model() successfully completed......................................
2025-04-22 14:05:04,665:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:04,665:INFO:Creating metrics dataframe
2025-04-22 14:05:04,680:INFO:Initializing Extra Trees Regressor
2025-04-22 14:05:04,680:INFO:Total runtime is 0.28510840336481735 minutes
2025-04-22 14:05:04,690:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:04,691:INFO:Initializing create_model()
2025-04-22 14:05:04,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:04,691:INFO:Checking exceptions
2025-04-22 14:05:04,691:INFO:Importing libraries
2025-04-22 14:05:04,691:INFO:Copying training dataset
2025-04-22 14:05:04,696:INFO:Defining folds
2025-04-22 14:05:04,696:INFO:Declaring metric variables
2025-04-22 14:05:04,704:INFO:Importing untrained model
2025-04-22 14:05:04,712:INFO:Extra Trees Regressor Imported successfully
2025-04-22 14:05:04,738:INFO:Starting cross validation
2025-04-22 14:05:04,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:07,732:INFO:Calculating mean and std
2025-04-22 14:05:07,732:INFO:Creating metrics dataframe
2025-04-22 14:05:07,738:INFO:Uploading results into container
2025-04-22 14:05:07,740:INFO:Uploading model into container now
2025-04-22 14:05:07,741:INFO:_master_model_container: 32
2025-04-22 14:05:07,741:INFO:_display_container: 3
2025-04-22 14:05:07,741:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:05:07,741:INFO:create_model() successfully completed......................................
2025-04-22 14:05:08,371:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:08,371:INFO:Creating metrics dataframe
2025-04-22 14:05:08,388:INFO:Initializing AdaBoost Regressor
2025-04-22 14:05:08,388:INFO:Total runtime is 0.34690569639205937 minutes
2025-04-22 14:05:08,396:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:08,396:INFO:Initializing create_model()
2025-04-22 14:05:08,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:08,396:INFO:Checking exceptions
2025-04-22 14:05:08,396:INFO:Importing libraries
2025-04-22 14:05:08,404:INFO:Copying training dataset
2025-04-22 14:05:08,416:INFO:Defining folds
2025-04-22 14:05:08,416:INFO:Declaring metric variables
2025-04-22 14:05:08,421:INFO:Importing untrained model
2025-04-22 14:05:08,429:INFO:AdaBoost Regressor Imported successfully
2025-04-22 14:05:08,450:INFO:Starting cross validation
2025-04-22 14:05:08,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:09,372:INFO:Calculating mean and std
2025-04-22 14:05:09,372:INFO:Creating metrics dataframe
2025-04-22 14:05:09,378:INFO:Uploading results into container
2025-04-22 14:05:09,379:INFO:Uploading model into container now
2025-04-22 14:05:09,379:INFO:_master_model_container: 33
2025-04-22 14:05:09,379:INFO:_display_container: 3
2025-04-22 14:05:09,379:INFO:AdaBoostRegressor(random_state=123)
2025-04-22 14:05:09,379:INFO:create_model() successfully completed......................................
2025-04-22 14:05:10,038:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:10,038:INFO:Creating metrics dataframe
2025-04-22 14:05:10,052:INFO:Initializing Gradient Boosting Regressor
2025-04-22 14:05:10,060:INFO:Total runtime is 0.37477501233418786 minutes
2025-04-22 14:05:10,060:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:10,060:INFO:Initializing create_model()
2025-04-22 14:05:10,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:10,060:INFO:Checking exceptions
2025-04-22 14:05:10,060:INFO:Importing libraries
2025-04-22 14:05:10,068:INFO:Copying training dataset
2025-04-22 14:05:10,074:INFO:Defining folds
2025-04-22 14:05:10,074:INFO:Declaring metric variables
2025-04-22 14:05:10,084:INFO:Importing untrained model
2025-04-22 14:05:10,092:INFO:Gradient Boosting Regressor Imported successfully
2025-04-22 14:05:10,105:INFO:Starting cross validation
2025-04-22 14:05:10,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:11,460:INFO:Calculating mean and std
2025-04-22 14:05:11,460:INFO:Creating metrics dataframe
2025-04-22 14:05:11,464:INFO:Uploading results into container
2025-04-22 14:05:11,466:INFO:Uploading model into container now
2025-04-22 14:05:11,466:INFO:_master_model_container: 34
2025-04-22 14:05:11,466:INFO:_display_container: 3
2025-04-22 14:05:11,466:INFO:GradientBoostingRegressor(random_state=123)
2025-04-22 14:05:11,466:INFO:create_model() successfully completed......................................
2025-04-22 14:05:12,087:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:12,087:INFO:Creating metrics dataframe
2025-04-22 14:05:12,106:INFO:Initializing Light Gradient Boosting Machine
2025-04-22 14:05:12,106:INFO:Total runtime is 0.4088794589042664 minutes
2025-04-22 14:05:12,107:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:12,107:INFO:Initializing create_model()
2025-04-22 14:05:12,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:12,107:INFO:Checking exceptions
2025-04-22 14:05:12,107:INFO:Importing libraries
2025-04-22 14:05:12,107:INFO:Copying training dataset
2025-04-22 14:05:12,123:INFO:Defining folds
2025-04-22 14:05:12,123:INFO:Declaring metric variables
2025-04-22 14:05:12,124:INFO:Importing untrained model
2025-04-22 14:05:12,138:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-22 14:05:12,155:INFO:Starting cross validation
2025-04-22 14:05:12,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:13,942:INFO:Calculating mean and std
2025-04-22 14:05:13,942:INFO:Creating metrics dataframe
2025-04-22 14:05:13,949:INFO:Uploading results into container
2025-04-22 14:05:13,949:INFO:Uploading model into container now
2025-04-22 14:05:13,949:INFO:_master_model_container: 35
2025-04-22 14:05:13,949:INFO:_display_container: 3
2025-04-22 14:05:13,955:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-04-22 14:05:13,955:INFO:create_model() successfully completed......................................
2025-04-22 14:05:14,596:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:14,596:INFO:Creating metrics dataframe
2025-04-22 14:05:14,621:INFO:Initializing Dummy Regressor
2025-04-22 14:05:14,621:INFO:Total runtime is 0.45079242785771695 minutes
2025-04-22 14:05:14,629:INFO:SubProcess create_model() called ==================================
2025-04-22 14:05:14,629:INFO:Initializing create_model()
2025-04-22 14:05:14,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365C1F2C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:14,629:INFO:Checking exceptions
2025-04-22 14:05:14,629:INFO:Importing libraries
2025-04-22 14:05:14,629:INFO:Copying training dataset
2025-04-22 14:05:14,641:INFO:Defining folds
2025-04-22 14:05:14,641:INFO:Declaring metric variables
2025-04-22 14:05:14,647:INFO:Importing untrained model
2025-04-22 14:05:14,655:INFO:Dummy Regressor Imported successfully
2025-04-22 14:05:14,663:INFO:Starting cross validation
2025-04-22 14:05:14,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:05:14,969:INFO:Calculating mean and std
2025-04-22 14:05:14,971:INFO:Creating metrics dataframe
2025-04-22 14:05:14,975:INFO:Uploading results into container
2025-04-22 14:05:14,975:INFO:Uploading model into container now
2025-04-22 14:05:14,975:INFO:_master_model_container: 36
2025-04-22 14:05:14,975:INFO:_display_container: 3
2025-04-22 14:05:14,975:INFO:DummyRegressor()
2025-04-22 14:05:14,975:INFO:create_model() successfully completed......................................
2025-04-22 14:05:15,613:INFO:SubProcess create_model() end ==================================
2025-04-22 14:05:15,613:INFO:Creating metrics dataframe
2025-04-22 14:05:15,640:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-04-22 14:05:15,655:INFO:Initializing create_model()
2025-04-22 14:05:15,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:05:15,655:INFO:Checking exceptions
2025-04-22 14:05:15,655:INFO:Importing libraries
2025-04-22 14:05:15,655:INFO:Copying training dataset
2025-04-22 14:05:15,662:INFO:Defining folds
2025-04-22 14:05:15,662:INFO:Declaring metric variables
2025-04-22 14:05:15,662:INFO:Importing untrained model
2025-04-22 14:05:15,662:INFO:Declaring custom model
2025-04-22 14:05:15,662:INFO:Lasso Regression Imported successfully
2025-04-22 14:05:15,671:INFO:Cross validation set to False
2025-04-22 14:05:15,671:INFO:Fitting Model
2025-04-22 14:05:15,834:INFO:Lasso(random_state=123)
2025-04-22 14:05:15,834:INFO:create_model() successfully completed......................................
2025-04-22 14:05:16,551:INFO:_master_model_container: 36
2025-04-22 14:05:16,551:INFO:_display_container: 3
2025-04-22 14:05:16,555:INFO:Lasso(random_state=123)
2025-04-22 14:05:16,555:INFO:compare_models() successfully completed......................................
2025-04-22 14:07:28,992:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1945775195.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.rename(columns={

2025-04-22 14:07:55,308:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3118231542.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["tempo"]=df_final["tempo"].round(2)

2025-04-22 14:08:37,967:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1945775195.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.rename(columns={

2025-04-22 14:08:38,083:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1956440826.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(8022, inplace=True)

2025-04-22 14:08:38,110:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3001551626.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(4293, inplace=True)

2025-04-22 14:10:05,681:INFO:Initializing get_config()
2025-04-22 14:10:05,681:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, variable=X_train)
2025-04-22 14:10:05,681:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-04-22 14:10:05,681:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-04-22 14:10:05,695:INFO:Variable:  returned as       sex sex_cat  time_5km  time_10km
1614    1     M40      1500       2924
8654    1     M40      1976       3992
6623    1     M40      1667       3343
1956    1     M50      1406       2787
3073    1     M20      1663       3248
...   ...     ...       ...        ...
9843    1     M40      1998       4127
7813    1     M20      1987       3935
5257    0     K30      1735       3402
1370    1     M50      1412       2813
3618    1     M40      1594       3161

[6976 rows x 4 columns]
2025-04-22 14:10:05,695:INFO:get_config() successfully completed......................................
2025-04-22 14:10:23,325:INFO:Initializing tune_model()
2025-04-22 14:10:23,325:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-04-22 14:10:23,325:INFO:Checking exceptions
2025-04-22 14:10:23,361:INFO:Copying training dataset
2025-04-22 14:10:23,369:INFO:Checking base model
2025-04-22 14:10:23,369:INFO:Base model : Lasso Regression
2025-04-22 14:10:23,385:INFO:Declaring metric variables
2025-04-22 14:10:23,394:INFO:Defining Hyperparameters
2025-04-22 14:10:24,108:INFO:Tuning with n_jobs=-1
2025-04-22 14:10:24,111:INFO:Initializing RandomizedSearchCV
2025-04-22 14:10:35,184:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.002e+08, tolerance: 3.487e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,184:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.053e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,184:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.037e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,187:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.058e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,197:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.016e+08, tolerance: 3.497e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,231:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.051e+08, tolerance: 3.500e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,247:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.079e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,247:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.037e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,263:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.080e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,263:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.013e+08, tolerance: 3.496e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,310:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.054e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,347:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.059e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,347:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.017e+08, tolerance: 3.497e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,389:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.038e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,431:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.003e+08, tolerance: 3.487e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,472:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.038e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,500:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.052e+08, tolerance: 3.500e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,502:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.082e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,502:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.080e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,532:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.014e+08, tolerance: 3.496e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,532:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.052e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,535:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.015e+08, tolerance: 3.497e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,548:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.051e+08, tolerance: 3.500e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,548:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.058e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,556:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.001e+08, tolerance: 3.487e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,577:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.036e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,587:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.036e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,637:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.079e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,643:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.013e+08, tolerance: 3.496e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,700:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.080e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,722:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.053e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,751:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.017e+08, tolerance: 3.497e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,772:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.059e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,795:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.002e+08, tolerance: 3.487e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,817:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.038e+08, tolerance: 3.501e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,826:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.080e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,836:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.052e+08, tolerance: 3.500e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,836:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.014e+08, tolerance: 3.496e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,849:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.038e+08, tolerance: 3.503e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:35,866:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.081e+08, tolerance: 3.505e+07
  model = cd_fast.enet_coordinate_descent(

2025-04-22 14:10:36,119:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.54}
2025-04-22 14:10:36,119:INFO:Hyperparameter search completed
2025-04-22 14:10:36,119:INFO:SubProcess create_model() called ==================================
2025-04-22 14:10:36,126:INFO:Initializing create_model()
2025-04-22 14:10:36,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365EBCED90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'alpha': 0.54})
2025-04-22 14:10:36,126:INFO:Checking exceptions
2025-04-22 14:10:36,126:INFO:Importing libraries
2025-04-22 14:10:36,127:INFO:Copying training dataset
2025-04-22 14:10:36,134:INFO:Defining folds
2025-04-22 14:10:36,134:INFO:Declaring metric variables
2025-04-22 14:10:36,146:INFO:Importing untrained model
2025-04-22 14:10:36,146:INFO:Declaring custom model
2025-04-22 14:10:36,154:INFO:Lasso Regression Imported successfully
2025-04-22 14:10:36,168:INFO:Starting cross validation
2025-04-22 14:10:36,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:10:36,536:INFO:Calculating mean and std
2025-04-22 14:10:36,536:INFO:Creating metrics dataframe
2025-04-22 14:10:36,547:INFO:Finalizing model
2025-04-22 14:10:36,734:INFO:Uploading results into container
2025-04-22 14:10:36,735:INFO:Uploading model into container now
2025-04-22 14:10:36,738:INFO:_master_model_container: 37
2025-04-22 14:10:36,738:INFO:_display_container: 4
2025-04-22 14:10:36,738:INFO:Lasso(alpha=0.54, random_state=123)
2025-04-22 14:10:36,738:INFO:create_model() successfully completed......................................
2025-04-22 14:10:37,432:INFO:SubProcess create_model() end ==================================
2025-04-22 14:10:37,432:INFO:choose_better activated
2025-04-22 14:10:37,435:INFO:SubProcess create_model() called ==================================
2025-04-22 14:10:37,440:INFO:Initializing create_model()
2025-04-22 14:10:37,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:10:37,441:INFO:Checking exceptions
2025-04-22 14:10:37,442:INFO:Importing libraries
2025-04-22 14:10:37,442:INFO:Copying training dataset
2025-04-22 14:10:37,452:INFO:Defining folds
2025-04-22 14:10:37,452:INFO:Declaring metric variables
2025-04-22 14:10:37,452:INFO:Importing untrained model
2025-04-22 14:10:37,452:INFO:Declaring custom model
2025-04-22 14:10:37,452:INFO:Lasso Regression Imported successfully
2025-04-22 14:10:37,452:INFO:Starting cross validation
2025-04-22 14:10:37,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 14:10:37,880:INFO:Calculating mean and std
2025-04-22 14:10:37,880:INFO:Creating metrics dataframe
2025-04-22 14:10:37,880:INFO:Finalizing model
2025-04-22 14:10:38,050:INFO:Uploading results into container
2025-04-22 14:10:38,050:INFO:Uploading model into container now
2025-04-22 14:10:38,050:INFO:_master_model_container: 38
2025-04-22 14:10:38,050:INFO:_display_container: 5
2025-04-22 14:10:38,050:INFO:Lasso(random_state=123)
2025-04-22 14:10:38,050:INFO:create_model() successfully completed......................................
2025-04-22 14:10:38,786:INFO:SubProcess create_model() end ==================================
2025-04-22 14:10:38,786:INFO:Lasso(random_state=123) result for R2 is 0.9548
2025-04-22 14:10:38,787:INFO:Lasso(alpha=0.54, random_state=123) result for R2 is 0.9547
2025-04-22 14:10:38,787:INFO:Lasso(random_state=123) is best model
2025-04-22 14:10:38,787:INFO:choose_better completed
2025-04-22 14:10:38,787:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-22 14:10:38,798:INFO:_master_model_container: 38
2025-04-22 14:10:38,807:INFO:_display_container: 4
2025-04-22 14:10:38,807:INFO:Lasso(random_state=123)
2025-04-22 14:10:38,807:INFO:tune_model() successfully completed......................................
2025-04-22 14:11:31,749:INFO:Initializing get_config()
2025-04-22 14:11:31,749:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, variable=prep_pipe)
2025-04-22 14:11:47,995:INFO:Initializing finalize_model()
2025-04-22 14:11:47,995:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-04-22 14:11:47,998:INFO:Finalizing Lasso(random_state=123)
2025-04-22 14:11:48,004:INFO:Initializing create_model()
2025-04-22 14:11:48,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Lasso(random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:11:48,004:INFO:Checking exceptions
2025-04-22 14:11:48,006:INFO:Importing libraries
2025-04-22 14:11:48,007:INFO:Copying training dataset
2025-04-22 14:11:48,007:INFO:Defining folds
2025-04-22 14:11:48,007:INFO:Declaring metric variables
2025-04-22 14:11:48,007:INFO:Importing untrained model
2025-04-22 14:11:48,008:INFO:Declaring custom model
2025-04-22 14:11:48,008:INFO:Lasso Regression Imported successfully
2025-04-22 14:11:48,011:INFO:Cross validation set to False
2025-04-22 14:11:48,012:INFO:Fitting Model
2025-04-22 14:11:48,237:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))])
2025-04-22 14:11:48,237:INFO:create_model() successfully completed......................................
2025-04-22 14:11:48,933:INFO:_master_model_container: 38
2025-04-22 14:11:48,933:INFO:_display_container: 4
2025-04-22 14:11:48,990:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))])
2025-04-22 14:11:48,990:INFO:finalize_model() successfully completed......................................
2025-04-22 14:12:20,388:INFO:Initializing predict_model()
2025-04-22 14:12:20,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001365C1677E0>)
2025-04-22 14:12:20,389:INFO:Checking exceptions
2025-04-22 14:12:20,389:INFO:Preloading libraries
2025-04-22 14:12:20,389:INFO:Set up data.
2025-04-22 14:12:20,393:INFO:Set up index.
2025-04-22 14:19:26,011:INFO:Initializing predict_model()
2025-04-22 14:19:26,011:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000013657507EC0>)
2025-04-22 14:19:26,011:INFO:Checking exceptions
2025-04-22 14:19:26,011:INFO:Preloading libraries
2025-04-22 14:19:26,019:INFO:Set up data.
2025-04-22 14:19:26,021:INFO:Set up index.
2025-04-22 14:19:33,343:INFO:Initializing predict_model()
2025-04-22 14:19:33,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001365C47E840>)
2025-04-22 14:19:33,343:INFO:Checking exceptions
2025-04-22 14:19:33,343:INFO:Preloading libraries
2025-04-22 14:19:33,351:INFO:Set up data.
2025-04-22 14:19:33,357:INFO:Set up index.
2025-04-22 14:20:00,015:INFO:Initializing load_model()
2025-04-22 14:20:00,015:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 14:20:29,512:INFO:Initializing load_model()
2025-04-22 14:20:29,512:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 14:20:35,712:INFO:Initializing predict_model()
2025-04-22 14:20:35,712:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\sxwem\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001365C47E840>)
2025-04-22 14:20:35,712:INFO:Checking exceptions
2025-04-22 14:20:35,712:INFO:Preloading libraries
2025-04-22 14:20:35,724:INFO:Set up data.
2025-04-22 14:20:35,726:INFO:Set up index.
2025-04-22 14:20:39,054:INFO:Initializing predict_model()
2025-04-22 14:20:39,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001365B53EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'sex_cat'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['sex_cat'],
                                    transformer=OneHotEncoder(cols=['sex_cat'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', Lasso(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001365FC28C20>)
2025-04-22 14:20:39,054:INFO:Checking exceptions
2025-04-22 14:20:39,054:INFO:Preloading libraries
2025-04-22 14:20:39,054:INFO:Set up data.
2025-04-22 14:20:39,059:INFO:Set up index.
2025-04-22 14:58:45,594:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3759072673.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  filtred_not_null_df["Czas"]=filtred_not_null_df["Czas"].apply(time_to_minutes)

2025-04-22 14:59:37,723:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1945775195.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.rename(columns={

2025-04-22 14:59:37,866:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\1956440826.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(8022, inplace=True)

2025-04-22 14:59:37,910:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3001551626.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final.drop(4293, inplace=True)

2025-04-22 14:59:47,623:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\805044233.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["sex"]=df_final["sex"].apply(sex_to_cat)

2025-04-22 14:59:47,690:WARNING:C:\Users\sxwem\AppData\Local\Temp\ipykernel_12676\3118231542.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_final["tempo"]=df_final["tempo"].round(2)

2025-04-22 14:59:47,845:INFO:PyCaret RegressionExperiment
2025-04-22 14:59:47,845:INFO:Logging name: reg-default-name
2025-04-22 14:59:47,845:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-22 14:59:47,845:INFO:version 3.3.2
2025-04-22 14:59:47,846:INFO:Initializing setup()
2025-04-22 14:59:47,846:INFO:self.USI: 955c
2025-04-22 14:59:47,846:INFO:self._variable_keys: {'y', 'gpu_n_jobs_param', 'memory', 'y_test', 'X_train', 'fold_generator', 'exp_id', '_available_plots', 'seed', 'gpu_param', 'n_jobs_param', 'y_train', 'X_test', 'fold_shuffle_param', 'html_param', 'logging_param', 'transform_target_param', 'target_param', 'fold_groups_param', 'pipeline', 'idx', 'log_plots_param', 'exp_name_log', 'X', 'USI', 'data', '_ml_usecase'}
2025-04-22 14:59:47,846:INFO:Checking environment
2025-04-22 14:59:47,846:INFO:python_version: 3.11.11
2025-04-22 14:59:47,846:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-04-22 14:59:47,846:INFO:machine: AMD64
2025-04-22 14:59:47,846:INFO:platform: Windows-10-10.0.22631-SP0
2025-04-22 14:59:47,852:INFO:Memory: svmem(total=16537391104, available=4600881152, percent=72.2, used=11936509952, free=4600881152)
2025-04-22 14:59:47,852:INFO:Physical Core: 8
2025-04-22 14:59:47,852:INFO:Logical Core: 16
2025-04-22 14:59:47,852:INFO:Checking libraries
2025-04-22 14:59:47,852:INFO:System:
2025-04-22 14:59:47,852:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-04-22 14:59:47,852:INFO:executable: c:\Users\sxwem\miniconda3\envs\app_marathon\python.exe
2025-04-22 14:59:47,852:INFO:   machine: Windows-10-10.0.22631-SP0
2025-04-22 14:59:47,852:INFO:PyCaret required dependencies:
2025-04-22 14:59:47,852:INFO:                 pip: 25.0
2025-04-22 14:59:47,852:INFO:          setuptools: 72.1.0
2025-04-22 14:59:47,852:INFO:             pycaret: 3.3.2
2025-04-22 14:59:47,852:INFO:             IPython: 9.1.0
2025-04-22 14:59:47,852:INFO:          ipywidgets: 8.1.5
2025-04-22 14:59:47,852:INFO:                tqdm: 4.67.1
2025-04-22 14:59:47,852:INFO:               numpy: 1.26.4
2025-04-22 14:59:47,852:INFO:              pandas: 2.1.4
2025-04-22 14:59:47,852:INFO:              jinja2: 3.1.6
2025-04-22 14:59:47,852:INFO:               scipy: 1.11.4
2025-04-22 14:59:47,852:INFO:              joblib: 1.3.2
2025-04-22 14:59:47,852:INFO:             sklearn: 1.4.2
2025-04-22 14:59:47,852:INFO:                pyod: 2.0.4
2025-04-22 14:59:47,852:INFO:            imblearn: 0.13.0
2025-04-22 14:59:47,852:INFO:   category_encoders: 2.7.0
2025-04-22 14:59:47,852:INFO:            lightgbm: 4.6.0
2025-04-22 14:59:47,852:INFO:               numba: 0.61.2
2025-04-22 14:59:47,852:INFO:            requests: 2.32.3
2025-04-22 14:59:47,852:INFO:          matplotlib: 3.7.5
2025-04-22 14:59:47,852:INFO:          scikitplot: 0.3.7
2025-04-22 14:59:47,852:INFO:         yellowbrick: 1.5
2025-04-22 14:59:47,852:INFO:              plotly: 5.24.1
2025-04-22 14:59:47,852:INFO:    plotly-resampler: Not installed
2025-04-22 14:59:47,852:INFO:             kaleido: 0.2.1
2025-04-22 14:59:47,852:INFO:           schemdraw: 0.15
2025-04-22 14:59:47,852:INFO:         statsmodels: 0.14.4
2025-04-22 14:59:47,852:INFO:              sktime: 0.26.0
2025-04-22 14:59:47,852:INFO:               tbats: 1.1.3
2025-04-22 14:59:47,852:INFO:            pmdarima: 2.0.4
2025-04-22 14:59:47,852:INFO:              psutil: 7.0.0
2025-04-22 14:59:47,852:INFO:          markupsafe: 3.0.2
2025-04-22 14:59:47,852:INFO:             pickle5: Not installed
2025-04-22 14:59:47,852:INFO:         cloudpickle: 3.1.1
2025-04-22 14:59:47,852:INFO:         deprecation: 2.1.0
2025-04-22 14:59:47,852:INFO:              xxhash: 3.5.0
2025-04-22 14:59:47,852:INFO:           wurlitzer: Not installed
2025-04-22 14:59:47,852:INFO:PyCaret optional dependencies:
2025-04-22 14:59:47,860:INFO:                shap: Not installed
2025-04-22 14:59:47,860:INFO:           interpret: Not installed
2025-04-22 14:59:47,860:INFO:                umap: Not installed
2025-04-22 14:59:47,860:INFO:     ydata_profiling: Not installed
2025-04-22 14:59:47,860:INFO:  explainerdashboard: Not installed
2025-04-22 14:59:47,860:INFO:             autoviz: Not installed
2025-04-22 14:59:47,860:INFO:           fairlearn: Not installed
2025-04-22 14:59:47,860:INFO:          deepchecks: Not installed
2025-04-22 14:59:47,860:INFO:             xgboost: Not installed
2025-04-22 14:59:47,860:INFO:            catboost: Not installed
2025-04-22 14:59:47,860:INFO:              kmodes: Not installed
2025-04-22 14:59:47,860:INFO:             mlxtend: Not installed
2025-04-22 14:59:47,860:INFO:       statsforecast: Not installed
2025-04-22 14:59:47,860:INFO:        tune_sklearn: Not installed
2025-04-22 14:59:47,860:INFO:                 ray: Not installed
2025-04-22 14:59:47,860:INFO:            hyperopt: Not installed
2025-04-22 14:59:47,860:INFO:              optuna: Not installed
2025-04-22 14:59:47,860:INFO:               skopt: Not installed
2025-04-22 14:59:47,860:INFO:              mlflow: Not installed
2025-04-22 14:59:47,860:INFO:              gradio: Not installed
2025-04-22 14:59:47,860:INFO:             fastapi: Not installed
2025-04-22 14:59:47,860:INFO:             uvicorn: Not installed
2025-04-22 14:59:47,860:INFO:              m2cgen: Not installed
2025-04-22 14:59:47,860:INFO:           evidently: Not installed
2025-04-22 14:59:47,860:INFO:               fugue: Not installed
2025-04-22 14:59:47,860:INFO:           streamlit: 1.44.1
2025-04-22 14:59:47,860:INFO:             prophet: Not installed
2025-04-22 14:59:47,860:INFO:None
2025-04-22 14:59:47,860:INFO:Set up data.
2025-04-22 14:59:47,868:INFO:Set up folding strategy.
2025-04-22 14:59:47,868:INFO:Set up train/test split.
2025-04-22 14:59:47,874:INFO:Set up index.
2025-04-22 14:59:47,875:INFO:Assigning column types.
2025-04-22 14:59:47,879:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-22 14:59:47,881:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-22 14:59:47,886:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:59:47,898:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,008:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,107:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,113:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,130:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,401:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-22 14:59:48,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,627:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,636:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:48,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:48,866:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-22 14:59:48,892:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,300:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,404:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,404:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-22 14:59:49,555:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,818:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-22 14:59:49,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:49,920:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-22 14:59:50,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:50,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-22 14:59:50,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,415:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-22 14:59:50,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:50,878:INFO:Preparing preprocessing pipeline...
2025-04-22 14:59:50,878:INFO:Set up simple imputation.
2025-04-22 14:59:50,884:INFO:Set up encoding of ordinal features.
2025-04-22 14:59:50,884:INFO:Set up encoding of categorical features.
2025-04-22 14:59:50,963:INFO:Finished creating preprocessing pipeline.
2025-04-22 14:59:51,019:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\sxwem\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}])))])
2025-04-22 14:59:51,019:INFO:Creating final display dataframe.
2025-04-22 14:59:51,254:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              time
2                   Target type        Regression
3           Original data shape         (9967, 4)
4        Transformed data shape         (9967, 4)
5   Transformed train set shape         (6976, 4)
6    Transformed test set shape         (2991, 4)
7              Numeric features                 2
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              955c
2025-04-22 14:59:51,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:51,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:51,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:51,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-22 14:59:51,732:INFO:setup() successfully completed in 3.91s...............
2025-04-22 14:59:51,753:INFO:Initializing compare_models()
2025-04-22 14:59:51,753:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-04-22 14:59:51,757:INFO:Checking exceptions
2025-04-22 14:59:51,763:INFO:Preparing display monitor
2025-04-22 14:59:51,807:INFO:Initializing Linear Regression
2025-04-22 14:59:51,807:INFO:Total runtime is 0.0 minutes
2025-04-22 14:59:51,817:INFO:SubProcess create_model() called ==================================
2025-04-22 14:59:51,817:INFO:Initializing create_model()
2025-04-22 14:59:51,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 14:59:51,817:INFO:Checking exceptions
2025-04-22 14:59:51,817:INFO:Importing libraries
2025-04-22 14:59:51,819:INFO:Copying training dataset
2025-04-22 14:59:51,830:INFO:Defining folds
2025-04-22 14:59:51,830:INFO:Declaring metric variables
2025-04-22 14:59:51,838:INFO:Importing untrained model
2025-04-22 14:59:51,844:INFO:Linear Regression Imported successfully
2025-04-22 14:59:51,859:INFO:Starting cross validation
2025-04-22 14:59:51,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:03,140:INFO:Calculating mean and std
2025-04-22 15:00:03,141:INFO:Creating metrics dataframe
2025-04-22 15:00:03,146:INFO:Uploading results into container
2025-04-22 15:00:03,150:INFO:Uploading model into container now
2025-04-22 15:00:03,151:INFO:_master_model_container: 1
2025-04-22 15:00:03,151:INFO:_display_container: 2
2025-04-22 15:00:03,151:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:03,151:INFO:create_model() successfully completed......................................
2025-04-22 15:00:04,230:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:04,230:INFO:Creating metrics dataframe
2025-04-22 15:00:04,246:INFO:Initializing Lasso Regression
2025-04-22 15:00:04,246:INFO:Total runtime is 0.20731175740559896 minutes
2025-04-22 15:00:04,254:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:04,254:INFO:Initializing create_model()
2025-04-22 15:00:04,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:04,254:INFO:Checking exceptions
2025-04-22 15:00:04,254:INFO:Importing libraries
2025-04-22 15:00:04,254:INFO:Copying training dataset
2025-04-22 15:00:04,264:INFO:Defining folds
2025-04-22 15:00:04,264:INFO:Declaring metric variables
2025-04-22 15:00:04,272:INFO:Importing untrained model
2025-04-22 15:00:04,281:INFO:Lasso Regression Imported successfully
2025-04-22 15:00:04,297:INFO:Starting cross validation
2025-04-22 15:00:04,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:10,932:INFO:Calculating mean and std
2025-04-22 15:00:10,932:INFO:Creating metrics dataframe
2025-04-22 15:00:10,932:INFO:Uploading results into container
2025-04-22 15:00:10,932:INFO:Uploading model into container now
2025-04-22 15:00:10,932:INFO:_master_model_container: 2
2025-04-22 15:00:10,932:INFO:_display_container: 2
2025-04-22 15:00:10,943:INFO:Lasso(random_state=123)
2025-04-22 15:00:10,943:INFO:create_model() successfully completed......................................
2025-04-22 15:00:11,915:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:11,915:INFO:Creating metrics dataframe
2025-04-22 15:00:11,928:INFO:Initializing Ridge Regression
2025-04-22 15:00:11,928:INFO:Total runtime is 0.33534541527430217 minutes
2025-04-22 15:00:11,933:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:11,938:INFO:Initializing create_model()
2025-04-22 15:00:11,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:11,940:INFO:Checking exceptions
2025-04-22 15:00:11,940:INFO:Importing libraries
2025-04-22 15:00:11,940:INFO:Copying training dataset
2025-04-22 15:00:11,952:INFO:Defining folds
2025-04-22 15:00:11,952:INFO:Declaring metric variables
2025-04-22 15:00:11,963:INFO:Importing untrained model
2025-04-22 15:00:11,970:INFO:Ridge Regression Imported successfully
2025-04-22 15:00:11,986:INFO:Starting cross validation
2025-04-22 15:00:11,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:12,247:INFO:Calculating mean and std
2025-04-22 15:00:12,248:INFO:Creating metrics dataframe
2025-04-22 15:00:12,251:INFO:Uploading results into container
2025-04-22 15:00:12,251:INFO:Uploading model into container now
2025-04-22 15:00:12,251:INFO:_master_model_container: 3
2025-04-22 15:00:12,251:INFO:_display_container: 2
2025-04-22 15:00:12,251:INFO:Ridge(random_state=123)
2025-04-22 15:00:12,251:INFO:create_model() successfully completed......................................
2025-04-22 15:00:13,272:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:13,272:INFO:Creating metrics dataframe
2025-04-22 15:00:13,283:INFO:Initializing Elastic Net
2025-04-22 15:00:13,283:INFO:Total runtime is 0.3579400658607483 minutes
2025-04-22 15:00:13,296:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:13,296:INFO:Initializing create_model()
2025-04-22 15:00:13,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:13,296:INFO:Checking exceptions
2025-04-22 15:00:13,296:INFO:Importing libraries
2025-04-22 15:00:13,296:INFO:Copying training dataset
2025-04-22 15:00:13,303:INFO:Defining folds
2025-04-22 15:00:13,303:INFO:Declaring metric variables
2025-04-22 15:00:13,315:INFO:Importing untrained model
2025-04-22 15:00:13,320:INFO:Elastic Net Imported successfully
2025-04-22 15:00:13,331:INFO:Starting cross validation
2025-04-22 15:00:13,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:13,552:INFO:Calculating mean and std
2025-04-22 15:00:13,554:INFO:Creating metrics dataframe
2025-04-22 15:00:13,556:INFO:Uploading results into container
2025-04-22 15:00:13,556:INFO:Uploading model into container now
2025-04-22 15:00:13,556:INFO:_master_model_container: 4
2025-04-22 15:00:13,556:INFO:_display_container: 2
2025-04-22 15:00:13,556:INFO:ElasticNet(random_state=123)
2025-04-22 15:00:13,556:INFO:create_model() successfully completed......................................
2025-04-22 15:00:14,583:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:14,583:INFO:Creating metrics dataframe
2025-04-22 15:00:14,595:INFO:Initializing Least Angle Regression
2025-04-22 15:00:14,595:INFO:Total runtime is 0.3797967672348022 minutes
2025-04-22 15:00:14,605:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:14,606:INFO:Initializing create_model()
2025-04-22 15:00:14,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:14,606:INFO:Checking exceptions
2025-04-22 15:00:14,606:INFO:Importing libraries
2025-04-22 15:00:14,606:INFO:Copying training dataset
2025-04-22 15:00:14,609:INFO:Defining folds
2025-04-22 15:00:14,609:INFO:Declaring metric variables
2025-04-22 15:00:14,622:INFO:Importing untrained model
2025-04-22 15:00:14,630:INFO:Least Angle Regression Imported successfully
2025-04-22 15:00:14,641:INFO:Starting cross validation
2025-04-22 15:00:14,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:14,845:INFO:Calculating mean and std
2025-04-22 15:00:14,846:INFO:Creating metrics dataframe
2025-04-22 15:00:14,851:INFO:Uploading results into container
2025-04-22 15:00:14,852:INFO:Uploading model into container now
2025-04-22 15:00:14,852:INFO:_master_model_container: 5
2025-04-22 15:00:14,852:INFO:_display_container: 2
2025-04-22 15:00:14,853:INFO:Lars(random_state=123)
2025-04-22 15:00:14,853:INFO:create_model() successfully completed......................................
2025-04-22 15:00:15,862:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:15,862:INFO:Creating metrics dataframe
2025-04-22 15:00:15,877:INFO:Initializing Lasso Least Angle Regression
2025-04-22 15:00:15,877:INFO:Total runtime is 0.40117367903391515 minutes
2025-04-22 15:00:15,882:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:15,887:INFO:Initializing create_model()
2025-04-22 15:00:15,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:15,887:INFO:Checking exceptions
2025-04-22 15:00:15,887:INFO:Importing libraries
2025-04-22 15:00:15,887:INFO:Copying training dataset
2025-04-22 15:00:15,895:INFO:Defining folds
2025-04-22 15:00:15,895:INFO:Declaring metric variables
2025-04-22 15:00:15,902:INFO:Importing untrained model
2025-04-22 15:00:15,908:INFO:Lasso Least Angle Regression Imported successfully
2025-04-22 15:00:15,920:INFO:Starting cross validation
2025-04-22 15:00:15,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:16,121:INFO:Calculating mean and std
2025-04-22 15:00:16,121:INFO:Creating metrics dataframe
2025-04-22 15:00:16,127:INFO:Uploading results into container
2025-04-22 15:00:16,127:INFO:Uploading model into container now
2025-04-22 15:00:16,127:INFO:_master_model_container: 6
2025-04-22 15:00:16,127:INFO:_display_container: 2
2025-04-22 15:00:16,127:INFO:LassoLars(random_state=123)
2025-04-22 15:00:16,127:INFO:create_model() successfully completed......................................
2025-04-22 15:00:17,130:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:17,130:INFO:Creating metrics dataframe
2025-04-22 15:00:17,147:INFO:Initializing Orthogonal Matching Pursuit
2025-04-22 15:00:17,148:INFO:Total runtime is 0.4223450899124145 minutes
2025-04-22 15:00:17,152:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:17,154:INFO:Initializing create_model()
2025-04-22 15:00:17,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:17,154:INFO:Checking exceptions
2025-04-22 15:00:17,154:INFO:Importing libraries
2025-04-22 15:00:17,154:INFO:Copying training dataset
2025-04-22 15:00:17,161:INFO:Defining folds
2025-04-22 15:00:17,161:INFO:Declaring metric variables
2025-04-22 15:00:17,170:INFO:Importing untrained model
2025-04-22 15:00:17,175:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-22 15:00:17,191:INFO:Starting cross validation
2025-04-22 15:00:17,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:17,380:INFO:Calculating mean and std
2025-04-22 15:00:17,381:INFO:Creating metrics dataframe
2025-04-22 15:00:17,381:INFO:Uploading results into container
2025-04-22 15:00:17,381:INFO:Uploading model into container now
2025-04-22 15:00:17,381:INFO:_master_model_container: 7
2025-04-22 15:00:17,381:INFO:_display_container: 2
2025-04-22 15:00:17,381:INFO:OrthogonalMatchingPursuit()
2025-04-22 15:00:17,381:INFO:create_model() successfully completed......................................
2025-04-22 15:00:18,400:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:18,400:INFO:Creating metrics dataframe
2025-04-22 15:00:18,414:INFO:Initializing Bayesian Ridge
2025-04-22 15:00:18,414:INFO:Total runtime is 0.44344402949015294 minutes
2025-04-22 15:00:18,421:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:18,421:INFO:Initializing create_model()
2025-04-22 15:00:18,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:18,421:INFO:Checking exceptions
2025-04-22 15:00:18,422:INFO:Importing libraries
2025-04-22 15:00:18,422:INFO:Copying training dataset
2025-04-22 15:00:18,431:INFO:Defining folds
2025-04-22 15:00:18,431:INFO:Declaring metric variables
2025-04-22 15:00:18,438:INFO:Importing untrained model
2025-04-22 15:00:18,443:INFO:Bayesian Ridge Imported successfully
2025-04-22 15:00:18,456:INFO:Starting cross validation
2025-04-22 15:00:18,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:18,659:INFO:Calculating mean and std
2025-04-22 15:00:18,660:INFO:Creating metrics dataframe
2025-04-22 15:00:18,660:INFO:Uploading results into container
2025-04-22 15:00:18,660:INFO:Uploading model into container now
2025-04-22 15:00:18,660:INFO:_master_model_container: 8
2025-04-22 15:00:18,660:INFO:_display_container: 2
2025-04-22 15:00:18,667:INFO:BayesianRidge()
2025-04-22 15:00:18,667:INFO:create_model() successfully completed......................................
2025-04-22 15:00:19,693:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:19,693:INFO:Creating metrics dataframe
2025-04-22 15:00:19,699:INFO:Initializing Passive Aggressive Regressor
2025-04-22 15:00:19,708:INFO:Total runtime is 0.4650215586026509 minutes
2025-04-22 15:00:19,713:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:19,715:INFO:Initializing create_model()
2025-04-22 15:00:19,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:19,715:INFO:Checking exceptions
2025-04-22 15:00:19,716:INFO:Importing libraries
2025-04-22 15:00:19,716:INFO:Copying training dataset
2025-04-22 15:00:19,717:INFO:Defining folds
2025-04-22 15:00:19,725:INFO:Declaring metric variables
2025-04-22 15:00:19,729:INFO:Importing untrained model
2025-04-22 15:00:19,733:INFO:Passive Aggressive Regressor Imported successfully
2025-04-22 15:00:19,749:INFO:Starting cross validation
2025-04-22 15:00:19,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:19,960:INFO:Calculating mean and std
2025-04-22 15:00:19,963:INFO:Creating metrics dataframe
2025-04-22 15:00:19,964:INFO:Uploading results into container
2025-04-22 15:00:19,964:INFO:Uploading model into container now
2025-04-22 15:00:19,964:INFO:_master_model_container: 9
2025-04-22 15:00:19,964:INFO:_display_container: 2
2025-04-22 15:00:19,964:INFO:PassiveAggressiveRegressor(random_state=123)
2025-04-22 15:00:19,964:INFO:create_model() successfully completed......................................
2025-04-22 15:00:20,964:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:20,964:INFO:Creating metrics dataframe
2025-04-22 15:00:20,980:INFO:Initializing Huber Regressor
2025-04-22 15:00:20,980:INFO:Total runtime is 0.48621565500895175 minutes
2025-04-22 15:00:20,989:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:20,989:INFO:Initializing create_model()
2025-04-22 15:00:20,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:20,989:INFO:Checking exceptions
2025-04-22 15:00:20,989:INFO:Importing libraries
2025-04-22 15:00:20,989:INFO:Copying training dataset
2025-04-22 15:00:20,995:INFO:Defining folds
2025-04-22 15:00:20,995:INFO:Declaring metric variables
2025-04-22 15:00:21,007:INFO:Importing untrained model
2025-04-22 15:00:21,013:INFO:Huber Regressor Imported successfully
2025-04-22 15:00:21,025:INFO:Starting cross validation
2025-04-22 15:00:21,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:21,272:INFO:Calculating mean and std
2025-04-22 15:00:21,274:INFO:Creating metrics dataframe
2025-04-22 15:00:21,274:INFO:Uploading results into container
2025-04-22 15:00:21,274:INFO:Uploading model into container now
2025-04-22 15:00:21,274:INFO:_master_model_container: 10
2025-04-22 15:00:21,274:INFO:_display_container: 2
2025-04-22 15:00:21,274:INFO:HuberRegressor()
2025-04-22 15:00:21,274:INFO:create_model() successfully completed......................................
2025-04-22 15:00:22,317:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:22,317:INFO:Creating metrics dataframe
2025-04-22 15:00:22,339:INFO:Initializing K Neighbors Regressor
2025-04-22 15:00:22,340:INFO:Total runtime is 0.5088726043701172 minutes
2025-04-22 15:00:22,345:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:22,347:INFO:Initializing create_model()
2025-04-22 15:00:22,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:22,347:INFO:Checking exceptions
2025-04-22 15:00:22,348:INFO:Importing libraries
2025-04-22 15:00:22,348:INFO:Copying training dataset
2025-04-22 15:00:22,355:INFO:Defining folds
2025-04-22 15:00:22,355:INFO:Declaring metric variables
2025-04-22 15:00:22,364:INFO:Importing untrained model
2025-04-22 15:00:22,372:INFO:K Neighbors Regressor Imported successfully
2025-04-22 15:00:22,386:INFO:Starting cross validation
2025-04-22 15:00:22,387:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:22,641:INFO:Calculating mean and std
2025-04-22 15:00:22,641:INFO:Creating metrics dataframe
2025-04-22 15:00:22,641:INFO:Uploading results into container
2025-04-22 15:00:22,641:INFO:Uploading model into container now
2025-04-22 15:00:22,648:INFO:_master_model_container: 11
2025-04-22 15:00:22,648:INFO:_display_container: 2
2025-04-22 15:00:22,649:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-22 15:00:22,649:INFO:create_model() successfully completed......................................
2025-04-22 15:00:23,675:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:23,675:INFO:Creating metrics dataframe
2025-04-22 15:00:23,692:INFO:Initializing Decision Tree Regressor
2025-04-22 15:00:23,692:INFO:Total runtime is 0.5314165631930033 minutes
2025-04-22 15:00:23,698:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:23,699:INFO:Initializing create_model()
2025-04-22 15:00:23,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:23,699:INFO:Checking exceptions
2025-04-22 15:00:23,699:INFO:Importing libraries
2025-04-22 15:00:23,699:INFO:Copying training dataset
2025-04-22 15:00:23,707:INFO:Defining folds
2025-04-22 15:00:23,708:INFO:Declaring metric variables
2025-04-22 15:00:23,714:INFO:Importing untrained model
2025-04-22 15:00:23,716:INFO:Decision Tree Regressor Imported successfully
2025-04-22 15:00:23,735:INFO:Starting cross validation
2025-04-22 15:00:23,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:23,965:INFO:Calculating mean and std
2025-04-22 15:00:23,967:INFO:Creating metrics dataframe
2025-04-22 15:00:23,969:INFO:Uploading results into container
2025-04-22 15:00:23,969:INFO:Uploading model into container now
2025-04-22 15:00:23,969:INFO:_master_model_container: 12
2025-04-22 15:00:23,969:INFO:_display_container: 2
2025-04-22 15:00:23,969:INFO:DecisionTreeRegressor(random_state=123)
2025-04-22 15:00:23,973:INFO:create_model() successfully completed......................................
2025-04-22 15:00:24,999:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:24,999:INFO:Creating metrics dataframe
2025-04-22 15:00:25,010:INFO:Initializing Random Forest Regressor
2025-04-22 15:00:25,010:INFO:Total runtime is 0.5533907731374105 minutes
2025-04-22 15:00:25,029:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:25,033:INFO:Initializing create_model()
2025-04-22 15:00:25,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:25,033:INFO:Checking exceptions
2025-04-22 15:00:25,033:INFO:Importing libraries
2025-04-22 15:00:25,033:INFO:Copying training dataset
2025-04-22 15:00:25,034:INFO:Defining folds
2025-04-22 15:00:25,034:INFO:Declaring metric variables
2025-04-22 15:00:25,048:INFO:Importing untrained model
2025-04-22 15:00:25,053:INFO:Random Forest Regressor Imported successfully
2025-04-22 15:00:25,063:INFO:Starting cross validation
2025-04-22 15:00:25,068:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:27,557:INFO:Calculating mean and std
2025-04-22 15:00:27,557:INFO:Creating metrics dataframe
2025-04-22 15:00:27,557:INFO:Uploading results into container
2025-04-22 15:00:27,564:INFO:Uploading model into container now
2025-04-22 15:00:27,566:INFO:_master_model_container: 13
2025-04-22 15:00:27,566:INFO:_display_container: 2
2025-04-22 15:00:27,566:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-04-22 15:00:27,566:INFO:create_model() successfully completed......................................
2025-04-22 15:00:28,563:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:28,563:INFO:Creating metrics dataframe
2025-04-22 15:00:28,592:INFO:Initializing Extra Trees Regressor
2025-04-22 15:00:28,592:INFO:Total runtime is 0.613077441851298 minutes
2025-04-22 15:00:28,598:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:28,598:INFO:Initializing create_model()
2025-04-22 15:00:28,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:28,598:INFO:Checking exceptions
2025-04-22 15:00:28,598:INFO:Importing libraries
2025-04-22 15:00:28,598:INFO:Copying training dataset
2025-04-22 15:00:28,606:INFO:Defining folds
2025-04-22 15:00:28,606:INFO:Declaring metric variables
2025-04-22 15:00:28,621:INFO:Importing untrained model
2025-04-22 15:00:28,628:INFO:Extra Trees Regressor Imported successfully
2025-04-22 15:00:28,649:INFO:Starting cross validation
2025-04-22 15:00:28,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:30,567:INFO:Calculating mean and std
2025-04-22 15:00:30,569:INFO:Creating metrics dataframe
2025-04-22 15:00:30,573:INFO:Uploading results into container
2025-04-22 15:00:30,573:INFO:Uploading model into container now
2025-04-22 15:00:30,573:INFO:_master_model_container: 14
2025-04-22 15:00:30,573:INFO:_display_container: 2
2025-04-22 15:00:30,573:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-04-22 15:00:30,573:INFO:create_model() successfully completed......................................
2025-04-22 15:00:31,745:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:31,745:INFO:Creating metrics dataframe
2025-04-22 15:00:31,763:INFO:Initializing AdaBoost Regressor
2025-04-22 15:00:31,763:INFO:Total runtime is 0.6659246325492858 minutes
2025-04-22 15:00:31,770:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:31,770:INFO:Initializing create_model()
2025-04-22 15:00:31,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:31,770:INFO:Checking exceptions
2025-04-22 15:00:31,770:INFO:Importing libraries
2025-04-22 15:00:31,770:INFO:Copying training dataset
2025-04-22 15:00:31,780:INFO:Defining folds
2025-04-22 15:00:31,780:INFO:Declaring metric variables
2025-04-22 15:00:31,786:INFO:Importing untrained model
2025-04-22 15:00:31,797:INFO:AdaBoost Regressor Imported successfully
2025-04-22 15:00:31,827:INFO:Starting cross validation
2025-04-22 15:00:31,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:32,523:INFO:Calculating mean and std
2025-04-22 15:00:32,523:INFO:Creating metrics dataframe
2025-04-22 15:00:32,529:INFO:Uploading results into container
2025-04-22 15:00:32,530:INFO:Uploading model into container now
2025-04-22 15:00:32,530:INFO:_master_model_container: 15
2025-04-22 15:00:32,530:INFO:_display_container: 2
2025-04-22 15:00:32,533:INFO:AdaBoostRegressor(random_state=123)
2025-04-22 15:00:32,533:INFO:create_model() successfully completed......................................
2025-04-22 15:00:33,592:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:33,592:INFO:Creating metrics dataframe
2025-04-22 15:00:33,618:INFO:Initializing Gradient Boosting Regressor
2025-04-22 15:00:33,618:INFO:Total runtime is 0.6968542456626892 minutes
2025-04-22 15:00:33,625:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:33,625:INFO:Initializing create_model()
2025-04-22 15:00:33,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:33,625:INFO:Checking exceptions
2025-04-22 15:00:33,625:INFO:Importing libraries
2025-04-22 15:00:33,625:INFO:Copying training dataset
2025-04-22 15:00:33,640:INFO:Defining folds
2025-04-22 15:00:33,640:INFO:Declaring metric variables
2025-04-22 15:00:33,650:INFO:Importing untrained model
2025-04-22 15:00:33,659:INFO:Gradient Boosting Regressor Imported successfully
2025-04-22 15:00:33,676:INFO:Starting cross validation
2025-04-22 15:00:33,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:34,775:INFO:Calculating mean and std
2025-04-22 15:00:34,778:INFO:Creating metrics dataframe
2025-04-22 15:00:34,786:INFO:Uploading results into container
2025-04-22 15:00:34,787:INFO:Uploading model into container now
2025-04-22 15:00:34,788:INFO:_master_model_container: 16
2025-04-22 15:00:34,788:INFO:_display_container: 2
2025-04-22 15:00:34,789:INFO:GradientBoostingRegressor(random_state=123)
2025-04-22 15:00:34,789:INFO:create_model() successfully completed......................................
2025-04-22 15:00:35,777:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:35,777:INFO:Creating metrics dataframe
2025-04-22 15:00:35,796:INFO:Initializing Light Gradient Boosting Machine
2025-04-22 15:00:35,797:INFO:Total runtime is 0.7331711530685424 minutes
2025-04-22 15:00:35,803:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:35,803:INFO:Initializing create_model()
2025-04-22 15:00:35,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:35,803:INFO:Checking exceptions
2025-04-22 15:00:35,803:INFO:Importing libraries
2025-04-22 15:00:35,803:INFO:Copying training dataset
2025-04-22 15:00:35,806:INFO:Defining folds
2025-04-22 15:00:35,806:INFO:Declaring metric variables
2025-04-22 15:00:35,822:INFO:Importing untrained model
2025-04-22 15:00:35,832:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-22 15:00:35,845:INFO:Starting cross validation
2025-04-22 15:00:35,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:37,596:INFO:Calculating mean and std
2025-04-22 15:00:37,598:INFO:Creating metrics dataframe
2025-04-22 15:00:37,603:INFO:Uploading results into container
2025-04-22 15:00:37,603:INFO:Uploading model into container now
2025-04-22 15:00:37,603:INFO:_master_model_container: 17
2025-04-22 15:00:37,603:INFO:_display_container: 2
2025-04-22 15:00:37,603:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-04-22 15:00:37,603:INFO:create_model() successfully completed......................................
2025-04-22 15:00:38,664:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:38,664:INFO:Creating metrics dataframe
2025-04-22 15:00:38,681:INFO:Initializing Dummy Regressor
2025-04-22 15:00:38,681:INFO:Total runtime is 0.7812278509140014 minutes
2025-04-22 15:00:38,691:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:38,691:INFO:Initializing create_model()
2025-04-22 15:00:38,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001366729A950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:38,694:INFO:Checking exceptions
2025-04-22 15:00:38,694:INFO:Importing libraries
2025-04-22 15:00:38,694:INFO:Copying training dataset
2025-04-22 15:00:38,708:INFO:Defining folds
2025-04-22 15:00:38,708:INFO:Declaring metric variables
2025-04-22 15:00:38,716:INFO:Importing untrained model
2025-04-22 15:00:38,724:INFO:Dummy Regressor Imported successfully
2025-04-22 15:00:38,737:INFO:Starting cross validation
2025-04-22 15:00:38,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:38,981:INFO:Calculating mean and std
2025-04-22 15:00:38,983:INFO:Creating metrics dataframe
2025-04-22 15:00:38,985:INFO:Uploading results into container
2025-04-22 15:00:38,985:INFO:Uploading model into container now
2025-04-22 15:00:38,985:INFO:_master_model_container: 18
2025-04-22 15:00:38,985:INFO:_display_container: 2
2025-04-22 15:00:38,985:INFO:DummyRegressor()
2025-04-22 15:00:38,990:INFO:create_model() successfully completed......................................
2025-04-22 15:00:40,054:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:40,054:INFO:Creating metrics dataframe
2025-04-22 15:00:40,076:WARNING:c:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-04-22 15:00:40,091:INFO:Initializing create_model()
2025-04-22 15:00:40,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:40,092:INFO:Checking exceptions
2025-04-22 15:00:40,095:INFO:Importing libraries
2025-04-22 15:00:40,095:INFO:Copying training dataset
2025-04-22 15:00:40,101:INFO:Defining folds
2025-04-22 15:00:40,101:INFO:Declaring metric variables
2025-04-22 15:00:40,101:INFO:Importing untrained model
2025-04-22 15:00:40,101:INFO:Declaring custom model
2025-04-22 15:00:40,101:INFO:Linear Regression Imported successfully
2025-04-22 15:00:40,110:INFO:Cross validation set to False
2025-04-22 15:00:40,111:INFO:Fitting Model
2025-04-22 15:00:40,160:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:40,160:INFO:create_model() successfully completed......................................
2025-04-22 15:00:41,195:INFO:_master_model_container: 18
2025-04-22 15:00:41,196:INFO:_display_container: 2
2025-04-22 15:00:41,196:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:41,196:INFO:compare_models() successfully completed......................................
2025-04-22 15:00:41,245:INFO:Initializing tune_model()
2025-04-22 15:00:41,245:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-04-22 15:00:41,245:INFO:Checking exceptions
2025-04-22 15:00:41,297:INFO:Copying training dataset
2025-04-22 15:00:41,312:INFO:Checking base model
2025-04-22 15:00:41,312:INFO:Base model : Linear Regression
2025-04-22 15:00:41,320:INFO:Declaring metric variables
2025-04-22 15:00:41,323:INFO:Defining Hyperparameters
2025-04-22 15:00:41,323:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-04-22 15:00:42,307:INFO:Tuning with n_jobs=-1
2025-04-22 15:00:42,307:INFO:Initializing GridSearchCV
2025-04-22 15:00:42,740:INFO:best_params: {'actual_estimator__fit_intercept': True}
2025-04-22 15:00:42,740:INFO:Hyperparameter search completed
2025-04-22 15:00:42,740:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:42,740:INFO:Initializing create_model()
2025-04-22 15:00:42,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013660A4F6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True})
2025-04-22 15:00:42,740:INFO:Checking exceptions
2025-04-22 15:00:42,740:INFO:Importing libraries
2025-04-22 15:00:42,740:INFO:Copying training dataset
2025-04-22 15:00:42,752:INFO:Defining folds
2025-04-22 15:00:42,752:INFO:Declaring metric variables
2025-04-22 15:00:42,752:INFO:Importing untrained model
2025-04-22 15:00:42,752:INFO:Declaring custom model
2025-04-22 15:00:42,766:INFO:Linear Regression Imported successfully
2025-04-22 15:00:42,776:INFO:Starting cross validation
2025-04-22 15:00:42,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:42,954:INFO:Calculating mean and std
2025-04-22 15:00:42,956:INFO:Creating metrics dataframe
2025-04-22 15:00:42,966:INFO:Finalizing model
2025-04-22 15:00:43,023:INFO:Uploading results into container
2025-04-22 15:00:43,023:INFO:Uploading model into container now
2025-04-22 15:00:43,023:INFO:_master_model_container: 19
2025-04-22 15:00:43,023:INFO:_display_container: 3
2025-04-22 15:00:43,023:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:43,023:INFO:create_model() successfully completed......................................
2025-04-22 15:00:44,014:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:44,014:INFO:choose_better activated
2025-04-22 15:00:44,025:INFO:SubProcess create_model() called ==================================
2025-04-22 15:00:44,028:INFO:Initializing create_model()
2025-04-22 15:00:44,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:44,028:INFO:Checking exceptions
2025-04-22 15:00:44,032:INFO:Importing libraries
2025-04-22 15:00:44,033:INFO:Copying training dataset
2025-04-22 15:00:44,036:INFO:Defining folds
2025-04-22 15:00:44,036:INFO:Declaring metric variables
2025-04-22 15:00:44,036:INFO:Importing untrained model
2025-04-22 15:00:44,041:INFO:Declaring custom model
2025-04-22 15:00:44,041:INFO:Linear Regression Imported successfully
2025-04-22 15:00:44,042:INFO:Starting cross validation
2025-04-22 15:00:44,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-22 15:00:44,298:INFO:Calculating mean and std
2025-04-22 15:00:44,298:INFO:Creating metrics dataframe
2025-04-22 15:00:44,298:INFO:Finalizing model
2025-04-22 15:00:44,362:INFO:Uploading results into container
2025-04-22 15:00:44,363:INFO:Uploading model into container now
2025-04-22 15:00:44,363:INFO:_master_model_container: 20
2025-04-22 15:00:44,363:INFO:_display_container: 4
2025-04-22 15:00:44,363:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:44,363:INFO:create_model() successfully completed......................................
2025-04-22 15:00:45,430:INFO:SubProcess create_model() end ==================================
2025-04-22 15:00:45,430:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.9548
2025-04-22 15:00:45,432:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.9548
2025-04-22 15:00:45,433:INFO:LinearRegression(n_jobs=-1) is best model
2025-04-22 15:00:45,433:INFO:choose_better completed
2025-04-22 15:00:45,433:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-22 15:00:45,457:INFO:_master_model_container: 20
2025-04-22 15:00:45,458:INFO:_display_container: 3
2025-04-22 15:00:45,459:INFO:LinearRegression(n_jobs=-1)
2025-04-22 15:00:45,459:INFO:tune_model() successfully completed......................................
2025-04-22 15:00:46,601:INFO:Initializing finalize_model()
2025-04-22 15:00:46,601:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-04-22 15:00:46,601:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-04-22 15:00:46,612:INFO:Initializing create_model()
2025-04-22 15:00:46,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-22 15:00:46,616:INFO:Checking exceptions
2025-04-22 15:00:46,620:INFO:Importing libraries
2025-04-22 15:00:46,620:INFO:Copying training dataset
2025-04-22 15:00:46,620:INFO:Defining folds
2025-04-22 15:00:46,620:INFO:Declaring metric variables
2025-04-22 15:00:46,620:INFO:Importing untrained model
2025-04-22 15:00:46,624:INFO:Declaring custom model
2025-04-22 15:00:46,624:INFO:Linear Regression Imported successfully
2025-04-22 15:00:46,628:INFO:Cross validation set to False
2025-04-22 15:00:46,628:INFO:Fitting Model
2025-04-22 15:00:46,782:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-04-22 15:00:46,782:INFO:create_model() successfully completed......................................
2025-04-22 15:00:47,921:INFO:_master_model_container: 20
2025-04-22 15:00:47,921:INFO:_display_container: 3
2025-04-22 15:00:47,973:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-04-22 15:00:47,973:INFO:finalize_model() successfully completed......................................
2025-04-22 15:00:49,147:INFO:Initializing save_model()
2025-04-22 15:00:49,147:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=marathon_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\sxwem\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}])))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-22 15:00:49,147:INFO:Adding model into prep_pipe
2025-04-22 15:00:49,147:WARNING:Only Model saved as it was a pipeline.
2025-04-22 15:00:49,154:INFO:marathon_pipeline.pkl saved in current working directory
2025-04-22 15:00:49,207:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-04-22 15:00:49,207:INFO:save_model() successfully completed......................................
2025-04-22 15:00:50,326:INFO:Initializing load_model()
2025-04-22 15:00:50,326:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:00:50,432:INFO:Initializing predict_model()
2025-04-22 15:00:50,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\sxwem\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000136612A7F60>)
2025-04-22 15:00:50,432:INFO:Checking exceptions
2025-04-22 15:00:50,432:INFO:Preloading libraries
2025-04-22 15:00:50,445:INFO:Set up data.
2025-04-22 15:00:50,449:INFO:Set up index.
2025-04-22 15:00:51,514:INFO:Initializing predict_model()
2025-04-22 15:00:51,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000136493AF2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000136677180E0>)
2025-04-22 15:00:51,514:INFO:Checking exceptions
2025-04-22 15:00:51,514:INFO:Preloading libraries
2025-04-22 15:00:51,522:INFO:Set up data.
2025-04-22 15:00:51,529:INFO:Set up index.
2025-04-22 15:17:14,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 15:17:14,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 15:17:14,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 15:17:14,312:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 15:18:25,522:INFO:Initializing load_model()
2025-04-22 15:18:25,523:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:18:25,654:INFO:Initializing predict_model()
2025-04-22 15:18:25,654:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFADAD6B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFADDA0680>)
2025-04-22 15:18:25,654:INFO:Checking exceptions
2025-04-22 15:18:25,654:INFO:Preloading libraries
2025-04-22 15:18:25,654:INFO:Set up data.
2025-04-22 15:18:25,654:INFO:Set up index.
2025-04-22 15:20:22,667:INFO:Initializing load_model()
2025-04-22 15:20:22,667:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:20:22,742:INFO:Initializing predict_model()
2025-04-22 15:20:22,742:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFADE1F590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFB096B880>)
2025-04-22 15:20:22,742:INFO:Checking exceptions
2025-04-22 15:20:22,742:INFO:Preloading libraries
2025-04-22 15:20:22,742:INFO:Set up data.
2025-04-22 15:20:22,745:INFO:Set up index.
2025-04-22 15:20:31,670:INFO:Initializing load_model()
2025-04-22 15:20:31,671:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:20:31,753:INFO:Initializing predict_model()
2025-04-22 15:20:31,753:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFB09871D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFADDB14E0>)
2025-04-22 15:20:31,754:INFO:Checking exceptions
2025-04-22 15:20:31,754:INFO:Preloading libraries
2025-04-22 15:20:31,755:INFO:Set up data.
2025-04-22 15:20:31,756:INFO:Set up index.
2025-04-22 15:22:03,522:INFO:Initializing load_model()
2025-04-22 15:22:03,522:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:22:03,613:INFO:Initializing predict_model()
2025-04-22 15:22:03,628:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFADF1DC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFB09CFCE0>)
2025-04-22 15:22:03,628:INFO:Checking exceptions
2025-04-22 15:22:03,628:INFO:Preloading libraries
2025-04-22 15:22:03,628:INFO:Set up data.
2025-04-22 15:22:03,633:INFO:Set up index.
2025-04-22 15:24:41,762:INFO:Initializing load_model()
2025-04-22 15:24:41,762:INFO:load_model(model_name=<_io.BytesIO object at 0x000001DFADFA4EA0>, platform=None, authentication=None, verbose=True)
2025-04-22 15:27:21,983:INFO:Initializing load_model()
2025-04-22 15:27:21,988:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:27:22,057:INFO:Initializing predict_model()
2025-04-22 15:27:22,057:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFAE2E37D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFADDA0220>)
2025-04-22 15:27:22,057:INFO:Checking exceptions
2025-04-22 15:27:22,057:INFO:Preloading libraries
2025-04-22 15:27:22,057:INFO:Set up data.
2025-04-22 15:27:22,064:INFO:Set up index.
2025-04-22 15:29:40,753:INFO:Initializing load_model()
2025-04-22 15:29:40,753:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:29:40,819:INFO:Initializing predict_model()
2025-04-22 15:29:40,820:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFADF76210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFB0B24A40>)
2025-04-22 15:29:40,820:INFO:Checking exceptions
2025-04-22 15:29:40,820:INFO:Preloading libraries
2025-04-22 15:29:40,821:INFO:Set up data.
2025-04-22 15:29:40,823:INFO:Set up index.
2025-04-22 15:32:18,844:INFO:Initializing load_model()
2025-04-22 15:32:18,844:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 15:32:18,920:INFO:Initializing predict_model()
2025-04-22 15:32:18,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DFAE382950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFB0B03240>)
2025-04-22 15:32:18,920:INFO:Checking exceptions
2025-04-22 15:32:18,920:INFO:Preloading libraries
2025-04-22 15:32:18,921:INFO:Set up data.
2025-04-22 15:32:18,923:INFO:Set up index.
2025-04-22 16:39:44,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 16:39:44,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 16:39:44,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 16:39:44,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 16:41:15,587:INFO:Initializing load_model()
2025-04-22 16:41:15,589:INFO:load_model(model_name=marathon_pipeline, platform=None, authentication=None, verbose=True)
2025-04-22 16:43:32,924:INFO:Initializing load_model()
2025-04-22 16:43:32,924:INFO:load_model(model_name=<_io.BytesIO object at 0x00000182EB25E520>, platform=None, authentication=None, verbose=True)
2025-04-22 16:43:54,267:INFO:Initializing load_model()
2025-04-22 16:43:54,267:INFO:load_model(model_name=<_io.BytesIO object at 0x00000182EC92A520>, platform=None, authentication=None, verbose=True)
2025-04-22 16:45:43,725:INFO:Initializing load_model()
2025-04-22 16:45:43,725:INFO:load_model(model_name=<_io.BytesIO object at 0x00000182EC94B1F0>, platform=None, authentication=None, verbose=True)
2025-04-22 16:45:59,630:INFO:Initializing load_model()
2025-04-22 16:45:59,630:INFO:load_model(model_name=<_io.BytesIO object at 0x00000182EC94B2E0>, platform=None, authentication=None, verbose=True)
2025-04-22 16:47:04,504:INFO:Initializing load_model()
2025-04-22 16:47:04,504:INFO:load_model(model_name=<_io.BytesIO object at 0x00000182EC948310>, platform=None, authentication=None, verbose=True)
2025-04-22 16:58:51,070:INFO:Initializing predict_model()
2025-04-22 16:58:51,070:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182EC3A5150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182A3532A20>)
2025-04-22 16:58:51,070:INFO:Checking exceptions
2025-04-22 16:58:51,070:INFO:Preloading libraries
2025-04-22 16:58:51,070:INFO:Set up data.
2025-04-22 16:58:51,070:INFO:Set up index.
2025-04-22 17:00:00,480:INFO:Initializing predict_model()
2025-04-22 17:00:00,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182EC3E8D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182EB068540>)
2025-04-22 17:00:00,480:INFO:Checking exceptions
2025-04-22 17:00:00,480:INFO:Preloading libraries
2025-04-22 17:00:00,480:INFO:Set up data.
2025-04-22 17:00:00,480:INFO:Set up index.
2025-04-22 17:00:50,245:INFO:Initializing predict_model()
2025-04-22 17:00:50,245:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182ECFA9DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182ECF23C40>)
2025-04-22 17:00:50,245:INFO:Checking exceptions
2025-04-22 17:00:50,245:INFO:Preloading libraries
2025-04-22 17:00:50,247:INFO:Set up data.
2025-04-22 17:00:50,247:INFO:Set up index.
2025-04-22 17:03:15,882:INFO:Initializing predict_model()
2025-04-22 17:03:15,882:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182ECFA51D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182EB0B4EA0>)
2025-04-22 17:03:15,882:INFO:Checking exceptions
2025-04-22 17:03:15,882:INFO:Preloading libraries
2025-04-22 17:03:15,882:INFO:Set up data.
2025-04-22 17:03:15,882:INFO:Set up index.
2025-04-22 17:04:35,900:INFO:Initializing predict_model()
2025-04-22 17:04:35,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182F026C8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182EC263920>)
2025-04-22 17:04:35,900:INFO:Checking exceptions
2025-04-22 17:04:35,900:INFO:Preloading libraries
2025-04-22 17:04:35,900:INFO:Set up data.
2025-04-22 17:04:35,903:INFO:Set up index.
2025-04-22 20:14:01,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 20:14:01,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 20:14:01,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 20:14:01,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-22 20:27:39,808:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-22 20:27:39,875:INFO:Initializing predict_model()
2025-04-22 20:27:39,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002040B7328D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002040D76A840>)
2025-04-22 20:27:39,875:INFO:Checking exceptions
2025-04-22 20:27:39,875:INFO:Preloading libraries
2025-04-22 20:27:39,877:INFO:Set up data.
2025-04-22 20:27:39,880:INFO:Set up index.
2025-04-22 20:30:23,154:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-22 20:30:23,229:INFO:Initializing predict_model()
2025-04-22 20:30:23,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002040D2BA490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002040D9FA5C0>)
2025-04-22 20:30:23,229:INFO:Checking exceptions
2025-04-22 20:30:23,229:INFO:Preloading libraries
2025-04-22 20:30:23,229:INFO:Set up data.
2025-04-22 20:30:23,232:INFO:Set up index.
2025-04-23 18:06:23,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:06:23,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:06:23,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:06:23,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:10:06,034:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:10:06,097:INFO:Initializing predict_model()
2025-04-23 18:10:06,097:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22F862850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22FB83CE0>)
2025-04-23 18:10:06,097:INFO:Checking exceptions
2025-04-23 18:10:06,097:INFO:Preloading libraries
2025-04-23 18:10:06,097:INFO:Set up data.
2025-04-23 18:10:06,113:INFO:Set up index.
2025-04-23 18:18:29,499:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:18:29,571:INFO:Initializing predict_model()
2025-04-23 18:18:29,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D2327127D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22F1314E0>)
2025-04-23 18:18:29,571:INFO:Checking exceptions
2025-04-23 18:18:29,571:INFO:Preloading libraries
2025-04-23 18:18:29,572:INFO:Set up data.
2025-04-23 18:18:29,574:INFO:Set up index.
2025-04-23 18:18:36,369:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:18:36,447:INFO:Initializing predict_model()
2025-04-23 18:18:36,447:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22F7BAD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22E03B100>)
2025-04-23 18:18:36,447:INFO:Checking exceptions
2025-04-23 18:18:36,447:INFO:Preloading libraries
2025-04-23 18:18:36,447:INFO:Set up data.
2025-04-23 18:18:36,454:INFO:Set up index.
2025-04-23 18:18:40,956:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:18:41,025:INFO:Initializing predict_model()
2025-04-23 18:18:41,025:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22F916910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22DD07920>)
2025-04-23 18:18:41,025:INFO:Checking exceptions
2025-04-23 18:18:41,025:INFO:Preloading libraries
2025-04-23 18:18:41,025:INFO:Set up data.
2025-04-23 18:18:41,025:INFO:Set up index.
2025-04-23 18:19:28,886:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:19:28,970:INFO:Initializing predict_model()
2025-04-23 18:19:28,970:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D23275FF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22E039120>)
2025-04-23 18:19:28,970:INFO:Checking exceptions
2025-04-23 18:19:28,970:INFO:Preloading libraries
2025-04-23 18:19:28,970:INFO:Set up data.
2025-04-23 18:19:28,974:INFO:Set up index.
2025-04-23 18:23:29,569:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:23:29,641:INFO:Initializing predict_model()
2025-04-23 18:23:29,641:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22F56E610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22FBA45E0>)
2025-04-23 18:23:29,641:INFO:Checking exceptions
2025-04-23 18:23:29,641:INFO:Preloading libraries
2025-04-23 18:23:29,641:INFO:Set up data.
2025-04-23 18:23:29,644:INFO:Set up index.
2025-04-23 18:25:08,941:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:25:08,999:INFO:Initializing predict_model()
2025-04-23 18:25:08,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D232752010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22FDD2E80>)
2025-04-23 18:25:08,999:INFO:Checking exceptions
2025-04-23 18:25:08,999:INFO:Preloading libraries
2025-04-23 18:25:08,999:INFO:Set up data.
2025-04-23 18:25:08,999:INFO:Set up index.
2025-04-23 18:26:15,744:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:26:15,805:INFO:Initializing predict_model()
2025-04-23 18:26:15,806:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22F95CD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22E038B80>)
2025-04-23 18:26:15,806:INFO:Checking exceptions
2025-04-23 18:26:15,806:INFO:Preloading libraries
2025-04-23 18:26:15,806:INFO:Set up data.
2025-04-23 18:26:15,806:INFO:Set up index.
2025-04-23 18:27:35,557:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:27:35,620:INFO:Initializing predict_model()
2025-04-23 18:27:35,622:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22FE83850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22F57C220>)
2025-04-23 18:27:35,622:INFO:Checking exceptions
2025-04-23 18:27:35,622:INFO:Preloading libraries
2025-04-23 18:27:35,622:INFO:Set up data.
2025-04-23 18:27:35,622:INFO:Set up index.
2025-04-23 18:28:40,581:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 18:28:40,655:INFO:Initializing predict_model()
2025-04-23 18:28:40,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D22FEA3F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D22F9D3CE0>)
2025-04-23 18:28:40,655:INFO:Checking exceptions
2025-04-23 18:28:40,655:INFO:Preloading libraries
2025-04-23 18:28:40,655:INFO:Set up data.
2025-04-23 18:28:40,655:INFO:Set up index.
2025-04-23 18:37:09,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:37:09,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:37:09,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 18:37:09,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 23:28:30,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 23:28:30,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 23:28:30,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 23:28:30,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-23 23:31:04,475:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 23:31:04,542:INFO:Initializing predict_model()
2025-04-23 23:31:04,542:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F13F101D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F13E759E0>)
2025-04-23 23:31:04,542:INFO:Checking exceptions
2025-04-23 23:31:04,544:INFO:Preloading libraries
2025-04-23 23:31:04,544:INFO:Set up data.
2025-04-23 23:31:04,546:INFO:Set up index.
2025-04-23 23:33:47,315:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 23:33:47,377:INFO:Initializing predict_model()
2025-04-23 23:33:47,377:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F13CDA310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F14058360>)
2025-04-23 23:33:47,377:INFO:Checking exceptions
2025-04-23 23:33:47,377:INFO:Preloading libraries
2025-04-23 23:33:47,383:INFO:Set up data.
2025-04-23 23:33:47,385:INFO:Set up index.
2025-04-23 23:36:09,365:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 23:36:09,423:INFO:Initializing predict_model()
2025-04-23 23:36:09,423:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F13FDB810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F13E74680>)
2025-04-23 23:36:09,424:INFO:Checking exceptions
2025-04-23 23:36:09,424:INFO:Preloading libraries
2025-04-23 23:36:09,425:INFO:Set up data.
2025-04-23 23:36:09,425:INFO:Set up index.
2025-04-23 23:39:10,406:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 23:39:10,473:INFO:Initializing predict_model()
2025-04-23 23:39:10,473:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F16A25890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F12769260>)
2025-04-23 23:39:10,473:INFO:Checking exceptions
2025-04-23 23:39:10,473:INFO:Preloading libraries
2025-04-23 23:39:10,473:INFO:Set up data.
2025-04-23 23:39:10,482:INFO:Set up index.
2025-04-23 23:41:27,996:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-23 23:41:28,061:INFO:Initializing predict_model()
2025-04-23 23:41:28,061:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021F13FC2250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F124200E0>)
2025-04-23 23:41:28,061:INFO:Checking exceptions
2025-04-23 23:41:28,061:INFO:Preloading libraries
2025-04-23 23:41:28,061:INFO:Set up data.
2025-04-23 23:41:28,067:INFO:Set up index.
2025-04-24 12:00:32,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 12:00:32,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 12:00:32,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 12:00:32,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 12:03:27,453:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 12:03:27,518:INFO:Initializing predict_model()
2025-04-24 12:03:27,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019BAE3D21D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019BB0B67D80>)
2025-04-24 12:03:27,518:INFO:Checking exceptions
2025-04-24 12:03:27,518:INFO:Preloading libraries
2025-04-24 12:03:27,518:INFO:Set up data.
2025-04-24 12:03:27,530:INFO:Set up index.
2025-04-24 17:54:41,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 17:54:41,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 17:54:41,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 17:54:41,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-24 18:06:06,007:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:06:06,084:INFO:Initializing predict_model()
2025-04-24 18:06:06,088:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026702F6FAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704F3E980>)
2025-04-24 18:06:06,088:INFO:Checking exceptions
2025-04-24 18:06:06,088:INFO:Preloading libraries
2025-04-24 18:06:06,089:INFO:Set up data.
2025-04-24 18:06:06,089:INFO:Set up index.
2025-04-24 18:06:40,063:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:06:40,149:INFO:Initializing predict_model()
2025-04-24 18:06:40,149:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026702FC3550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704B57060>)
2025-04-24 18:06:40,149:INFO:Checking exceptions
2025-04-24 18:06:40,149:INFO:Preloading libraries
2025-04-24 18:06:40,149:INFO:Set up data.
2025-04-24 18:06:40,149:INFO:Set up index.
2025-04-24 18:10:28,199:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:10:28,261:INFO:Initializing predict_model()
2025-04-24 18:10:28,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026704C6B990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000267034A3EC0>)
2025-04-24 18:10:28,262:INFO:Checking exceptions
2025-04-24 18:10:28,262:INFO:Preloading libraries
2025-04-24 18:10:28,262:INFO:Set up data.
2025-04-24 18:10:28,262:INFO:Set up index.
2025-04-24 18:15:44,249:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:15:44,322:INFO:Initializing predict_model()
2025-04-24 18:15:44,322:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000267033AA690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002673B5A68E0>)
2025-04-24 18:15:44,322:INFO:Checking exceptions
2025-04-24 18:15:44,325:INFO:Preloading libraries
2025-04-24 18:15:44,325:INFO:Set up data.
2025-04-24 18:15:44,329:INFO:Set up index.
2025-04-24 18:16:25,158:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:16:25,233:INFO:Initializing predict_model()
2025-04-24 18:16:25,233:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026704B13CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000267049BB1A0>)
2025-04-24 18:16:25,233:INFO:Checking exceptions
2025-04-24 18:16:25,233:INFO:Preloading libraries
2025-04-24 18:16:25,233:INFO:Set up data.
2025-04-24 18:16:25,236:INFO:Set up index.
2025-04-24 18:16:40,485:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:16:40,566:INFO:Initializing predict_model()
2025-04-24 18:16:40,566:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000267049CA690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000267045A8680>)
2025-04-24 18:16:40,566:INFO:Checking exceptions
2025-04-24 18:16:40,566:INFO:Preloading libraries
2025-04-24 18:16:40,566:INFO:Set up data.
2025-04-24 18:16:40,566:INFO:Set up index.
2025-04-24 18:16:53,274:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:16:53,340:INFO:Initializing predict_model()
2025-04-24 18:16:53,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000267045C99D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704859800>)
2025-04-24 18:16:53,347:INFO:Checking exceptions
2025-04-24 18:16:53,347:INFO:Preloading libraries
2025-04-24 18:16:53,347:INFO:Set up data.
2025-04-24 18:16:53,350:INFO:Set up index.
2025-04-24 18:20:55,318:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:20:55,405:INFO:Initializing predict_model()
2025-04-24 18:20:55,405:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002670507A450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704DB8EA0>)
2025-04-24 18:20:55,405:INFO:Checking exceptions
2025-04-24 18:20:55,405:INFO:Preloading libraries
2025-04-24 18:20:55,405:INFO:Set up data.
2025-04-24 18:20:55,413:INFO:Set up index.
2025-04-24 18:21:34,181:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:21:34,254:INFO:Initializing predict_model()
2025-04-24 18:21:34,254:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026704F8D710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704B55E40>)
2025-04-24 18:21:34,254:INFO:Checking exceptions
2025-04-24 18:21:34,254:INFO:Preloading libraries
2025-04-24 18:21:34,254:INFO:Set up data.
2025-04-24 18:21:34,254:INFO:Set up index.
2025-04-24 18:22:04,673:WARNING:C:\Users\sxwem\miniconda3\envs\app_marathon\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-24 18:22:04,751:INFO:Initializing predict_model()
2025-04-24 18:22:04,755:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000267046039D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['time_5km', 'time_10km'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex'],
                                    transformer=OrdinalEncoder(cols=['sex'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026704D604A0>)
2025-04-24 18:22:04,755:INFO:Checking exceptions
2025-04-24 18:22:04,755:INFO:Preloading libraries
2025-04-24 18:22:04,755:INFO:Set up data.
2025-04-24 18:22:04,758:INFO:Set up index.
